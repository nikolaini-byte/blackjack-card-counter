{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\silve\\\\Downloads\\\\blackjack-card-counter-main\\\\frontend\\\\src\\\\components\\\\CardCounter.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useCallback, useEffect, useMemo } from 'react';\nimport { COUNTING_SYSTEMS, calculateTrueCount, getBetRecommendation } from '../utils/countingSystems';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst CardCounter = () => {\n  _s();\n  var _Object$entries$filte, _Object$entries$filte2;\n  // Card ranks constant\n  const cardRanks = ['2', '3', '4', '5', '6', '7', '8', '9', '10', 'J', 'Q', 'K', 'A'];\n\n  // Game state\n  const [decksRemaining, setDecksRemaining] = useState(3); // Default to 3 decks\n  const [inputMode, setInputMode] = useState('player'); // 'player' or 'dealer'\n  const [runningCount, setRunningCount] = useState(0);\n  const [showHelp, setShowHelp] = useState(false);\n  const [isLoading, setIsLoading] = useState(true);\n  const [selectedSystem, setSelectedSystem] = useState('HILO');\n  const [showSystemInfo, setShowSystemInfo] = useState(false);\n  const [error, setError] = useState('');\n\n  // Track hands\n  const [playerHands, setPlayerHands] = useState([[]]); // Array of hands for splits\n  const [dealerHand, setDealerHand] = useState([]);\n  const [currentHandIndex, setCurrentHandIndex] = useState(0);\n\n  // Current cards in play (for counting)\n  const [cards, setCards] = useState([]);\n\n  // Get current counting system\n  const currentSystem = useMemo(() => COUNTING_SYSTEMS[selectedSystem], [selectedSystem]);\n\n  // Calculate deck information\n  const totalCards = useMemo(() => Math.floor(decksRemaining * 52), [decksRemaining]);\n  const remainingCards = useMemo(() => Math.max(0, totalCards - cards.length), [totalCards, cards.length]);\n  const remainingDecks = useMemo(() => Math.max(0.1, Math.round(remainingCards / 52 * 100) / 100), [remainingCards]);\n  const usedDecks = useMemo(() => Math.max(0, Math.round((decksRemaining - remainingDecks) * 100) / 100), [decksRemaining, remainingDecks]);\n\n  // Alias remainingDecks as decksLeft for backward compatibility\n  const decksLeft = remainingDecks;\n\n  // State for card inputs and persistent history\n  const [playerCardsInput, setPlayerCardsInput] = useState('');\n  const [dealerCardsInput, setDealerCardsInput] = useState('');\n  // Persistent history of all cards ever played\n  const [cardHistory, setCardHistory] = useState([]);\n  // Track the last input that was processed to prevent duplicates\n  const [lastProcessedInputs, setLastProcessedInputs] = useState({\n    player: '',\n    dealer: ''\n  });\n\n  // Validate if a card rank is valid\n  const isValidCard = card => {\n    if (!card || !card.trim()) return false;\n    const validRanks = ['2', '3', '4', '5', '6', '7', '8', '9', '10', 'J', 'Q', 'K', 'A'];\n    let rank = card.trim().toUpperCase().replace(/[^A-Z0-9]/g, '');\n    if (rank.startsWith('10')) {\n      rank = '10';\n    } else {\n      rank = rank.charAt(0);\n    }\n    return validRanks.includes(rank) ? rank : null;\n  };\n\n  // Parse card string into array of card objects, only using ranks\n  const parseCards = (input, source) => {\n    if (!input.trim()) return [];\n\n    // First, validate all cards in the input\n    const cards = input.split(/[,\\s]+/).filter(card => card.trim().length > 0);\n\n    // Check for any invalid cards\n    const invalidCards = cards.filter(card => !isValidCard(card));\n    if (invalidCards.length > 0) {\n      setError(`Ungültige Karte(n): ${invalidCards.join(', ')}. Gültige Karten: 2-10, J, Q, K, A`);\n      return [];\n    }\n\n    // If all cards are valid, process them\n    return cards.map(card => {\n      const rank = isValidCard(card); // We know this is valid now\n      return {\n        rank,\n        source,\n        timestamp: Date.now(),\n        id: `${source}-${rank}-${Date.now()}-${Math.random().toString(36).substr(2, 6)}`\n      };\n    });\n  };\n\n  // Process new cards from inputs and add them to history\n  const processNewCards = (input, source) => {\n    // Clear any previous errors\n    setError('');\n    const newCards = parseCards(input, source);\n\n    // Only update if we have valid cards\n    if (newCards.length > 0) {\n      setCardHistory(prevHistory => {\n        // Only add cards that aren't already in history (based on timestamp)\n        const newUniqueCards = newCards.filter(newCard => !prevHistory.some(card => card.rank === newCard.rank && card.source === newCard.source &&\n        // Only consider very recent duplicates (last 2 seconds)\n        Date.now() - card.timestamp < 2000));\n        if (newUniqueCards.length === 0) {\n          // No new cards to add\n          return prevHistory;\n        }\n        return [...prevHistory, ...newUniqueCards];\n      });\n    }\n  };\n\n  // Clear all cards from history\n  const clearAllCards = () => {\n    setCardHistory([]);\n    setPlayerCardsInput('');\n    setDealerCardsInput('');\n    setLastProcessedInputs({\n      player: '',\n      dealer: ''\n    });\n    setError('');\n  };\n\n  // Remove a single card from history by ID\n  const removeCardFromHistory = cardId => {\n    setCardHistory(prevHistory => prevHistory.filter(card => card.id !== cardId));\n  };\n\n  // Update card history when inputs change\n  useEffect(() => {\n    const newPlayerCards = parseCards(playerCardsInput, 'player');\n    const newDealerCards = parseCards(dealerCardsInput, 'dealer');\n\n    // Update card history with unique cards from both hands\n    setCardHistory(prevHistory => {\n      // Keep only cards that are still in either hand\n      const remainingCards = prevHistory.filter(card => newPlayerCards.some(c => c.id === card.id) || newDealerCards.some(c => c.id === card.id));\n\n      // Add any new cards that aren't in history yet\n      const allNewCards = [...newPlayerCards, ...newDealerCards];\n      const newCards = allNewCards.filter(newCard => !remainingCards.some(card => card.id === newCard.id));\n      return [...remainingCards, ...newCards];\n    });\n  }, [playerCardsInput, dealerCardsInput]);\n\n  // Get current player and dealer cards from history (most recent first)\n  const playerCards = useMemo(() => [...cardHistory].reverse().filter(card => card.source === 'player'), [cardHistory]);\n  const dealerCards = useMemo(() => [...cardHistory].reverse().filter(card => card.source === 'dealer'), [cardHistory]);\n\n  // Calculate card counts for each rank\n  const cardCounts = useMemo(() => {\n    const counts = {};\n    cardRanks.forEach(rank => {\n      counts[rank] = cardHistory.filter(card => card.rank === rank).length;\n    });\n    return counts;\n  }, [cardHistory]);\n\n  // Calculate hand value (only using ranks, ignoring suits)\n  const calculateHandValue = useCallback(hand => {\n    let value = 0;\n    let aces = 0;\n    hand.forEach(card => {\n      const rank = card.rank;\n      if (rank === 'A') {\n        aces += 1;\n        value += 11;\n      } else if (['K', 'Q', 'J', '10'].includes(rank)) {\n        value += 10;\n      } else if (rank && !isNaN(rank)) {\n        value += parseInt(rank, 10);\n      }\n    });\n\n    // Handle aces (A can be 11 or 1)\n    while (value > 21 && aces > 0) {\n      value -= 10;\n      aces -= 1;\n    }\n    return value;\n  }, []);\n\n  // Calculate hand values\n  const playerHandValue = useMemo(() => calculateHandValue(playerCards), [playerCards, calculateHandValue]);\n  const dealerHandValue = useMemo(() => calculateHandValue(dealerCards), [dealerCards, calculateHandValue]);\n\n  // Update running count when card history changes\n  useEffect(() => {\n    const newCount = cardHistory.reduce((count, card) => {\n      return count + (currentSystem.cardValues[card.rank] || 0);\n    }, 0);\n    setRunningCount(newCount);\n    setCards(cardHistory);\n  }, [cardHistory, currentSystem]);\n\n  // Calculate unique card counts for display\n  const uniqueCardCounts = useMemo(() => {\n    const counts = {};\n    cardHistory.forEach(card => {\n      counts[card.rank] = (counts[card.rank] || 0) + 1;\n    });\n    return counts;\n  }, [cardHistory]);\n\n  // Calculate true count based on remaining decks\n  const trueCount = useMemo(() => {\n    if (remainingDecks <= 0) return 0;\n    // For unbalanced systems, return running count directly\n    if (!COUNTING_SYSTEMS[selectedSystem].balanced) {\n      return runningCount;\n    }\n    // For balanced systems, calculate true count\n    const tc = runningCount / remainingDecks;\n    return Math.round(tc * 10) / 10; // Round to 1 decimal\n  }, [runningCount, remainingDecks, selectedSystem]);\n\n  // Get bet recommendation based on true count and system\n  const betRec = useMemo(() => getBetRecommendation(trueCount, selectedSystem), [trueCount, selectedSystem]);\n\n  // Simulate loading\n  useEffect(() => {\n    const timer = setTimeout(() => setIsLoading(false), 1500);\n    return () => clearTimeout(timer);\n  }, []);\n  const handleCardInput = card => {\n    const upperCard = card.toUpperCase().trim();\n\n    // Clear previous errors\n    setError('');\n\n    // Check if input is empty\n    if (!upperCard) {\n      setError('Please enter a card value');\n      return;\n    }\n\n    // Check if card is valid in current counting system\n    if (currentSystem.cardValues[upperCard] === undefined) {\n      setError(`Invalid card: ${upperCard}. Valid cards are: ${Object.keys(currentSystem.cardValues).join(', ')}`);\n      return;\n    }\n\n    // If we get here, the card is valid\n    const value = currentSystem.cardValues[upperCard];\n    setCards(prev => [...prev, {\n      card: upperCard,\n      value\n    }]);\n    setRunningCount(prev => prev + value);\n\n    // Clear any previous error\n    setError('');\n  };\n  const handleKeyDown = e => {\n    if (e.key === 'Enter' && e.target.value) {\n      handleCardInput(e.target.value);\n      e.target.value = '';\n    }\n  };\n  const resetCount = () => {\n    setCards([]);\n    setRunningCount(0);\n  };\n  const removeLastCard = () => {\n    if (cards.length > 0) {\n      const lastCard = cards[cards.length - 1];\n      setCards(prev => prev.slice(0, -1));\n      setRunningCount(prev => prev - lastCard.value);\n    }\n  };\n  const getCardColorClass = value => {\n    if (value > 0) return 'bg-green-900/50 text-green-300';\n    if (value < 0) return 'bg-red-900/50 text-red-300';\n    return 'bg-gray-700/50';\n  };\n\n  // usedDecks and decksLeft are already defined above with useMemo\n\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"min-h-screen flex items-center justify-center bg-gray-900\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"w-16 h-16 border-4 border-blue-500 border-t-transparent rounded-full animate-spin mx-auto mb-4\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 312,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"text-2xl font-bold text-white\",\n          children: \"Card Counter Pro\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 313,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-gray-400 mt-2\",\n          children: \"Loading trainer...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 314,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 311,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 310,\n      columnNumber: 7\n    }, this);\n  }\n\n  // Render a card with proper styling (only showing rank)\n  const renderCard = (card, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `inline-block w-8 h-12 md:w-10 md:h-14 mx-0.5 rounded-md flex items-center justify-center text-sm font-bold ${currentSystem.cardValues[card.rank] > 0 ? 'bg-green-900/50 text-green-300' : currentSystem.cardValues[card.rank] < 0 ? 'bg-red-900/50 text-red-300' : 'bg-white/10 text-white'}`,\n    title: `${card.rank} (${currentSystem.cardValues[card.rank] >= 0 ? '+' : ''}${currentSystem.cardValues[card.rank]})`,\n    children: card.rank\n  }, index, false, {\n    fileName: _jsxFileName,\n    lineNumber: 322,\n    columnNumber: 5\n  }, this);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"min-h-screen bg-gray-900 text-white p-4 md:p-6\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"max-w-2xl mx-auto bg-gray-800 rounded-xl shadow-2xl overflow-hidden\",\n        style: {\n          minHeight: '90vh',\n          display: 'flex',\n          flexDirection: 'column'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-gray-900 p-6 border-b border-gray-700\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"text-2xl font-bold text-center\",\n            children: \"Card Counter Trainer\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 341,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-center text-gray-400 text-sm mt-1\",\n            children: [currentSystem.name, \" System\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 342,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mt-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex items-center justify-center gap-2\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"counting-system\",\n                className: \"text-sm text-gray-300\",\n                children: \"Counting System:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 346,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"relative\",\n                children: [/*#__PURE__*/_jsxDEV(\"select\", {\n                  id: \"counting-system\",\n                  value: selectedSystem,\n                  onChange: e => {\n                    setSelectedSystem(e.target.value);\n                    setCards([]);\n                    setRunningCount(0);\n                  },\n                  className: \"bg-gray-800 border border-gray-700 text-white text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 p-2 pr-8 appearance-none\",\n                  children: Object.values(COUNTING_SYSTEMS).map(system => /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: system.id,\n                    children: system.name\n                  }, system.id, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 361,\n                    columnNumber: 21\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 350,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"pointer-events-none absolute inset-y-0 right-0 flex items-center px-2 text-gray-400\",\n                  children: /*#__PURE__*/_jsxDEV(\"svg\", {\n                    className: \"fill-current h-4 w-4\",\n                    xmlns: \"http://www.w3.org/2000/svg\",\n                    viewBox: \"0 0 20 20\",\n                    children: /*#__PURE__*/_jsxDEV(\"path\", {\n                      d: \"M9.293 12.95l.707.707L15.657 8l-1.414-1.414L10 10.828 5.757 6.586 4.343 8z\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 368,\n                      columnNumber: 21\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 367,\n                    columnNumber: 19\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 366,\n                  columnNumber: 17\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 349,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => setShowSystemInfo(!showSystemInfo),\n                className: \"text-blue-400 hover:text-blue-300 text-sm\",\n                \"aria-label\": \"System info\",\n                children: /*#__PURE__*/_jsxDEV(\"svg\", {\n                  xmlns: \"http://www.w3.org/2000/svg\",\n                  className: \"h-5 w-5\",\n                  viewBox: \"0 0 20 20\",\n                  fill: \"currentColor\",\n                  children: /*#__PURE__*/_jsxDEV(\"path\", {\n                    fillRule: \"evenodd\",\n                    d: \"M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-7-4a1 1 0 11-2 0 1 1 0 012 0zM9 9a1 1 0 000 2v3a1 1 0 001 1h.01a1 1 0 100-2H10V9z\",\n                    clipRule: \"evenodd\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 378,\n                    columnNumber: 19\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 377,\n                  columnNumber: 17\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 372,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 345,\n              columnNumber: 13\n            }, this), showSystemInfo && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mt-3 p-3 bg-gray-800 rounded-lg text-sm\",\n              children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                className: \"font-semibold text-white mb-1\",\n                children: [currentSystem.name, \" System\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 385,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"text-gray-300 mb-2\",\n                children: currentSystem.description\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 386,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"grid grid-cols-3 gap-2 text-xs\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"p-2 bg-green-900/30 rounded\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"font-bold\",\n                    children: [\"+\", ((_Object$entries$filte = Object.entries(currentSystem.cardValues).filter(([_, v]) => v > 0)[0]) === null || _Object$entries$filte === void 0 ? void 0 : _Object$entries$filte[1]) || 0]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 389,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    children: Object.entries(currentSystem.cardValues).filter(([_, v]) => v > 0).map(([k]) => k).join(', ')\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 390,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 388,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"p-2 bg-gray-700/30 rounded\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"font-bold\",\n                    children: \"0\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 397,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    children: Object.entries(currentSystem.cardValues).filter(([_, v]) => v === 0).map(([k]) => k).join(', ')\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 398,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 396,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"p-2 bg-red-900/30 rounded\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"font-bold\",\n                    children: ((_Object$entries$filte2 = Object.entries(currentSystem.cardValues).filter(([_, v]) => v < 0)[0]) === null || _Object$entries$filte2 === void 0 ? void 0 : _Object$entries$filte2[1]) || 0\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 405,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    children: Object.entries(currentSystem.cardValues).filter(([_, v]) => v < 0).map(([k]) => k).join(', ')\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 406,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 404,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 387,\n                columnNumber: 17\n              }, this), !currentSystem.balanced && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"mt-2 text-xs text-yellow-300\",\n                children: \"Note: This is an unbalanced system. The running count is used directly for betting.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 414,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 384,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 344,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 340,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"p-6 flex-grow\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-6 bg-gray-900/20 p-4 rounded-lg\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex justify-between items-center mb-4\",\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                className: \"text-sm font-medium text-gray-300\",\n                children: \"Karten eingeben\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 428,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"flex items-center space-x-2\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"text-xs text-gray-400\",\n                  children: \"Modus:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 430,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"inline-flex rounded-md shadow-sm\",\n                  role: \"group\",\n                  children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                    type: \"button\",\n                    onClick: () => setInputMode('player'),\n                    className: `px-3 py-1 text-sm font-medium rounded-l-md ${inputMode === 'player' ? 'bg-purple-700 text-white' : 'bg-gray-700 text-gray-300 hover:bg-gray-600'}`,\n                    children: \"Spieler\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 432,\n                    columnNumber: 19\n                  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                    type: \"button\",\n                    onClick: () => setInputMode('dealer'),\n                    className: `px-3 py-1 text-sm font-medium rounded-r-md ${inputMode === 'dealer' ? 'bg-blue-700 text-white' : 'bg-gray-700 text-gray-300 hover:bg-gray-600'}`,\n                    children: \"Dealer\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 443,\n                    columnNumber: 19\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 431,\n                  columnNumber: 17\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 429,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 427,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"grid grid-cols-5 gap-2 mb-4\",\n              children: cardRanks.map(rank => /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => addCardToHistory(rank),\n                className: `h-12 flex items-center justify-center rounded-md font-medium text-white transition-all\n                    ${inputMode === 'player' ? 'bg-purple-900/70 hover:bg-purple-800/90' : 'bg-blue-900/70 hover:bg-blue-800/90'}\n                    hover:scale-105 active:scale-95`,\n                children: rank\n              }, rank, false, {\n                fileName: _jsxFileName,\n                lineNumber: 461,\n                columnNumber: 17\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 459,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"grid grid-cols-1 md:grid-cols-2 gap-4 mb-4\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"bg-gray-900/30 p-3 rounded-lg\",\n                children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                  className: \"text-xs font-medium text-gray-400 mb-2\",\n                  children: \"Deine Hand\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 476,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"flex flex-wrap gap-1 min-h-10\",\n                  children: playerCards.length > 0 ? playerCards.map((card, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"w-8 h-10 flex items-center justify-center rounded-md bg-purple-900/70 text-white text-sm font-medium\",\n                    onClick: () => removeCardFromHistory(card.id),\n                    children: card.rank\n                  }, card.id, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 480,\n                    columnNumber: 23\n                  }, this)) : /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"text-gray-500 text-sm\",\n                    children: \"Keine Karten\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 489,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 477,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"mt-1 text-xs text-gray-400\",\n                  children: [\"Wert: \", playerHandValue > 0 ? playerHandValue : '-']\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 492,\n                  columnNumber: 17\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 475,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"bg-gray-900/30 p-3 rounded-lg\",\n                children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                  className: \"text-xs font-medium text-gray-400 mb-2\",\n                  children: \"Dealer Hand\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 498,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"flex flex-wrap gap-1 min-h-10\",\n                  children: dealerCards.length > 0 ? dealerCards.map((card, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"w-8 h-10 flex items-center justify-center rounded-md bg-blue-900/70 text-white text-sm font-medium\",\n                    onClick: () => removeCardFromHistory(card.id),\n                    children: card.rank\n                  }, card.id, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 502,\n                    columnNumber: 23\n                  }, this)) : /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"text-gray-500 text-sm\",\n                    children: \"Keine Karten\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 511,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 499,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"mt-1 text-xs text-gray-400\",\n                  children: [\"Wert: \", dealerHandValue > 0 ? dealerHandValue : '-']\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 514,\n                  columnNumber: 17\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 497,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 474,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex justify-between items-center\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: clearAllCards,\n                className: \"px-3 py-1 text-xs bg-red-900/50 hover:bg-red-800/70 text-red-200 rounded transition-colors\",\n                children: \"Alle Karten zur\\xFCcksetzen\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 521,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => {\n                  // This will be connected to Monte Carlo simulation\n                  alert('Monte-Carlo-Simulation wird gestartet...');\n                },\n                className: \"px-4 py-2 bg-green-700 hover:bg-green-800 text-white text-sm font-medium rounded transition-colors\",\n                children: \"Empfohlene Aktion berechnen\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 527,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 520,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 426,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"bg-gray-900/50 p-4 rounded-lg\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex items-center justify-between mb-2\",\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                className: \"text-sm font-medium text-gray-300\",\n                children: \"Bet\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 542,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"text-xs text-gray-400\",\n                children: \"Recommendation\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 543,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 541,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-3xl font-bold\",\n              children: betRec.unit\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 545,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-xs text-gray-400 mt-1\",\n              children: betRec.text\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 546,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 540,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 424,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-6 bg-gray-900/20 p-4 rounded-lg relative group\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"absolute top-2 right-2\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"relative group\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"text-gray-400 hover:text-white text-sm w-5 h-5 flex items-center justify-center rounded-full bg-gray-800/50\",\n                title: \"Hilfe anzeigen\",\n                onClick: () => document.getElementById('cardHistoryHelp').classList.toggle('hidden'),\n                children: \"?\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 554,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                id: \"cardHistoryHelp\",\n                className: \"hidden absolute right-0 top-full mt-1 w-64 p-3 bg-gray-800 text-xs text-gray-300 rounded shadow-lg z-50\",\n                children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                  className: \"font-bold mb-2\",\n                  children: \"Kartenverlauf - Hilfe\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 562,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n                  className: \"space-y-1\",\n                  children: [/*#__PURE__*/_jsxDEV(\"li\", {\n                    children: \"\\u2022 Karten durch Leerzeichen oder Kommas eingeben (z.B. \\\"A K 10\\\" oder \\\"A,K,10\\\")\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 564,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                    children: \"\\u2022 Klicken Sie auf eine Karte im Verlauf, um sie zu entfernen\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 565,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                    children: \"\\u2022 Der Z\\xE4hler aktualisiert sich automatisch\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 566,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                    children: \"\\u2022 Farben werden ignoriert, nur die Werte z\\xE4hlen\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 567,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 563,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => document.getElementById('cardHistoryHelp').classList.add('hidden'),\n                  className: \"mt-2 text-blue-400 hover:text-blue-300 text-xs\",\n                  children: \"Schlie\\xDFen\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 569,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 561,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 553,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 552,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex justify-between items-center mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              className: \"text-sm font-medium text-gray-300\",\n              children: \"Kartenverlauf\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 580,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: clearAllCards,\n              className: \"text-xs bg-red-900/50 hover:bg-red-800/70 px-2 py-1 rounded transition-colors disabled:opacity-50 disabled:cursor-not-allowed\",\n              disabled: cardHistory.length === 0,\n              title: \"Entfernt alle Karten aus dem Verlauf\",\n              children: \"Alles zur\\xFCcksetzen\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 581,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 579,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-4 p-3 bg-gray-800/30 rounded\",\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              className: \"text-xs text-gray-400 mb-2\",\n              children: \"Aktive Karten\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 592,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex flex-wrap gap-1 min-h-8\",\n              children: Object.entries(uniqueCardCounts).length > 0 ? Object.entries(uniqueCardCounts).map(([rank, count]) => /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"relative group\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: `inline-flex items-center justify-center w-8 h-8 rounded ${currentSystem.cardValues[rank] > 0 ? 'bg-green-900/50' : currentSystem.cardValues[rank] < 0 ? 'bg-red-900/50' : 'bg-gray-700/50'}`,\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"text-sm\",\n                    children: rank\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 601,\n                    columnNumber: 25\n                  }, this), count > 1 && /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"absolute -top-1 -right-1 bg-blue-600 text-white text-xs rounded-full w-4 h-4 flex items-center justify-center\",\n                    children: count\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 603,\n                    columnNumber: 27\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 597,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"absolute bottom-full left-1/2 transform -translate-x-1/2 mb-1 px-2 py-1 text-xs text-white bg-gray-800 rounded opacity-0 group-hover:opacity-100 transition-opacity whitespace-nowrap\",\n                  children: [rank, \" (\", currentSystem.cardValues[rank] >= 0 ? '+' : '', currentSystem.cardValues[rank], \") \\xD7 \", count]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 608,\n                  columnNumber: 23\n                }, this)]\n              }, rank, true, {\n                fileName: _jsxFileName,\n                lineNumber: 596,\n                columnNumber: 21\n              }, this)) : /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"text-gray-500 text-sm\",\n                children: \"Keine Karten gespielt\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 614,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 593,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 591,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"p-2 bg-gray-800/50 rounded\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex items-center justify-between mb-2\",\n              children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                className: \"text-xs text-gray-400\",\n                children: [\"Vollst\\xE4ndiger Verlauf (\", cardHistory.length, \")\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 621,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"text-xs text-gray-500\",\n                children: \"Klicken zum Entfernen\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 622,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 620,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex flex-wrap gap-1 min-h-8 max-h-24 overflow-y-auto p-1\",\n              children: cardHistory.length > 0 ? [...cardHistory].reverse().map(card => /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => removeCardFromHistory(card.id),\n                className: \"relative group transition-transform hover:scale-110 active:scale-95\",\n                title: `${card.source === 'dealer' ? 'Dealer' : 'Spieler'}: ${card.rank} • ${new Date(card.timestamp).toLocaleTimeString()} (zum Entfernen klicken)`,\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: `inline-block w-6 h-6 text-xs flex items-center justify-center rounded text-xs ${card.source === 'dealer' ? 'bg-blue-900/60 hover:bg-red-900/70' : 'bg-purple-900/60 hover:bg-red-900/70'} transition-colors`,\n                  children: card.rank\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 633,\n                  columnNumber: 23\n                }, this)\n              }, card.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 627,\n                columnNumber: 21\n              }, this)) : /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"text-gray-500 text-sm\",\n                children: \"Keine Karten im Verlauf\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 643,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 624,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 619,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"text-sm font-medium text-gray-300 mb-3\",\n            children: \"Deck Information\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 648,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"grid grid-cols-1 md:grid-cols-2 gap-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"block text-xs text-gray-400 mb-1\",\n                children: \"Number of Decks\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 651,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"flex items-center\",\n                children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => setDecksRemaining(prev => Math.max(1, Math.floor(prev) - 1)),\n                  className: \"px-3 py-1 bg-gray-700 hover:bg-gray-600 rounded-l-md transition-colors\",\n                  children: \"-\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 653,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"number\",\n                  min: \"1\",\n                  max: \"10\",\n                  value: decksRemaining,\n                  onChange: e => setDecksRemaining(Math.max(1, Math.min(10, Number(e.target.value) || 1))),\n                  className: \"w-16 text-center bg-gray-800 border-t border-b border-gray-700 py-1 text-white\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 659,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => setDecksRemaining(prev => Math.min(10, Math.ceil(prev) + 1)),\n                  className: \"px-3 py-1 bg-gray-700 hover:bg-gray-600 rounded-r-md transition-colors\",\n                  children: \"+\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 667,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 652,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 650,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"text-xs text-gray-400 mb-1\",\n                children: \"Cards in Play\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 677,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"text-sm\",\n                children: [cards.length, \" / \", totalCards, \" cards (\", usedDecks.toFixed(1), \" decks used, \", remainingDecks.toFixed(1), \" decks left)\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 678,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 676,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 649,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 551,\n          columnNumber: 11\n        }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n          id: \"card-error\",\n          className: \"mt-2 text-sm text-red-400\",\n          children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n            className: \"w-4 h-4 inline mr-1\",\n            fill: \"none\",\n            stroke: \"currentColor\",\n            viewBox: \"0 0 24 24\",\n            xmlns: \"http://www.w3.org/2000/svg\",\n            children: /*#__PURE__*/_jsxDEV(\"path\", {\n              strokeLinecap: \"round\",\n              strokeLinejoin: \"round\",\n              strokeWidth: 2,\n              d: \"M12 8v4m0 4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 689,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 688,\n            columnNumber: 15\n          }, this), error]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 687,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"grid grid-cols-5 gap-2 mt-3\",\n          children: Object.entries(currentSystem.cardValues).map(([card]) => /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleCardInput(card),\n            className: `px-2 py-2 text-sm font-medium rounded-md transition-colors focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-offset-gray-900 ${getCardColorClass(currentSystem.cardValues[card])}`,\n            children: card\n          }, card, false, {\n            fileName: _jsxFileName,\n            lineNumber: 698,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 696,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 338,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-6\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex justify-between items-center mb-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"text-sm font-medium text-gray-300\",\n            children: \"Kartenverlauf\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 714,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex gap-2\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => {\n                const lastCard = [...cardHistory].pop();\n                if (lastCard) {\n                  removeCardFromHistory(lastCard.id);\n                }\n              },\n              disabled: cardHistory.length === 0,\n              className: \"text-xs px-3 py-1.5 bg-gray-700 hover:bg-gray-600 rounded-md transition-colors disabled:opacity-50 disabled:cursor-not-allowed focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-offset-gray-900 focus:ring-blue-500\",\n              children: \"Letzte Karte entfernen\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 716,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: clearAllCards,\n              className: \"text-xs px-3 py-1.5 bg-red-900/50 hover:bg-red-800/50 rounded-md transition-colors focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-offset-gray-900 focus:ring-red-500\",\n              children: \"Alle zur\\xFCcksetzen\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 728,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 715,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 713,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-gray-800/50 rounded-lg p-3 min-h-20 max-h-48 overflow-y-auto\",\n          children: cardHistory.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex flex-wrap gap-2\",\n            children: cardHistory.map((card, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `px-2.5 py-1 rounded-md text-sm font-mono ${card.source === 'player' ? 'bg-purple-900/50' : 'bg-blue-900/50'} text-white`,\n              onClick: () => removeCardFromHistory(card.id),\n              children: [card.rank, \" (\", card.source, \")\"]\n            }, card.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 740,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 738,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-gray-500 text-sm text-center py-4\",\n            children: \"Noch keine Karten hinzugef\\xFCgt. F\\xFCge Karten \\xFCber die Tasten oben hinzu.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 750,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 736,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 712,\n        columnNumber: 9\n      }, this), showHelp && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-gray-800 p-6 border-t border-gray-700\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"text-lg font-bold mb-3\",\n          children: \"Anleitung\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 760,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"space-y-2 text-sm text-gray-300\",\n          children: [/*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"\\u2022 W\\xE4hle ein Kartenz\\xE4hlsystem aus dem Dropdown-Men\\xFC\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 762,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"\\u2022 Klicke auf die Karten, um sie zur aktuellen Hand hinzuzuf\\xFCgen (Spieler oder Dealer)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 763,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"\\u2022 Nutze den Modus-Umschalter, um zwischen Spieler- und Dealer-Hand zu wechseln\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 764,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"\\u2022 Der laufende Z\\xE4hler aktualisiert sich automatisch mit jeder Karte\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 765,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"\\u2022 Der True Count wird basierend auf dem ausgew\\xE4hlten System und den verbleibenden Decks berechnet\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 766,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"\\u2022 Klicke auf eine Karte, um sie zu entfernen\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 767,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"\\u2022 Nutze \\\"Alle zur\\xFCcksetzen\\\", um alle Karten zu l\\xF6schen\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 768,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 761,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mt-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            className: \"font-semibold text-white mb-2\",\n            children: \"Zum Z\\xE4hlsystem:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 771,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            className: \"space-y-2 text-sm\",\n            children: [/*#__PURE__*/_jsxDEV(\"li\", {\n              children: [\"\\u2022 \", /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"font-medium\",\n                children: \"Hi-Lo:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 773,\n                columnNumber: 23\n              }, this), \" Ausgeglichenes System mit True Count Umrechnung\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 773,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: [\"\\u2022 \", /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"font-medium\",\n                children: \"KO:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 774,\n                columnNumber: 23\n              }, this), \" Unausgeglichenes System, verwendet direkt den laufenden Z\\xE4hler\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 774,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: [\"\\u2022 \", /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"font-medium\",\n                children: \"Omega II:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 775,\n                columnNumber: 23\n              }, this), \" Fortgeschrittenes System mit h\\xF6herer Spielgenauigkeit\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 775,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 772,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 770,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setShowHelp(false),\n          className: \"mt-6 w-full bg-blue-600 hover:bg-blue-700 text-white py-2 px-4 rounded transition-colors focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-offset-gray-800 focus:ring-blue-500\",\n          children: \"Verstanden!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 778,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 759,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-gray-900 p-3 border-t border-gray-800 flex justify-between items-center mt-auto\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setShowHelp(!showHelp),\n          className: \"text-sm text-blue-400 hover:text-blue-300 flex items-center gap-1.5 transition-colors focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2 focus:ring-offset-gray-900 rounded px-2 py-1\",\n          children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n            xmlns: \"http://www.w3.org/2000/svg\",\n            className: \"h-4 w-4\",\n            viewBox: \"0 0 20 20\",\n            fill: \"currentColor\",\n            children: /*#__PURE__*/_jsxDEV(\"path\", {\n              fillRule: \"evenodd\",\n              d: \"M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-8-3a1 1 0 00-.867.5 1 1 0 11-1.731-1A3 3 0 0113 8a3.001 3.001 0 01-2 2.83V11a1 1 0 11-2 0v-1a1 3 0 011.5-2.6 1 1 0 10-1-1.73z\",\n              clipRule: \"evenodd\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 794,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 793,\n            columnNumber: 13\n          }, this), showHelp ? 'Hilfe ausblenden' : 'Hilfe anzeigen']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 789,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-xs text-gray-500\",\n          children: [cardHistory.length, \" Karten \\u2022 \", usedDecks.toFixed(1), \" Decks verwendet \\u2022 \", remainingDecks.toFixed(1), \" Decks \\xFCbrig\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 798,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 788,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 337,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n_s(CardCounter, \"YjfPD7j/ta+Nm9baSC29QYDh/2I=\");\n_c = CardCounter;\nexport default CardCounter;\nvar _c;\n$RefreshReg$(_c, \"CardCounter\");","map":{"version":3,"names":["React","useState","useCallback","useEffect","useMemo","COUNTING_SYSTEMS","calculateTrueCount","getBetRecommendation","jsxDEV","_jsxDEV","Fragment","_Fragment","CardCounter","_s","_Object$entries$filte","_Object$entries$filte2","cardRanks","decksRemaining","setDecksRemaining","inputMode","setInputMode","runningCount","setRunningCount","showHelp","setShowHelp","isLoading","setIsLoading","selectedSystem","setSelectedSystem","showSystemInfo","setShowSystemInfo","error","setError","playerHands","setPlayerHands","dealerHand","setDealerHand","currentHandIndex","setCurrentHandIndex","cards","setCards","currentSystem","totalCards","Math","floor","remainingCards","max","length","remainingDecks","round","usedDecks","decksLeft","playerCardsInput","setPlayerCardsInput","dealerCardsInput","setDealerCardsInput","cardHistory","setCardHistory","lastProcessedInputs","setLastProcessedInputs","player","dealer","isValidCard","card","trim","validRanks","rank","toUpperCase","replace","startsWith","charAt","includes","parseCards","input","source","split","filter","invalidCards","join","map","timestamp","Date","now","id","random","toString","substr","processNewCards","newCards","prevHistory","newUniqueCards","newCard","some","clearAllCards","removeCardFromHistory","cardId","newPlayerCards","newDealerCards","c","allNewCards","playerCards","reverse","dealerCards","cardCounts","counts","forEach","calculateHandValue","hand","value","aces","isNaN","parseInt","playerHandValue","dealerHandValue","newCount","reduce","count","cardValues","uniqueCardCounts","trueCount","balanced","tc","betRec","timer","setTimeout","clearTimeout","handleCardInput","upperCard","undefined","Object","keys","prev","handleKeyDown","e","key","target","resetCount","removeLastCard","lastCard","slice","getCardColorClass","className","children","fileName","_jsxFileName","lineNumber","columnNumber","renderCard","index","title","style","minHeight","display","flexDirection","name","htmlFor","onChange","values","system","xmlns","viewBox","d","onClick","fill","fillRule","clipRule","description","entries","_","v","k","role","type","addCardToHistory","alert","unit","text","document","getElementById","classList","toggle","add","disabled","toLocaleTimeString","min","Number","ceil","toFixed","stroke","strokeLinecap","strokeLinejoin","strokeWidth","pop","_c","$RefreshReg$"],"sources":["C:/Users/silve/Downloads/blackjack-card-counter-main/frontend/src/components/CardCounter.jsx"],"sourcesContent":["import React, { useState, useCallback, useEffect, useMemo } from 'react';\nimport { COUNTING_SYSTEMS, calculateTrueCount, getBetRecommendation } from '../utils/countingSystems';\n\nconst CardCounter = () => {\n  // Card ranks constant\n  const cardRanks = ['2', '3', '4', '5', '6', '7', '8', '9', '10', 'J', 'Q', 'K', 'A'];\n  \n  // Game state\n  const [decksRemaining, setDecksRemaining] = useState(3); // Default to 3 decks\n  const [inputMode, setInputMode] = useState('player'); // 'player' or 'dealer'\n  const [runningCount, setRunningCount] = useState(0);\n  const [showHelp, setShowHelp] = useState(false);\n  const [isLoading, setIsLoading] = useState(true);\n  const [selectedSystem, setSelectedSystem] = useState('HILO');\n  const [showSystemInfo, setShowSystemInfo] = useState(false);\n  const [error, setError] = useState('');\n  \n  // Track hands\n  const [playerHands, setPlayerHands] = useState([[]]); // Array of hands for splits\n  const [dealerHand, setDealerHand] = useState([]);\n  const [currentHandIndex, setCurrentHandIndex] = useState(0);\n  \n  // Current cards in play (for counting)\n  const [cards, setCards] = useState([]);\n\n  // Get current counting system\n  const currentSystem = useMemo(() => COUNTING_SYSTEMS[selectedSystem], [selectedSystem]);\n\n  // Calculate deck information\n  const totalCards = useMemo(() => Math.floor(decksRemaining * 52), [decksRemaining]);\n  const remainingCards = useMemo(() => Math.max(0, totalCards - cards.length), [totalCards, cards.length]);\n  const remainingDecks = useMemo(() => Math.max(0.1, Math.round((remainingCards / 52) * 100) / 100), [remainingCards]);\n  const usedDecks = useMemo(() => Math.max(0, Math.round((decksRemaining - remainingDecks) * 100) / 100), [decksRemaining, remainingDecks]);\n  \n  // Alias remainingDecks as decksLeft for backward compatibility\n  const decksLeft = remainingDecks;\n  \n  // State for card inputs and persistent history\n  const [playerCardsInput, setPlayerCardsInput] = useState('');\n  const [dealerCardsInput, setDealerCardsInput] = useState('');\n  // Persistent history of all cards ever played\n  const [cardHistory, setCardHistory] = useState([]);\n  // Track the last input that was processed to prevent duplicates\n  const [lastProcessedInputs, setLastProcessedInputs] = useState({\n    player: '',\n    dealer: ''\n  });\n  \n  // Validate if a card rank is valid\n  const isValidCard = (card) => {\n    if (!card || !card.trim()) return false;\n    \n    const validRanks = ['2', '3', '4', '5', '6', '7', '8', '9', '10', 'J', 'Q', 'K', 'A'];\n    let rank = card.trim().toUpperCase().replace(/[^A-Z0-9]/g, '');\n    \n    if (rank.startsWith('10')) {\n      rank = '10';\n    } else {\n      rank = rank.charAt(0);\n    }\n    \n    return validRanks.includes(rank) ? rank : null;\n  };\n\n  // Parse card string into array of card objects, only using ranks\n  const parseCards = (input, source) => {\n    if (!input.trim()) return [];\n    \n    // First, validate all cards in the input\n    const cards = input.split(/[,\\s]+/)\n      .filter(card => card.trim().length > 0);\n    \n    // Check for any invalid cards\n    const invalidCards = cards.filter(card => !isValidCard(card));\n    if (invalidCards.length > 0) {\n      setError(`Ungültige Karte(n): ${invalidCards.join(', ')}. Gültige Karten: 2-10, J, Q, K, A`);\n      return [];\n    }\n    \n    // If all cards are valid, process them\n    return cards.map(card => {\n      const rank = isValidCard(card); // We know this is valid now\n      return { \n        rank,\n        source,\n        timestamp: Date.now(),\n        id: `${source}-${rank}-${Date.now()}-${Math.random().toString(36).substr(2, 6)}`\n      };\n    });\n  };\n  \n  // Process new cards from inputs and add them to history\n  const processNewCards = (input, source) => {\n    // Clear any previous errors\n    setError('');\n    \n    const newCards = parseCards(input, source);\n    \n    // Only update if we have valid cards\n    if (newCards.length > 0) {\n      setCardHistory(prevHistory => {\n        // Only add cards that aren't already in history (based on timestamp)\n        const newUniqueCards = newCards.filter(newCard => \n          !prevHistory.some(card => \n            card.rank === newCard.rank && \n            card.source === newCard.source &&\n            // Only consider very recent duplicates (last 2 seconds)\n            Date.now() - card.timestamp < 2000\n          )\n        );\n        \n        if (newUniqueCards.length === 0) {\n          // No new cards to add\n          return prevHistory;\n        }\n        \n        return [...prevHistory, ...newUniqueCards];\n      });\n    }\n  };\n  \n  // Clear all cards from history\n  const clearAllCards = () => {\n    setCardHistory([]);\n    setPlayerCardsInput('');\n    setDealerCardsInput('');\n    setLastProcessedInputs({ player: '', dealer: '' });\n    setError('');\n  };\n  \n  // Remove a single card from history by ID\n  const removeCardFromHistory = (cardId) => {\n    setCardHistory(prevHistory => \n      prevHistory.filter(card => card.id !== cardId)\n    );\n  };\n\n  // Update card history when inputs change\n  useEffect(() => {\n    const newPlayerCards = parseCards(playerCardsInput, 'player');\n    const newDealerCards = parseCards(dealerCardsInput, 'dealer');\n    \n    // Update card history with unique cards from both hands\n    setCardHistory(prevHistory => {\n      // Keep only cards that are still in either hand\n      const remainingCards = prevHistory.filter(card => \n        newPlayerCards.some(c => c.id === card.id) || \n        newDealerCards.some(c => c.id === card.id)\n      );\n      \n      // Add any new cards that aren't in history yet\n      const allNewCards = [...newPlayerCards, ...newDealerCards];\n      const newCards = allNewCards.filter(\n        newCard => !remainingCards.some(card => card.id === newCard.id)\n      );\n      \n      return [...remainingCards, ...newCards];\n    });\n  }, [playerCardsInput, dealerCardsInput]);\n  \n  // Get current player and dealer cards from history (most recent first)\n  const playerCards = useMemo(() => \n    [...cardHistory].reverse().filter(card => card.source === 'player'), \n    [cardHistory]\n  );\n  \n  const dealerCards = useMemo(() => \n    [...cardHistory].reverse().filter(card => card.source === 'dealer'), \n    [cardHistory]\n  );\n  \n  // Calculate card counts for each rank\n  const cardCounts = useMemo(() => {\n    const counts = {};\n    cardRanks.forEach(rank => {\n      counts[rank] = cardHistory.filter(card => card.rank === rank).length;\n    });\n    return counts;\n  }, [cardHistory]);\n  \n  // Calculate hand value (only using ranks, ignoring suits)\n  const calculateHandValue = useCallback((hand) => {\n    let value = 0;\n    let aces = 0;\n    \n    hand.forEach(card => {\n      const rank = card.rank;\n      if (rank === 'A') {\n        aces += 1;\n        value += 11;\n      } else if (['K', 'Q', 'J', '10'].includes(rank)) {\n        value += 10;\n      } else if (rank && !isNaN(rank)) {\n        value += parseInt(rank, 10);\n      }\n    });\n    \n    // Handle aces (A can be 11 or 1)\n    while (value > 21 && aces > 0) {\n      value -= 10;\n      aces -= 1;\n    }\n    \n    return value;\n  }, []);\n  \n  // Calculate hand values\n  const playerHandValue = useMemo(() => calculateHandValue(playerCards), [playerCards, calculateHandValue]);\n  const dealerHandValue = useMemo(() => calculateHandValue(dealerCards), [dealerCards, calculateHandValue]);\n  \n  // Update running count when card history changes\n  useEffect(() => {\n    const newCount = cardHistory.reduce((count, card) => {\n      return count + (currentSystem.cardValues[card.rank] || 0);\n    }, 0);\n    \n    setRunningCount(newCount);\n    setCards(cardHistory);\n  }, [cardHistory, currentSystem]);\n  \n  // Calculate unique card counts for display\n  const uniqueCardCounts = useMemo(() => {\n    const counts = {};\n    cardHistory.forEach(card => {\n      counts[card.rank] = (counts[card.rank] || 0) + 1;\n    });\n    return counts;\n  }, [cardHistory]);\n  \n  // Calculate true count based on remaining decks\n  const trueCount = useMemo(() => {\n    if (remainingDecks <= 0) return 0;\n    // For unbalanced systems, return running count directly\n    if (!COUNTING_SYSTEMS[selectedSystem].balanced) {\n      return runningCount;\n    }\n    // For balanced systems, calculate true count\n    const tc = runningCount / remainingDecks;\n    return Math.round(tc * 10) / 10; // Round to 1 decimal\n  }, [runningCount, remainingDecks, selectedSystem]);\n\n  // Get bet recommendation based on true count and system\n  const betRec = useMemo(() => \n    getBetRecommendation(trueCount, selectedSystem)\n  , [trueCount, selectedSystem]);\n\n  // Simulate loading\n  useEffect(() => {\n    const timer = setTimeout(() => setIsLoading(false), 1500);\n    return () => clearTimeout(timer);\n  }, []);\n\n  const handleCardInput = (card) => {\n    const upperCard = card.toUpperCase().trim();\n    \n    // Clear previous errors\n    setError('');\n    \n    // Check if input is empty\n    if (!upperCard) {\n      setError('Please enter a card value');\n      return;\n    }\n    \n    // Check if card is valid in current counting system\n    if (currentSystem.cardValues[upperCard] === undefined) {\n      setError(`Invalid card: ${upperCard}. Valid cards are: ${Object.keys(currentSystem.cardValues).join(', ')}`);\n      return;\n    }\n    \n    // If we get here, the card is valid\n    const value = currentSystem.cardValues[upperCard];\n    setCards(prev => [...prev, { card: upperCard, value }]);\n    setRunningCount(prev => prev + value);\n    \n    // Clear any previous error\n    setError('');\n  };\n\n  const handleKeyDown = (e) => {\n    if (e.key === 'Enter' && e.target.value) {\n      handleCardInput(e.target.value);\n      e.target.value = '';\n    }\n  };\n\n  const resetCount = () => {\n    setCards([]);\n    setRunningCount(0);\n  };\n\n  const removeLastCard = () => {\n    if (cards.length > 0) {\n      const lastCard = cards[cards.length - 1];\n      setCards(prev => prev.slice(0, -1));\n      setRunningCount(prev => prev - lastCard.value);\n    }\n  };\n\n  const getCardColorClass = (value) => {\n    if (value > 0) return 'bg-green-900/50 text-green-300';\n    if (value < 0) return 'bg-red-900/50 text-red-300';\n    return 'bg-gray-700/50';\n  };\n\n  // usedDecks and decksLeft are already defined above with useMemo\n\n  if (isLoading) {\n    return (\n      <div className=\"min-h-screen flex items-center justify-center bg-gray-900\">\n        <div className=\"text-center\">\n          <div className=\"w-16 h-16 border-4 border-blue-500 border-t-transparent rounded-full animate-spin mx-auto mb-4\"></div>\n          <h1 className=\"text-2xl font-bold text-white\">Card Counter Pro</h1>\n          <p className=\"text-gray-400 mt-2\">Loading trainer...</p>\n        </div>\n      </div>\n    );\n  }\n\n  // Render a card with proper styling (only showing rank)\n  const renderCard = (card, index) => (\n    <div \n      key={index}\n      className={`inline-block w-8 h-12 md:w-10 md:h-14 mx-0.5 rounded-md flex items-center justify-center text-sm font-bold ${\n        currentSystem.cardValues[card.rank] > 0 ? 'bg-green-900/50 text-green-300' :\n        currentSystem.cardValues[card.rank] < 0 ? 'bg-red-900/50 text-red-300' :\n        'bg-white/10 text-white'\n      }`}\n      title={`${card.rank} (${currentSystem.cardValues[card.rank] >= 0 ? '+' : ''}${currentSystem.cardValues[card.rank]})`}\n    >\n      {card.rank}\n    </div>\n  );\n\n  return (\n    <>\n      <div className=\"min-h-screen bg-gray-900 text-white p-4 md:p-6\">\n        <div className=\"max-w-2xl mx-auto bg-gray-800 rounded-xl shadow-2xl overflow-hidden\" style={{ minHeight: '90vh', display: 'flex', flexDirection: 'column' }}>\n        {/* Header */}\n        <div className=\"bg-gray-900 p-6 border-b border-gray-700\">\n          <h1 className=\"text-2xl font-bold text-center\">Card Counter Trainer</h1>\n          <p className=\"text-center text-gray-400 text-sm mt-1\">{currentSystem.name} System</p>\n          \n          <div className=\"mt-4\">\n            <div className=\"flex items-center justify-center gap-2\">\n              <label htmlFor=\"counting-system\" className=\"text-sm text-gray-300\">\n                Counting System:\n              </label>\n              <div className=\"relative\">\n                <select\n                  id=\"counting-system\"\n                  value={selectedSystem}\n                  onChange={(e) => {\n                    setSelectedSystem(e.target.value);\n                    setCards([]);\n                    setRunningCount(0);\n                  }}\n                  className=\"bg-gray-800 border border-gray-700 text-white text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 p-2 pr-8 appearance-none\"\n                >\n                  {Object.values(COUNTING_SYSTEMS).map((system) => (\n                    <option key={system.id} value={system.id}>\n                      {system.name}\n                    </option>\n                  ))}\n                </select>\n                <div className=\"pointer-events-none absolute inset-y-0 right-0 flex items-center px-2 text-gray-400\">\n                  <svg className=\"fill-current h-4 w-4\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\">\n                    <path d=\"M9.293 12.95l.707.707L15.657 8l-1.414-1.414L10 10.828 5.757 6.586 4.343 8z\"/>\n                  </svg>\n                </div>\n              </div>\n              <button\n                onClick={() => setShowSystemInfo(!showSystemInfo)}\n                className=\"text-blue-400 hover:text-blue-300 text-sm\"\n                aria-label=\"System info\"\n              >\n                <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-5 w-5\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n                  <path fillRule=\"evenodd\" d=\"M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-7-4a1 1 0 11-2 0 1 1 0 012 0zM9 9a1 1 0 000 2v3a1 1 0 001 1h.01a1 1 0 100-2H10V9z\" clipRule=\"evenodd\" />\n                </svg>\n              </button>\n            </div>\n            \n            {showSystemInfo && (\n              <div className=\"mt-3 p-3 bg-gray-800 rounded-lg text-sm\">\n                <h4 className=\"font-semibold text-white mb-1\">{currentSystem.name} System</h4>\n                <p className=\"text-gray-300 mb-2\">{currentSystem.description}</p>\n                <div className=\"grid grid-cols-3 gap-2 text-xs\">\n                  <div className=\"p-2 bg-green-900/30 rounded\">\n                    <div className=\"font-bold\">+{Object.entries(currentSystem.cardValues).filter(([_, v]) => v > 0)[0]?.[1] || 0}</div>\n                    <div>{Object.entries(currentSystem.cardValues)\n                      .filter(([_, v]) => v > 0)\n                      .map(([k]) => k)\n                      .join(', ')}\n                    </div>\n                  </div>\n                  <div className=\"p-2 bg-gray-700/30 rounded\">\n                    <div className=\"font-bold\">0</div>\n                    <div>{Object.entries(currentSystem.cardValues)\n                      .filter(([_, v]) => v === 0)\n                      .map(([k]) => k)\n                      .join(', ')}\n                    </div>\n                  </div>\n                  <div className=\"p-2 bg-red-900/30 rounded\">\n                    <div className=\"font-bold\">{Object.entries(currentSystem.cardValues).filter(([_, v]) => v < 0)[0]?.[1] || 0}</div>\n                    <div>{Object.entries(currentSystem.cardValues)\n                      .filter(([_, v]) => v < 0)\n                      .map(([k]) => k)\n                      .join(', ')}\n                    </div>\n                  </div>\n                </div>\n                {!currentSystem.balanced && (\n                  <div className=\"mt-2 text-xs text-yellow-300\">\n                    Note: This is an unbalanced system. The running count is used directly for betting.\n                  </div>\n                )}\n              </div>\n            )}\n          </div>\n        </div>\n\n        {/* Main Content */}\n        <div className=\"p-6 flex-grow\">\n          {/* Card Input Section */}\n          <div className=\"mb-6 bg-gray-900/20 p-4 rounded-lg\">\n            <div className=\"flex justify-between items-center mb-4\">\n              <h3 className=\"text-sm font-medium text-gray-300\">Karten eingeben</h3>\n              <div className=\"flex items-center space-x-2\">\n                <span className=\"text-xs text-gray-400\">Modus:</span>\n                <div className=\"inline-flex rounded-md shadow-sm\" role=\"group\">\n                  <button\n                    type=\"button\"\n                    onClick={() => setInputMode('player')}\n                    className={`px-3 py-1 text-sm font-medium rounded-l-md ${\n                      inputMode === 'player' \n                        ? 'bg-purple-700 text-white' \n                        : 'bg-gray-700 text-gray-300 hover:bg-gray-600'\n                    }`}\n                  >\n                    Spieler\n                  </button>\n                  <button\n                    type=\"button\"\n                    onClick={() => setInputMode('dealer')}\n                    className={`px-3 py-1 text-sm font-medium rounded-r-md ${\n                      inputMode === 'dealer' \n                        ? 'bg-blue-700 text-white' \n                        : 'bg-gray-700 text-gray-300 hover:bg-gray-600'\n                    }`}\n                  >\n                    Dealer\n                  </button>\n                </div>\n              </div>\n            </div>\n            \n            {/* Card Buttons */}\n            <div className=\"grid grid-cols-5 gap-2 mb-4\">\n              {cardRanks.map(rank => (\n                <button\n                  key={rank}\n                  onClick={() => addCardToHistory(rank)}\n                  className={`h-12 flex items-center justify-center rounded-md font-medium text-white transition-all\n                    ${inputMode === 'player' ? 'bg-purple-900/70 hover:bg-purple-800/90' : 'bg-blue-900/70 hover:bg-blue-800/90'}\n                    hover:scale-105 active:scale-95`}\n                >\n                  {rank}\n                </button>\n              ))}\n            </div>\n            \n            {/* Current Hands */}\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4 mb-4\">\n              <div className=\"bg-gray-900/30 p-3 rounded-lg\">\n                <h4 className=\"text-xs font-medium text-gray-400 mb-2\">Deine Hand</h4>\n                <div className=\"flex flex-wrap gap-1 min-h-10\">\n                  {playerCards.length > 0 ? (\n                    playerCards.map((card, index) => (\n                      <div \n                        key={card.id}\n                        className=\"w-8 h-10 flex items-center justify-center rounded-md bg-purple-900/70 text-white text-sm font-medium\"\n                        onClick={() => removeCardFromHistory(card.id)}\n                      >\n                        {card.rank}\n                      </div>\n                    ))\n                  ) : (\n                    <div className=\"text-gray-500 text-sm\">Keine Karten</div>\n                  )}\n                </div>\n                <div className=\"mt-1 text-xs text-gray-400\">\n                  Wert: {playerHandValue > 0 ? playerHandValue : '-'}\n                </div>\n              </div>\n              \n              <div className=\"bg-gray-900/30 p-3 rounded-lg\">\n                <h4 className=\"text-xs font-medium text-gray-400 mb-2\">Dealer Hand</h4>\n                <div className=\"flex flex-wrap gap-1 min-h-10\">\n                  {dealerCards.length > 0 ? (\n                    dealerCards.map((card, index) => (\n                      <div \n                        key={card.id}\n                        className=\"w-8 h-10 flex items-center justify-center rounded-md bg-blue-900/70 text-white text-sm font-medium\"\n                        onClick={() => removeCardFromHistory(card.id)}\n                      >\n                        {card.rank}\n                      </div>\n                    ))\n                  ) : (\n                    <div className=\"text-gray-500 text-sm\">Keine Karten</div>\n                  )}\n                </div>\n                <div className=\"mt-1 text-xs text-gray-400\">\n                  Wert: {dealerHandValue > 0 ? dealerHandValue : '-'}\n                </div>\n              </div>\n            </div>\n            \n            <div className=\"flex justify-between items-center\">\n              <button\n                onClick={clearAllCards}\n                className=\"px-3 py-1 text-xs bg-red-900/50 hover:bg-red-800/70 text-red-200 rounded transition-colors\"\n              >\n                Alle Karten zurücksetzen\n              </button>\n              <button\n                onClick={() => {\n                  // This will be connected to Monte Carlo simulation\n                  alert('Monte-Carlo-Simulation wird gestartet...');\n                }}\n                className=\"px-4 py-2 bg-green-700 hover:bg-green-800 text-white text-sm font-medium rounded transition-colors\"\n              >\n                Empfohlene Aktion berechnen\n              </button>\n            </div>\n          </div>\n            \n            {/* Bet Recommendation */}\n            <div className=\"bg-gray-900/50 p-4 rounded-lg\">\n              <div className=\"flex items-center justify-between mb-2\">\n                <h3 className=\"text-sm font-medium text-gray-300\">Bet</h3>\n                <span className=\"text-xs text-gray-400\">Recommendation</span>\n              </div>\n              <div className=\"text-3xl font-bold\">{betRec.unit}</div>\n              <div className=\"text-xs text-gray-400 mt-1\">{betRec.text}</div>\n            </div>\n          </div>\n          \n          {/* Card History */}\n          <div className=\"mb-6 bg-gray-900/20 p-4 rounded-lg relative group\">\n            <div className=\"absolute top-2 right-2\">\n              <div className=\"relative group\">\n                <button \n                  className=\"text-gray-400 hover:text-white text-sm w-5 h-5 flex items-center justify-center rounded-full bg-gray-800/50\"\n                  title=\"Hilfe anzeigen\"\n                  onClick={() => document.getElementById('cardHistoryHelp').classList.toggle('hidden')}\n                >\n                  ?\n                </button>\n                <div id=\"cardHistoryHelp\" className=\"hidden absolute right-0 top-full mt-1 w-64 p-3 bg-gray-800 text-xs text-gray-300 rounded shadow-lg z-50\">\n                  <h4 className=\"font-bold mb-2\">Kartenverlauf - Hilfe</h4>\n                  <ul className=\"space-y-1\">\n                    <li>• Karten durch Leerzeichen oder Kommas eingeben (z.B. \"A K 10\" oder \"A,K,10\")</li>\n                    <li>• Klicken Sie auf eine Karte im Verlauf, um sie zu entfernen</li>\n                    <li>• Der Zähler aktualisiert sich automatisch</li>\n                    <li>• Farben werden ignoriert, nur die Werte zählen</li>\n                  </ul>\n                  <button \n                    onClick={() => document.getElementById('cardHistoryHelp').classList.add('hidden')}\n                    className=\"mt-2 text-blue-400 hover:text-blue-300 text-xs\"\n                  >\n                    Schließen\n                  </button>\n                </div>\n              </div>\n            </div>\n            \n            <div className=\"flex justify-between items-center mb-3\">\n              <h3 className=\"text-sm font-medium text-gray-300\">Kartenverlauf</h3>\n              <button\n                onClick={clearAllCards}\n                className=\"text-xs bg-red-900/50 hover:bg-red-800/70 px-2 py-1 rounded transition-colors disabled:opacity-50 disabled:cursor-not-allowed\"\n                disabled={cardHistory.length === 0}\n                title=\"Entfernt alle Karten aus dem Verlauf\"\n              >\n                Alles zurücksetzen\n              </button>\n            </div>\n            \n            <div className=\"mb-4 p-3 bg-gray-800/30 rounded\">\n              <h4 className=\"text-xs text-gray-400 mb-2\">Aktive Karten</h4>\n              <div className=\"flex flex-wrap gap-1 min-h-8\">\n                {Object.entries(uniqueCardCounts).length > 0 ? (\n                  Object.entries(uniqueCardCounts).map(([rank, count]) => (\n                    <div key={rank} className=\"relative group\">\n                      <div className={`inline-flex items-center justify-center w-8 h-8 rounded ${\n                        currentSystem.cardValues[rank] > 0 ? 'bg-green-900/50' :\n                        currentSystem.cardValues[rank] < 0 ? 'bg-red-900/50' : 'bg-gray-700/50'\n                      }`}>\n                        <span className=\"text-sm\">{rank}</span>\n                        {count > 1 && (\n                          <span className=\"absolute -top-1 -right-1 bg-blue-600 text-white text-xs rounded-full w-4 h-4 flex items-center justify-center\">\n                            {count}\n                          </span>\n                        )}\n                      </div>\n                      <div className=\"absolute bottom-full left-1/2 transform -translate-x-1/2 mb-1 px-2 py-1 text-xs text-white bg-gray-800 rounded opacity-0 group-hover:opacity-100 transition-opacity whitespace-nowrap\">\n                        {rank} ({currentSystem.cardValues[rank] >= 0 ? '+' : ''}{currentSystem.cardValues[rank]}) × {count}\n                      </div>\n                    </div>\n                  ))\n                ) : (\n                  <div className=\"text-gray-500 text-sm\">Keine Karten gespielt</div>\n                )}\n              </div>\n            </div>\n            \n            <div className=\"p-2 bg-gray-800/50 rounded\">\n              <div className=\"flex items-center justify-between mb-2\">\n                <h4 className=\"text-xs text-gray-400\">Vollständiger Verlauf ({cardHistory.length})</h4>\n                <div className=\"text-xs text-gray-500\">Klicken zum Entfernen</div>\n              </div>\n              <div className=\"flex flex-wrap gap-1 min-h-8 max-h-24 overflow-y-auto p-1\">\n                {cardHistory.length > 0 ? (\n                  [...cardHistory].reverse().map((card) => (\n                    <button\n                      key={card.id}\n                      onClick={() => removeCardFromHistory(card.id)}\n                      className=\"relative group transition-transform hover:scale-110 active:scale-95\"\n                      title={`${card.source === 'dealer' ? 'Dealer' : 'Spieler'}: ${card.rank} • ${new Date(card.timestamp).toLocaleTimeString()} (zum Entfernen klicken)`}\n                    >\n                      <div className={`inline-block w-6 h-6 text-xs flex items-center justify-center rounded text-xs ${\n                        card.source === 'dealer' \n                          ? 'bg-blue-900/60 hover:bg-red-900/70' \n                          : 'bg-purple-900/60 hover:bg-red-900/70'\n                      } transition-colors`}>\n                        {card.rank}\n                      </div>\n                    </button>\n                  ))\n                ) : (\n                  <div className=\"text-gray-500 text-sm\">Keine Karten im Verlauf</div>\n                )}\n              </div>\n            </div>\n            \n            <h3 className=\"text-sm font-medium text-gray-300 mb-3\">Deck Information</h3>\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n              <div>\n                <label className=\"block text-xs text-gray-400 mb-1\">Number of Decks</label>\n                <div className=\"flex items-center\">\n                  <button\n                    onClick={() => setDecksRemaining(prev => Math.max(1, Math.floor(prev) - 1))}\n                    className=\"px-3 py-1 bg-gray-700 hover:bg-gray-600 rounded-l-md transition-colors\"\n                  >\n                    -\n                  </button>\n                  <input\n                    type=\"number\"\n                    min=\"1\"\n                    max=\"10\"\n                    value={decksRemaining}\n                    onChange={(e) => setDecksRemaining(Math.max(1, Math.min(10, Number(e.target.value) || 1)))}\n                    className=\"w-16 text-center bg-gray-800 border-t border-b border-gray-700 py-1 text-white\"\n                  />\n                  <button\n                    onClick={() => setDecksRemaining(prev => Math.min(10, Math.ceil(prev) + 1))}\n                    className=\"px-3 py-1 bg-gray-700 hover:bg-gray-600 rounded-r-md transition-colors\"\n                  >\n                    +\n                  </button>\n                </div>\n              </div>\n              \n              <div>\n                <div className=\"text-xs text-gray-400 mb-1\">Cards in Play</div>\n                <div className=\"text-sm\">\n                  {cards.length} / {totalCards} cards ({usedDecks.toFixed(1)} decks used, {remainingDecks.toFixed(1)} decks left)\n                </div>\n              </div>\n            </div>\n          </div>\n          \n          {/* Error message */}\n          {error && (\n            <p id=\"card-error\" className=\"mt-2 text-sm text-red-400\">\n              <svg className=\"w-4 h-4 inline mr-1\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\">\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 8v4m0 4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z\" />\n              </svg>\n              {error}\n            </p>\n          )}\n          \n          {/* Quick Buttons */}\n          <div className=\"grid grid-cols-5 gap-2 mt-3\">\n            {Object.entries(currentSystem.cardValues).map(([card]) => (\n              <button\n                key={card}\n                onClick={() => handleCardInput(card)}\n                className={`px-2 py-2 text-sm font-medium rounded-md transition-colors focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-offset-gray-900 ${\n                  getCardColorClass(currentSystem.cardValues[card])\n                }`}\n              >\n                {card}\n              </button>\n            ))}\n          </div>\n        </div>\n\n        {/* Card History */}\n        <div className=\"mb-6\">\n          <div className=\"flex justify-between items-center mb-2\">\n            <h3 className=\"text-sm font-medium text-gray-300\">Kartenverlauf</h3>\n            <div className=\"flex gap-2\">\n              <button\n                onClick={() => {\n                  const lastCard = [...cardHistory].pop();\n                  if (lastCard) {\n                    removeCardFromHistory(lastCard.id);\n                  }\n                }}\n                disabled={cardHistory.length === 0}\n                className=\"text-xs px-3 py-1.5 bg-gray-700 hover:bg-gray-600 rounded-md transition-colors disabled:opacity-50 disabled:cursor-not-allowed focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-offset-gray-900 focus:ring-blue-500\"\n              >\n                Letzte Karte entfernen\n              </button>\n              <button\n                onClick={clearAllCards}\n                className=\"text-xs px-3 py-1.5 bg-red-900/50 hover:bg-red-800/50 rounded-md transition-colors focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-offset-gray-900 focus:ring-red-500\"\n              >\n                Alle zurücksetzen\n              </button>\n            </div>\n          </div>\n          <div className=\"bg-gray-800/50 rounded-lg p-3 min-h-20 max-h-48 overflow-y-auto\">\n            {cardHistory.length > 0 ? (\n              <div className=\"flex flex-wrap gap-2\">\n                {cardHistory.map((card, index) => (\n                  <div\n                    key={card.id}\n                    className={`px-2.5 py-1 rounded-md text-sm font-mono ${card.source === 'player' ? 'bg-purple-900/50' : 'bg-blue-900/50'} text-white`}\n                    onClick={() => removeCardFromHistory(card.id)}\n                  >\n                    {card.rank} ({card.source})\n                  </div>\n                ))}\n              </div>\n            ) : (\n              <p className=\"text-gray-500 text-sm text-center py-4\">\n                Noch keine Karten hinzugefügt. Füge Karten über die Tasten oben hinzu.\n              </p>\n            )}\n          </div>\n        </div>\n        \n        {/* Help Panel */}\n        {showHelp && (\n          <div className=\"bg-gray-800 p-6 border-t border-gray-700\">\n            <h3 className=\"text-lg font-bold mb-3\">Anleitung</h3>\n            <ul className=\"space-y-2 text-sm text-gray-300\">\n              <li>• Wähle ein Kartenzählsystem aus dem Dropdown-Menü</li>\n              <li>• Klicke auf die Karten, um sie zur aktuellen Hand hinzuzufügen (Spieler oder Dealer)</li>\n              <li>• Nutze den Modus-Umschalter, um zwischen Spieler- und Dealer-Hand zu wechseln</li>\n              <li>• Der laufende Zähler aktualisiert sich automatisch mit jeder Karte</li>\n              <li>• Der True Count wird basierend auf dem ausgewählten System und den verbleibenden Decks berechnet</li>\n              <li>• Klicke auf eine Karte, um sie zu entfernen</li>\n              <li>• Nutze \"Alle zurücksetzen\", um alle Karten zu löschen</li>\n            </ul>\n            <div className=\"mt-4\">\n              <h4 className=\"font-semibold text-white mb-2\">Zum Zählsystem:</h4>\n              <ul className=\"space-y-2 text-sm\">\n                <li>• <span className=\"font-medium\">Hi-Lo:</span> Ausgeglichenes System mit True Count Umrechnung</li>\n                <li>• <span className=\"font-medium\">KO:</span> Unausgeglichenes System, verwendet direkt den laufenden Zähler</li>\n                <li>• <span className=\"font-medium\">Omega II:</span> Fortgeschrittenes System mit höherer Spielgenauigkeit</li>\n              </ul>\n            </div>\n            <button\n              onClick={() => setShowHelp(false)}\n              className=\"mt-6 w-full bg-blue-600 hover:bg-blue-700 text-white py-2 px-4 rounded transition-colors focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-offset-gray-800 focus:ring-blue-500\"\n            >\n              Verstanden!\n            </button>\n          </div>\n        )}\n\n        {/* Footer */}\n        <div className=\"bg-gray-900 p-3 border-t border-gray-800 flex justify-between items-center mt-auto\">\n          <button\n            onClick={() => setShowHelp(!showHelp)}\n            className=\"text-sm text-blue-400 hover:text-blue-300 flex items-center gap-1.5 transition-colors focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2 focus:ring-offset-gray-900 rounded px-2 py-1\"\n          >\n            <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-4 w-4\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n              <path fillRule=\"evenodd\" d=\"M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-8-3a1 1 0 00-.867.5 1 1 0 11-1.731-1A3 3 0 0113 8a3.001 3.001 0 01-2 2.83V11a1 1 0 11-2 0v-1a1 3 0 011.5-2.6 1 1 0 10-1-1.73z\" clipRule=\"evenodd\" />\n            </svg>\n            {showHelp ? 'Hilfe ausblenden' : 'Hilfe anzeigen'}\n          </button>\n          <div className=\"text-xs text-gray-500\">\n            {cardHistory.length} Karten • {usedDecks.toFixed(1)} Decks verwendet • {remainingDecks.toFixed(1)} Decks übrig\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default CardCounter;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}