{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\silve\\\\Downloads\\\\blackjack-card-counter-main\\\\frontend\\\\src\\\\components\\\\CardCounter.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useCallback, useEffect, useMemo, useRef } from 'react';\nimport { COUNTING_SYSTEMS, calculateTrueCount, getBetRecommendation } from '../utils/countingSystems';\n\n// Card ranks constant\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CARD_RANKS = ['2', '3', '4', '5', '6', '7', '8', '9', '10', 'J', 'Q', 'K', 'A'];\nconst CardCounter = () => {\n  _s();\n  var _Object$entries$filte, _Object$entries$filte2;\n  // Game state\n  const [decksRemaining, setDecksRemaining] = useState(3); // Default to 3 decks\n  const [inputMode, setInputMode] = useState('player'); // 'player' or 'dealer'\n  const [isCalculating, setIsCalculating] = useState(false); // For Monte Carlo simulation loading state\n  const [runningCount, setRunningCount] = useState(0);\n  const [showHelp, setShowHelp] = useState(false);\n  const [selectedSystem, setSelectedSystem] = useState('HILO');\n  const [showSystemInfo, setShowSystemInfo] = useState(false);\n  const [error, setError] = useState('');\n\n  // Simulation state\n  const [simulationResult, setSimulationResult] = useState(null);\n\n  // State for card inputs and persistent history\n  const [playerCardsInput, setPlayerCardsInput] = useState('');\n  const [dealerCardsInput, setDealerCardsInput] = useState('');\n  const [cardHistory, setCardHistory] = useState([]); // Persistent history of all cards ever played\n\n  // Track the last input that was processed to prevent duplicates\n  const [lastProcessedInputs, setLastProcessedInputs] = useState({\n    player: '',\n    dealer: ''\n  });\n\n  // Current cards in play (for counting)\n  const [cards, setCards] = useState([]);\n\n  // Get current player and dealer cards from history (most recent first, with full card objects)\n  const playerCards = useMemo(() => [...cardHistory].reverse().filter(card => card.source === 'player'), [cardHistory]);\n  const dealerCards = useMemo(() => [...cardHistory].reverse().filter(card => card.source === 'dealer'), [cardHistory]);\n\n  // Get just the ranks for counting purposes\n  const playerCardRanks = useMemo(() => playerCards.map(card => card.rank), [playerCards]);\n  const dealerCardRanks = useMemo(() => dealerCards.map(card => card.rank), [dealerCards]);\n\n  // Calculate card counts for each rank\n  const cardCounts = useMemo(() => {\n    const counts = {};\n    CARD_RANKS.forEach(rank => {\n      counts[rank] = cardHistory.filter(card => card.rank === rank).length;\n    });\n    return counts;\n  }, [cardHistory]);\n\n  // Get current counting system\n  const currentSystem = useMemo(() => COUNTING_SYSTEMS[selectedSystem], [selectedSystem]);\n\n  // Calculate deck information\n  const totalCards = useMemo(() => Math.floor(decksRemaining * 52), [decksRemaining]);\n  const remainingCards = useMemo(() => Math.max(0, totalCards - cards.length), [totalCards, cards.length]);\n  const remainingDecks = useMemo(() => Math.max(0.1, Math.round(remainingCards / 52 * 100) / 100), [remainingCards]);\n  const usedDecks = useMemo(() => Math.max(0, Math.round((decksRemaining - remainingDecks) * 100) / 100), [decksRemaining, remainingDecks]);\n\n  // Alias remainingDecks as decksLeft for backward compatibility\n  const decksLeft = remainingDecks;\n\n  // Handle simulation button click\n  const handleSimulationClick = useCallback(() => {\n    if (playerCardRanks.length === 0 || dealerCardRanks.length === 0) {\n      setError('Bitte füge mindestens eine Karte für Spieler und Dealer hinzu');\n      return;\n    }\n    setIsCalculating(true);\n\n    // Simulate API call with timeout\n    setTimeout(() => {\n      // TODO: Replace with actual simulation logic\n      console.log('Running simulation with:', {\n        playerCards: playerCardRanks,\n        dealerCards: dealerCardRanks,\n        runningCount,\n        trueCount: calculateTrueCount(runningCount, remainingDecks)\n      });\n\n      // Set a mock result for now\n      setSimulationResult({\n        recommendedAction: 'HIT',\n        // or 'STAND', 'DOUBLE', etc.\n        confidence: 0.75,\n        winProbability: 0.65\n      });\n      setIsCalculating(false);\n    }, 1000);\n  }, [playerCardRanks, dealerCardRanks, runningCount, remainingDecks]);\n\n  // Add a card to the history\n  const addCardToHistory = useCallback((rank, source = 'player') => {\n    if (!CARD_RANKS.includes(rank)) {\n      setError(`Ungültige Karte: ${rank}`);\n      return;\n    }\n    const newCard = {\n      id: Date.now(),\n      rank,\n      source: inputMode,\n      // 'player' or 'dealer'\n      timestamp: new Date().toISOString()\n    };\n    setCardHistory(prev => [...prev, newCard]);\n    setError('');\n  }, [inputMode]);\n\n  // Validate if a card rank is valid\n  const isValidCard = card => {\n    if (!card || !card.trim()) return false;\n    const validRanks = ['2', '3', '4', '5', '6', '7', '8', '9', '10', 'J', 'Q', 'K', 'A'];\n    let rank = card.trim().toUpperCase().replace(/[^A-Z0-9]/g, '');\n    if (rank.startsWith('10')) {\n      rank = '10';\n    } else {\n      rank = rank.charAt(0);\n    }\n    return validRanks.includes(rank) ? rank : null;\n  };\n\n  // Parse card string into array of card objects, only using ranks\n  const parseCards = useCallback((input, source) => {\n    if (!input || !input.trim()) return [];\n    try {\n      // First, validate all cards in the input\n      const cards = input.split(/[,\\s]+/).filter(card => card.trim().length > 0);\n\n      // Check for any invalid cards\n      const invalidCards = [];\n      const validCards = [];\n      cards.forEach(card => {\n        const validCard = isValidCard(card);\n        if (!validCard) {\n          invalidCards.push(card);\n        } else {\n          validCards.push({\n            rank: validCard,\n            source,\n            timestamp: Date.now(),\n            id: `${source}-${validCard}-${Date.now()}-${Math.random().toString(36).substr(2, 6)}`\n          });\n        }\n      });\n      if (invalidCards.length > 0) {\n        setError(`Ungültige Karte(n): ${invalidCards.join(', ')}. Gültige Karten: 2-10, J, Q, K, A`);\n      }\n      return validCards;\n    } catch (error) {\n      console.error('Error parsing cards:', error);\n      setError('Fehler beim Verarbeiten der Karten. Bitte versuche es erneut.');\n      return [];\n    }\n  }, [setError]);\n\n  // Process new cards from inputs and add them to history\n  const processNewCards = (input, source) => {\n    // Clear any previous errors\n    setError('');\n    const newCards = parseCards(input, source);\n\n    // Only update if we have valid cards\n    if (newCards.length > 0) {\n      setCardHistory(prevHistory => {\n        // Only add cards that aren't already in history (based on timestamp)\n        const newUniqueCards = newCards.filter(newCard => !prevHistory.some(card => card.rank === newCard.rank && card.source === newCard.source &&\n        // Only consider very recent duplicates (last 2 seconds)\n        Date.now() - card.timestamp < 2000));\n        if (newUniqueCards.length === 0) {\n          // No new cards to add\n          return prevHistory;\n        }\n        return [...prevHistory, ...newUniqueCards];\n      });\n    }\n  };\n\n  // Clear all cards from history\n  const clearAllCards = () => {\n    setCardHistory([]);\n    setPlayerCardsInput('');\n    setDealerCardsInput('');\n    setLastProcessedInputs({\n      player: '',\n      dealer: ''\n    });\n    setError('');\n  };\n\n  // Remove a single card from history by ID\n  const removeCardFromHistory = cardId => {\n    setCardHistory(prevHistory => prevHistory.filter(card => card.id !== cardId));\n  };\n\n  // Update card history when inputs change\n  useEffect(() => {\n    const newPlayerCards = parseCards(playerCardsInput, 'player');\n    const newDealerCards = parseCards(dealerCardsInput, 'dealer');\n\n    // Update card history with unique cards from both hands\n    setCardHistory(prevHistory => {\n      // Keep only cards that are still in either hand\n      const remainingCards = prevHistory.filter(card => newPlayerCards.some(c => c.id === card.id) || newDealerCards.some(c => c.id === card.id));\n\n      // Add any new cards that aren't in history yet\n      const allNewCards = [...newPlayerCards, ...newDealerCards];\n      const newCards = allNewCards.filter(newCard => !remainingCards.some(card => card.id === newCard.id));\n      return [...remainingCards, ...newCards];\n    });\n  }, [playerCardsInput, dealerCardsInput]);\n\n  // Using the playerCards, dealerCards, and cardCounts declarations from above\n\n  // Calculate hand value (only using ranks, ignoring suits)\n  const calculateHandValue = useCallback(hand => {\n    let value = 0;\n    let aces = 0;\n    hand.forEach(card => {\n      const rank = card.rank;\n      if (rank === 'A') {\n        aces += 1;\n        value += 11;\n      } else if (['K', 'Q', 'J', '10'].includes(rank)) {\n        value += 10;\n      } else if (rank && !isNaN(rank)) {\n        value += parseInt(rank, 10);\n      }\n    });\n\n    // Handle aces (A can be 11 or 1)\n    while (value > 21 && aces > 0) {\n      value -= 10;\n      aces -= 1;\n    }\n    return value;\n  }, []);\n\n  // Calculate hand values\n  const playerHandValue = useMemo(() => calculateHandValue(playerCards), [playerCards, calculateHandValue]);\n  const dealerHandValue = useMemo(() => calculateHandValue(dealerCards), [dealerCards, calculateHandValue]);\n\n  // Update running count when card history changes\n  useEffect(() => {\n    const newCount = cardHistory.reduce((count, card) => {\n      return count + (currentSystem.cardValues[card.rank] || 0);\n    }, 0);\n    setRunningCount(newCount);\n    setCards(cardHistory);\n  }, [cardHistory, currentSystem]);\n\n  // Calculate unique card counts for display\n  const uniqueCardCounts = useMemo(() => {\n    const counts = {};\n    cardHistory.forEach(card => {\n      counts[card.rank] = (counts[card.rank] || 0) + 1;\n    });\n    return counts;\n  }, [cardHistory]);\n\n  // Calculate true count based on remaining decks\n  const trueCount = useMemo(() => {\n    if (remainingDecks <= 0) return 0;\n    // For unbalanced systems, return running count directly\n    if (!COUNTING_SYSTEMS[selectedSystem].balanced) {\n      return runningCount;\n    }\n    // For balanced systems, calculate true count\n    const tc = runningCount / remainingDecks;\n    return Math.round(tc * 10) / 10; // Round to 1 decimal\n  }, [runningCount, remainingDecks, selectedSystem]);\n\n  // Get bet recommendation based on true count and system\n  const betRec = useMemo(() => getBetRecommendation(trueCount, selectedSystem), [trueCount, selectedSystem]);\n\n  // Loading state is no longer needed\n\n  // Handle card input from quick buttons\n  const handleCardInput = useCallback(card => {\n    // Clear any previous errors\n    setError('');\n\n    // Validate the card rank\n    const rank = card.trim().toUpperCase();\n    if (!CARD_RANKS.includes(rank)) {\n      setError(`Ungültige Karte: ${card}`);\n      return;\n    }\n\n    // Add the card to history with current input mode\n    addCardToHistory(rank, inputMode);\n  }, [inputMode, addCardToHistory]);\n\n  // Card input is now handled through the card buttons and history\n\n  const getCardColorClass = value => {\n    if (value > 0) return 'bg-green-900/50 text-green-300';\n    if (value < 0) return 'bg-red-900/50 text-red-300';\n    return 'bg-gray-700/50';\n  };\n\n  // usedDecks and decksLeft are already defined above with useMemo\n\n  // Render a card with proper styling (only showing rank)\n  const renderCard = (card, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `inline-block w-8 h-12 md:w-10 md:h-14 mx-0.5 rounded-md flex items-center justify-center text-sm font-bold ${currentSystem.cardValues[card.rank] > 0 ? 'bg-green-900/50 text-green-300' : currentSystem.cardValues[card.rank] < 0 ? 'bg-red-900/50 text-red-300' : 'bg-white/10 text-white'}`,\n    title: `${card.rank} (${currentSystem.cardValues[card.rank] >= 0 ? '+' : ''}${currentSystem.cardValues[card.rank]})`,\n    children: card.rank\n  }, index, false, {\n    fileName: _jsxFileName,\n    lineNumber: 349,\n    columnNumber: 5\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen bg-gray-900 text-white p-4 md:p-6\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"max-w-2xl mx-auto bg-gray-800 rounded-xl shadow-2xl overflow-hidden\",\n      style: {\n        minHeight: '90vh',\n        display: 'flex',\n        flexDirection: 'column'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-gray-900 p-6 border-b border-gray-700\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"text-2xl font-bold text-center\",\n          children: \"Card Counter Trainer\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 367,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-center text-gray-400 text-sm mt-1\",\n          children: [currentSystem.name, \" System\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 368,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mt-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex items-center justify-center gap-2\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"counting-system\",\n              className: \"text-sm text-gray-300\",\n              children: \"Counting System:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 372,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"relative\",\n              children: [/*#__PURE__*/_jsxDEV(\"select\", {\n                id: \"counting-system\",\n                value: selectedSystem,\n                onChange: e => {\n                  setSelectedSystem(e.target.value);\n                  setCards([]);\n                  setRunningCount(0);\n                },\n                className: \"bg-gray-800 border border-gray-700 text-white text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 p-2 pr-8 appearance-none\",\n                children: Object.values(COUNTING_SYSTEMS).map(system => /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: system.id,\n                  children: system.name\n                }, system.id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 387,\n                  columnNumber: 21\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 376,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"pointer-events-none absolute inset-y-0 right-0 flex items-center px-2 text-gray-400\",\n                children: /*#__PURE__*/_jsxDEV(\"svg\", {\n                  className: \"fill-current h-4 w-4\",\n                  xmlns: \"http://www.w3.org/2000/svg\",\n                  viewBox: \"0 0 20 20\",\n                  children: /*#__PURE__*/_jsxDEV(\"path\", {\n                    d: \"M9.293 12.95l.707.707L15.657 8l-1.414-1.414L10 10.828 5.757 6.586 4.343 8z\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 394,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 393,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 392,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 375,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => setShowSystemInfo(!showSystemInfo),\n              className: \"text-blue-400 hover:text-blue-300 text-sm\",\n              \"aria-label\": \"System info\",\n              children: /*#__PURE__*/_jsxDEV(\"svg\", {\n                xmlns: \"http://www.w3.org/2000/svg\",\n                className: \"h-5 w-5\",\n                viewBox: \"0 0 20 20\",\n                fill: \"currentColor\",\n                children: /*#__PURE__*/_jsxDEV(\"path\", {\n                  fillRule: \"evenodd\",\n                  d: \"M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-7-4a1 1 0 11-2 0 1 1 0 012 0zM9 9a1 1 0 000 2v3a1 1 0 001 1h.01a1 1 0 100-2H10V9z\",\n                  clipRule: \"evenodd\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 404,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 403,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 398,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 371,\n            columnNumber: 13\n          }, this), showSystemInfo && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mt-3 p-3 bg-gray-800 rounded-lg text-sm\",\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              className: \"font-semibold text-white mb-1\",\n              children: [currentSystem.name, \" System\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 411,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-gray-300 mb-2\",\n              children: currentSystem.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 412,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"grid grid-cols-3 gap-2 text-xs\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"p-2 bg-green-900/30 rounded\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"font-bold\",\n                  children: [\"+\", ((_Object$entries$filte = Object.entries(currentSystem.cardValues).filter(([_, v]) => v > 0)[0]) === null || _Object$entries$filte === void 0 ? void 0 : _Object$entries$filte[1]) || 0]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 415,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: Object.entries(currentSystem.cardValues).filter(([_, v]) => v > 0).map(([k]) => k).join(', ')\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 416,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 414,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"p-2 bg-gray-700/30 rounded\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"font-bold\",\n                  children: \"0\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 423,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: Object.entries(currentSystem.cardValues).filter(([_, v]) => v === 0).map(([k]) => k).join(', ')\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 424,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 422,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"p-2 bg-red-900/30 rounded\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"font-bold\",\n                  children: ((_Object$entries$filte2 = Object.entries(currentSystem.cardValues).filter(([_, v]) => v < 0)[0]) === null || _Object$entries$filte2 === void 0 ? void 0 : _Object$entries$filte2[1]) || 0\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 431,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: Object.entries(currentSystem.cardValues).filter(([_, v]) => v < 0).map(([k]) => k).join(', ')\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 432,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 430,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 413,\n              columnNumber: 17\n            }, this), !currentSystem.balanced && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mt-2 text-xs text-yellow-300\",\n              children: \"Note: This is an unbalanced system. The running count is used directly for betting.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 440,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 410,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 370,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 366,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"p-6 flex-grow\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-6 bg-gray-900/20 p-4 rounded-lg\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex justify-between items-center mb-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              className: \"text-sm font-medium text-gray-300\",\n              children: \"Karten eingeben\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 454,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex items-center space-x-2\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"text-xs text-gray-400\",\n                children: \"Modus:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 456,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"inline-flex rounded-md shadow-sm\",\n                role: \"group\",\n                children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                  type: \"button\",\n                  onClick: () => setInputMode('player'),\n                  className: `px-3 py-1 text-sm font-medium rounded-l-md ${inputMode === 'player' ? 'bg-purple-700 text-white' : 'bg-gray-700 text-gray-300 hover:bg-gray-600'}`,\n                  children: \"Spieler\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 458,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  type: \"button\",\n                  onClick: () => setInputMode('dealer'),\n                  className: `px-3 py-1 text-sm font-medium rounded-r-md ${inputMode === 'dealer' ? 'bg-blue-700 text-white' : 'bg-gray-700 text-gray-300 hover:bg-gray-600'}`,\n                  children: \"Dealer\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 469,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 457,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 455,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 453,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"grid grid-cols-5 gap-2 mb-4\",\n            children: CARD_RANKS.map(rank => /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => addCardToHistory(rank),\n              className: `h-12 flex items-center justify-center rounded-md font-medium text-white transition-all\n                    ${inputMode === 'player' ? 'bg-purple-900/70 hover:bg-purple-800/90' : 'bg-blue-900/70 hover:bg-blue-800/90'}\n                    hover:scale-105 active:scale-95`,\n              children: rank\n            }, rank, false, {\n              fileName: _jsxFileName,\n              lineNumber: 487,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 485,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"grid grid-cols-1 md:grid-cols-2 gap-4 mb-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"bg-gray-900/30 p-3 rounded-lg\",\n              children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                className: \"text-xs font-medium text-gray-400 mb-2\",\n                children: \"Deine Hand\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 502,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"flex flex-wrap gap-1 min-h-10\",\n                children: playerCards.length > 0 ? playerCards.map((card, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"w-8 h-10 flex items-center justify-center rounded-md bg-purple-900/70 text-white text-sm font-medium\",\n                  onClick: () => removeCardFromHistory(card.id),\n                  children: card.rank\n                }, card.id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 506,\n                  columnNumber: 23\n                }, this)) : /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"text-gray-500 text-sm\",\n                  children: \"Keine Karten\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 515,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 503,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"mt-1 text-xs text-gray-400\",\n                children: [\"Wert: \", playerHandValue > 0 ? playerHandValue : '-']\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 518,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 501,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"bg-gray-900/30 p-3 rounded-lg\",\n              children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                className: \"text-xs font-medium text-gray-400 mb-2\",\n                children: \"Dealer Hand\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 524,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"flex flex-wrap gap-1 min-h-10\",\n                children: dealerCards.length > 0 ? dealerCards.map((card, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"w-8 h-10 flex items-center justify-center rounded-md bg-blue-900/70 text-white text-sm font-medium\",\n                  onClick: () => removeCardFromHistory(card.id),\n                  children: card.rank\n                }, card.id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 528,\n                  columnNumber: 23\n                }, this)) : /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"text-gray-500 text-sm\",\n                  children: \"Keine Karten\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 537,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 525,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"mt-1 text-xs text-gray-400\",\n                children: [\"Wert: \", dealerHandValue > 0 ? dealerHandValue : '-']\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 540,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 523,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 500,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex justify-between items-center\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: clearAllCards,\n              className: \"px-3 py-1 text-xs bg-red-900/50 hover:bg-red-800/70 text-red-200 rounded transition-colors\",\n              children: \"Alle Karten zur\\xFCcksetzen\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 547,\n              columnNumber: 15\n            }, this), isCalculating ? /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"px-4 py-2 bg-green-800/50 text-white text-sm font-medium rounded flex items-center\",\n              children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n                className: \"animate-spin -ml-1 mr-2 h-4 w-4 text-white\",\n                xmlns: \"http://www.w3.org/2000/svg\",\n                fill: \"none\",\n                viewBox: \"0 0 24 24\",\n                children: [/*#__PURE__*/_jsxDEV(\"circle\", {\n                  className: \"opacity-25\",\n                  cx: \"12\",\n                  cy: \"12\",\n                  r: \"10\",\n                  stroke: \"currentColor\",\n                  strokeWidth: \"4\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 556,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"path\", {\n                  className: \"opacity-75\",\n                  fill: \"currentColor\",\n                  d: \"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 557,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 555,\n                columnNumber: 19\n              }, this), \"Berechne...\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 554,\n              columnNumber: 17\n            }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: handleSimulationClick,\n              disabled: playerCards.length === 0 || dealerCards.length === 0,\n              className: `px-4 py-2 text-white text-sm font-medium rounded transition-colors ${playerCards.length > 0 && dealerCards.length > 0 ? 'bg-green-700 hover:bg-green-800' : 'bg-gray-600 cursor-not-allowed'}`,\n              children: \"Empfohlene Aktion berechnen\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 562,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 546,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 452,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-gray-900/50 p-4 rounded-lg\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex items-center justify-between mb-2\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              className: \"text-sm font-medium text-gray-300\",\n              children: \"Bet\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 580,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"text-xs text-gray-400\",\n              children: \"Recommendation\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 581,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 579,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-3xl font-bold\",\n            children: betRec.unit\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 583,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-xs text-gray-400 mt-1\",\n            children: betRec.text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 584,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 578,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-6 bg-gray-900/20 p-4 rounded-lg relative group\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"absolute top-2 right-2\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"relative group\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"text-gray-400 hover:text-white text-sm w-5 h-5 flex items-center justify-center rounded-full bg-gray-800/50\",\n                title: \"Hilfe anzeigen\",\n                onClick: () => document.getElementById('cardHistoryHelp').classList.toggle('hidden'),\n                children: \"?\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 591,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                id: \"cardHistoryHelp\",\n                className: \"hidden absolute right-0 top-full mt-1 w-64 p-3 bg-gray-800 text-xs text-gray-300 rounded shadow-lg z-50\",\n                children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                  className: \"font-bold mb-2\",\n                  children: \"Kartenverlauf - Hilfe\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 599,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n                  className: \"space-y-1\",\n                  children: [/*#__PURE__*/_jsxDEV(\"li\", {\n                    children: \"\\u2022 Karten durch Leerzeichen oder Kommas eingeben (z.B. \\\"A K 10\\\" oder \\\"A,K,10\\\")\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 601,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                    children: \"\\u2022 Klicken Sie auf eine Karte im Verlauf, um sie zu entfernen\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 602,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                    children: \"\\u2022 Der Z\\xE4hler aktualisiert sich automatisch\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 603,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                    children: \"\\u2022 Farben werden ignoriert, nur die Werte z\\xE4hlen\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 604,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 600,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => document.getElementById('cardHistoryHelp').classList.add('hidden'),\n                  className: \"mt-2 text-blue-400 hover:text-blue-300 text-xs\",\n                  children: \"Schlie\\xDFen\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 606,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 598,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 590,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 589,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex justify-between items-center mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              className: \"text-sm font-medium text-gray-300\",\n              children: \"Kartenverlauf\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 617,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: clearAllCards,\n              className: \"text-xs bg-red-900/50 hover:bg-red-800/70 px-2 py-1 rounded transition-colors disabled:opacity-50 disabled:cursor-not-allowed\",\n              disabled: cardHistory.length === 0,\n              title: \"Entfernt alle Karten aus dem Verlauf\",\n              children: \"Alles zur\\xFCcksetzen\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 618,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 616,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-4 p-3 bg-gray-800/30 rounded\",\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              className: \"text-xs text-gray-400 mb-2\",\n              children: \"Aktive Karten\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 629,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex flex-wrap gap-1 min-h-8\",\n              children: Object.entries(uniqueCardCounts).length > 0 ? Object.entries(uniqueCardCounts).map(([rank, count]) => /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"relative group\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: `inline-flex items-center justify-center w-8 h-8 rounded ${currentSystem.cardValues[rank] > 0 ? 'bg-green-900/50' : currentSystem.cardValues[rank] < 0 ? 'bg-red-900/50' : 'bg-gray-700/50'}`,\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"text-sm\",\n                    children: rank\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 638,\n                    columnNumber: 25\n                  }, this), count > 1 && /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"absolute -top-1 -right-1 bg-blue-600 text-white text-xs rounded-full w-4 h-4 flex items-center justify-center\",\n                    children: count\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 640,\n                    columnNumber: 27\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 634,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"absolute bottom-full left-1/2 transform -translate-x-1/2 mb-1 px-2 py-1 text-xs text-white bg-gray-800 rounded opacity-0 group-hover:opacity-100 transition-opacity whitespace-nowrap\",\n                  children: [rank, \" (\", currentSystem.cardValues[rank] >= 0 ? '+' : '', currentSystem.cardValues[rank], \") \\xD7 \", count]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 645,\n                  columnNumber: 23\n                }, this)]\n              }, rank, true, {\n                fileName: _jsxFileName,\n                lineNumber: 633,\n                columnNumber: 21\n              }, this)) : /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"text-gray-500 text-sm\",\n                children: \"Keine Karten gespielt\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 651,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 630,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 628,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"p-2 bg-gray-800/50 rounded\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex items-center justify-between mb-2\",\n              children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                className: \"text-xs text-gray-400\",\n                children: [\"Vollst\\xE4ndiger Verlauf (\", cardHistory.length, \")\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 658,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"text-xs text-gray-500\",\n                children: \"Klicken zum Entfernen\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 659,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 657,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex flex-wrap gap-1 min-h-8 max-h-24 overflow-y-auto p-1\",\n              children: cardHistory.length > 0 ? [...cardHistory].reverse().map(card => /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => removeCardFromHistory(card.id),\n                className: \"relative group transition-transform hover:scale-110 active:scale-95\",\n                title: `${card.source === 'dealer' ? 'Dealer' : 'Spieler'}: ${card.rank} • ${new Date(card.timestamp).toLocaleTimeString()} (zum Entfernen klicken)`,\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: `inline-block w-6 h-6 text-xs flex items-center justify-center rounded text-xs ${card.source === 'dealer' ? 'bg-blue-900/60 hover:bg-red-900/70' : 'bg-purple-900/60 hover:bg-red-900/70'} transition-colors`,\n                  children: card.rank\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 670,\n                  columnNumber: 23\n                }, this)\n              }, card.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 664,\n                columnNumber: 21\n              }, this)) : /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"text-gray-500 text-sm\",\n                children: \"Keine Karten im Verlauf\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 680,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 661,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 656,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"text-sm font-medium text-gray-300 mb-3\",\n            children: \"Deck Information\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 685,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"grid grid-cols-1 md:grid-cols-2 gap-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"block text-xs text-gray-400 mb-1\",\n                children: \"Number of Decks\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 688,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"flex items-center\",\n                children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => setDecksRemaining(prev => Math.max(1, Math.floor(prev) - 1)),\n                  className: \"px-3 py-1 bg-gray-700 hover:bg-gray-600 rounded-l-md transition-colors\",\n                  children: \"-\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 690,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"number\",\n                  min: \"1\",\n                  max: \"10\",\n                  value: decksRemaining,\n                  onChange: e => setDecksRemaining(Math.max(1, Math.min(10, Number(e.target.value) || 1))),\n                  className: \"w-16 text-center bg-gray-800 border-t border-b border-gray-700 py-1 text-white\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 696,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => setDecksRemaining(prev => Math.min(10, Math.ceil(prev) + 1)),\n                  className: \"px-3 py-1 bg-gray-700 hover:bg-gray-600 rounded-r-md transition-colors\",\n                  children: \"+\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 704,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 689,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 687,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"text-xs text-gray-400 mb-1\",\n                children: \"Cards in Play\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 714,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"text-sm\",\n                children: [cards.length, \" / \", totalCards, \" cards (\", usedDecks.toFixed(1), \" decks used, \", remainingDecks.toFixed(1), \" decks left)\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 715,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 713,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 686,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 588,\n          columnNumber: 11\n        }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n          id: \"card-error\",\n          className: \"mt-2 text-sm text-red-400\",\n          children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n            className: \"w-4 h-4 inline mr-1\",\n            fill: \"none\",\n            stroke: \"currentColor\",\n            viewBox: \"0 0 24 24\",\n            xmlns: \"http://www.w3.org/2000/svg\",\n            children: /*#__PURE__*/_jsxDEV(\"path\", {\n              strokeLinecap: \"round\",\n              strokeLinejoin: \"round\",\n              strokeWidth: 2,\n              d: \"M12 8v4m0 4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 726,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 725,\n            columnNumber: 15\n          }, this), error]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 724,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"grid grid-cols-5 gap-2 mt-3\",\n          children: Object.entries(currentSystem.cardValues).map(([card]) => /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleCardInput(card),\n            className: `px-2 py-2 text-sm font-medium rounded-md transition-colors focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-offset-gray-900 ${getCardColorClass(currentSystem.cardValues[card])}`,\n            children: card\n          }, card, false, {\n            fileName: _jsxFileName,\n            lineNumber: 735,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 733,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 450,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-6\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex justify-between items-center mb-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"text-sm font-medium text-gray-300\",\n            children: \"Kartenverlauf\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 751,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex gap-2\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => {\n                const lastCard = [...cardHistory].pop();\n                if (lastCard) {\n                  removeCardFromHistory(lastCard.id);\n                }\n              },\n              disabled: cardHistory.length === 0,\n              className: \"text-xs px-3 py-1.5 bg-gray-700 hover:bg-gray-600 rounded-md transition-colors disabled:opacity-50 disabled:cursor-not-allowed focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-offset-gray-900 focus:ring-blue-500\",\n              children: \"Letzte Karte entfernen\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 753,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: clearAllCards,\n              className: \"text-xs px-3 py-1.5 bg-red-900/50 hover:bg-red-800/50 rounded-md transition-colors focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-offset-gray-900 focus:ring-red-500\",\n              children: \"Alle zur\\xFCcksetzen\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 765,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 752,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 750,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-gray-800/50 rounded-lg p-3 min-h-20 max-h-48 overflow-y-auto\",\n          children: cardHistory.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex flex-wrap gap-2\",\n            children: cardHistory.map((card, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `px-2.5 py-1 rounded-md text-sm font-mono ${card.source === 'player' ? 'bg-purple-900/50' : 'bg-blue-900/50'} text-white`,\n              onClick: () => removeCardFromHistory(card.id),\n              children: [card.rank, \" (\", card.source, \")\"]\n            }, card.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 777,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 775,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-gray-500 text-sm text-center py-4\",\n            children: \"Noch keine Karten hinzugef\\xFCgt. F\\xFCge Karten \\xFCber die Tasten oben hinzu.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 787,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 773,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 749,\n        columnNumber: 9\n      }, this), showHelp && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-gray-800 p-6 border-t border-gray-700\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"text-lg font-bold mb-3\",\n          children: \"Anleitung\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 797,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"space-y-2 text-sm text-gray-300\",\n          children: [/*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"\\u2022 W\\xE4hle ein Kartenz\\xE4hlsystem aus dem Dropdown-Men\\xFC\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 799,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"\\u2022 Klicke auf die Karten, um sie zur aktuellen Hand hinzuzuf\\xFCgen (Spieler oder Dealer)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 800,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"\\u2022 Nutze den Modus-Umschalter, um zwischen Spieler- und Dealer-Hand zu wechseln\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 801,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"\\u2022 Der laufende Z\\xE4hler aktualisiert sich automatisch mit jeder Karte\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 802,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"\\u2022 Der True Count wird basierend auf dem ausgew\\xE4hlten System und den verbleibenden Decks berechnet\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 803,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"\\u2022 Klicke auf eine Karte, um sie zu entfernen\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 804,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"\\u2022 Nutze \\\"Alle zur\\xFCcksetzen\\\", um alle Karten zu l\\xF6schen\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 805,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 798,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mt-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            className: \"font-semibold text-white mb-2\",\n            children: \"Zum Z\\xE4hlsystem:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 808,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            className: \"space-y-2 text-sm\",\n            children: [/*#__PURE__*/_jsxDEV(\"li\", {\n              children: [\"\\u2022 \", /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"font-medium\",\n                children: \"Hi-Lo:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 810,\n                columnNumber: 23\n              }, this), \" Ausgeglichenes System mit True Count Umrechnung\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 810,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: [\"\\u2022 \", /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"font-medium\",\n                children: \"KO:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 811,\n                columnNumber: 23\n              }, this), \" Unausgeglichenes System, verwendet direkt den laufenden Z\\xE4hler\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 811,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: [\"\\u2022 \", /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"font-medium\",\n                children: \"Omega II:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 812,\n                columnNumber: 23\n              }, this), \" Fortgeschrittenes System mit h\\xF6herer Spielgenauigkeit\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 812,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 809,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 807,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setShowHelp(false),\n          className: \"mt-6 w-full bg-blue-600 hover:bg-blue-700 text-white py-2 px-4 rounded transition-colors focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-offset-gray-800 focus:ring-blue-500\",\n          children: \"Verstanden!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 815,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 796,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-gray-900 p-3 border-t border-gray-800 flex justify-between items-center mt-auto\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setShowHelp(!showHelp),\n          className: \"text-sm text-blue-400 hover:text-blue-300 flex items-center gap-1.5 transition-colors focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2 focus:ring-offset-gray-900 rounded px-2 py-1\",\n          children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n            xmlns: \"http://www.w3.org/2000/svg\",\n            className: \"h-4 w-4\",\n            viewBox: \"0 0 20 20\",\n            fill: \"currentColor\",\n            children: /*#__PURE__*/_jsxDEV(\"path\", {\n              fillRule: \"evenodd\",\n              d: \"M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-8-3a1 1 0 00-.867.5 1 1 0 11-1.731-1A3 3 0 0113 8a3.001 3.001 0 01-2 2.83V11a1 1 0 11-2 0v-1a1 3 0 011.5-2.6 1 1 0 10-1-1.73z\",\n              clipRule: \"evenodd\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 831,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 830,\n            columnNumber: 13\n          }, this), showHelp ? 'Hilfe ausblenden' : 'Hilfe anzeigen']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 826,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-xs text-gray-500\",\n          children: [cardHistory.length, \" Karten \\u2022 \", usedDecks.toFixed(1), \" Decks verwendet \\u2022 \", remainingDecks.toFixed(1), \" Decks \\xFCbrig\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 835,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 825,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 364,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 363,\n    columnNumber: 5\n  }, this);\n};\n_s(CardCounter, \"ourQrjOcxtsTshzkYOrdOK8u7V4=\");\n_c = CardCounter;\nexport default CardCounter;\nvar _c;\n$RefreshReg$(_c, \"CardCounter\");","map":{"version":3,"names":["React","useState","useCallback","useEffect","useMemo","useRef","COUNTING_SYSTEMS","calculateTrueCount","getBetRecommendation","jsxDEV","_jsxDEV","CARD_RANKS","CardCounter","_s","_Object$entries$filte","_Object$entries$filte2","decksRemaining","setDecksRemaining","inputMode","setInputMode","isCalculating","setIsCalculating","runningCount","setRunningCount","showHelp","setShowHelp","selectedSystem","setSelectedSystem","showSystemInfo","setShowSystemInfo","error","setError","simulationResult","setSimulationResult","playerCardsInput","setPlayerCardsInput","dealerCardsInput","setDealerCardsInput","cardHistory","setCardHistory","lastProcessedInputs","setLastProcessedInputs","player","dealer","cards","setCards","playerCards","reverse","filter","card","source","dealerCards","playerCardRanks","map","rank","dealerCardRanks","cardCounts","counts","forEach","length","currentSystem","totalCards","Math","floor","remainingCards","max","remainingDecks","round","usedDecks","decksLeft","handleSimulationClick","setTimeout","console","log","trueCount","recommendedAction","confidence","winProbability","addCardToHistory","includes","newCard","id","Date","now","timestamp","toISOString","prev","isValidCard","trim","validRanks","toUpperCase","replace","startsWith","charAt","parseCards","input","split","invalidCards","validCards","validCard","push","random","toString","substr","join","processNewCards","newCards","prevHistory","newUniqueCards","some","clearAllCards","removeCardFromHistory","cardId","newPlayerCards","newDealerCards","c","allNewCards","calculateHandValue","hand","value","aces","isNaN","parseInt","playerHandValue","dealerHandValue","newCount","reduce","count","cardValues","uniqueCardCounts","balanced","tc","betRec","handleCardInput","getCardColorClass","renderCard","index","className","title","children","fileName","_jsxFileName","lineNumber","columnNumber","style","minHeight","display","flexDirection","name","htmlFor","onChange","e","target","Object","values","system","xmlns","viewBox","d","onClick","fill","fillRule","clipRule","description","entries","_","v","k","role","type","cx","cy","r","stroke","strokeWidth","disabled","unit","text","document","getElementById","classList","toggle","add","toLocaleTimeString","min","Number","ceil","toFixed","strokeLinecap","strokeLinejoin","lastCard","pop","_c","$RefreshReg$"],"sources":["C:/Users/silve/Downloads/blackjack-card-counter-main/frontend/src/components/CardCounter.jsx"],"sourcesContent":["import React, { useState, useCallback, useEffect, useMemo, useRef } from 'react';\nimport { COUNTING_SYSTEMS, calculateTrueCount, getBetRecommendation } from '../utils/countingSystems';\n\n// Card ranks constant\nconst CARD_RANKS = ['2', '3', '4', '5', '6', '7', '8', '9', '10', 'J', 'Q', 'K', 'A'];\n\nconst CardCounter = () => {\n  // Game state\n  const [decksRemaining, setDecksRemaining] = useState(3); // Default to 3 decks\n  const [inputMode, setInputMode] = useState('player'); // 'player' or 'dealer'\n  const [isCalculating, setIsCalculating] = useState(false); // For Monte Carlo simulation loading state\n  const [runningCount, setRunningCount] = useState(0);\n  const [showHelp, setShowHelp] = useState(false);\n\n  const [selectedSystem, setSelectedSystem] = useState('HILO');\n  const [showSystemInfo, setShowSystemInfo] = useState(false);\n  const [error, setError] = useState('');\n  \n  // Simulation state\n  const [simulationResult, setSimulationResult] = useState(null);\n  \n  // State for card inputs and persistent history\n  const [playerCardsInput, setPlayerCardsInput] = useState('');\n  const [dealerCardsInput, setDealerCardsInput] = useState('');\n  const [cardHistory, setCardHistory] = useState([]); // Persistent history of all cards ever played\n  \n  // Track the last input that was processed to prevent duplicates\n  const [lastProcessedInputs, setLastProcessedInputs] = useState({\n    player: '',\n    dealer: ''\n  });\n  \n  // Current cards in play (for counting)\n  const [cards, setCards] = useState([]);\n  \n  // Get current player and dealer cards from history (most recent first, with full card objects)\n  const playerCards = useMemo(() => \n    [...cardHistory].reverse().filter(card => card.source === 'player'), \n    [cardHistory]\n  );\n  \n  const dealerCards = useMemo(() => \n    [...cardHistory].reverse().filter(card => card.source === 'dealer'), \n    [cardHistory]\n  );\n  \n  // Get just the ranks for counting purposes\n  const playerCardRanks = useMemo(() => \n    playerCards.map(card => card.rank),\n    [playerCards]\n  );\n  \n  const dealerCardRanks = useMemo(() => \n    dealerCards.map(card => card.rank),\n    [dealerCards]\n  );\n  \n  // Calculate card counts for each rank\n  const cardCounts = useMemo(() => {\n    const counts = {};\n    CARD_RANKS.forEach(rank => {\n      counts[rank] = cardHistory.filter(card => card.rank === rank).length;\n    });\n    return counts;\n  }, [cardHistory]);\n\n  // Get current counting system\n  const currentSystem = useMemo(() => COUNTING_SYSTEMS[selectedSystem], [selectedSystem]);\n\n  // Calculate deck information\n  const totalCards = useMemo(() => Math.floor(decksRemaining * 52), [decksRemaining]);\n  const remainingCards = useMemo(() => Math.max(0, totalCards - cards.length), [totalCards, cards.length]);\n  const remainingDecks = useMemo(() => Math.max(0.1, Math.round((remainingCards / 52) * 100) / 100), [remainingCards]);\n  const usedDecks = useMemo(() => Math.max(0, Math.round((decksRemaining - remainingDecks) * 100) / 100), [decksRemaining, remainingDecks]);\n  \n  // Alias remainingDecks as decksLeft for backward compatibility\n  const decksLeft = remainingDecks;\n  \n  // Handle simulation button click\n  const handleSimulationClick = useCallback(() => {\n    if (playerCardRanks.length === 0 || dealerCardRanks.length === 0) {\n      setError('Bitte füge mindestens eine Karte für Spieler und Dealer hinzu');\n      return;\n    }\n    \n    setIsCalculating(true);\n    \n    // Simulate API call with timeout\n    setTimeout(() => {\n      // TODO: Replace with actual simulation logic\n      console.log('Running simulation with:', {\n        playerCards: playerCardRanks,\n        dealerCards: dealerCardRanks,\n        runningCount,\n        trueCount: calculateTrueCount(runningCount, remainingDecks)\n      });\n      \n      // Set a mock result for now\n      setSimulationResult({\n        recommendedAction: 'HIT', // or 'STAND', 'DOUBLE', etc.\n        confidence: 0.75,\n        winProbability: 0.65\n      });\n      \n      setIsCalculating(false);\n    }, 1000);\n  }, [playerCardRanks, dealerCardRanks, runningCount, remainingDecks]);\n\n  // Add a card to the history\n  const addCardToHistory = useCallback((rank, source = 'player') => {\n    if (!CARD_RANKS.includes(rank)) {\n      setError(`Ungültige Karte: ${rank}`);\n      return;\n    }\n    \n    const newCard = {\n      id: Date.now(),\n      rank,\n      source: inputMode, // 'player' or 'dealer'\n      timestamp: new Date().toISOString()\n    };\n    \n    setCardHistory(prev => [...prev, newCard]);\n    setError('');\n  }, [inputMode]);\n\n  // Validate if a card rank is valid\n  const isValidCard = (card) => {\n    if (!card || !card.trim()) return false;\n    \n    const validRanks = ['2', '3', '4', '5', '6', '7', '8', '9', '10', 'J', 'Q', 'K', 'A'];\n    let rank = card.trim().toUpperCase().replace(/[^A-Z0-9]/g, '');\n    \n    if (rank.startsWith('10')) {\n      rank = '10';\n    } else {\n      rank = rank.charAt(0);\n    }\n    \n    return validRanks.includes(rank) ? rank : null;\n  };\n\n  // Parse card string into array of card objects, only using ranks\n  const parseCards = useCallback((input, source) => {\n    if (!input || !input.trim()) return [];\n    \n    try {\n      // First, validate all cards in the input\n      const cards = input.split(/[,\\s]+/)\n        .filter(card => card.trim().length > 0);\n      \n      // Check for any invalid cards\n      const invalidCards = [];\n      const validCards = [];\n      \n      cards.forEach(card => {\n        const validCard = isValidCard(card);\n        if (!validCard) {\n          invalidCards.push(card);\n        } else {\n          validCards.push({\n            rank: validCard,\n            source,\n            timestamp: Date.now(),\n            id: `${source}-${validCard}-${Date.now()}-${Math.random().toString(36).substr(2, 6)}`\n          });\n        }\n      });\n      \n      if (invalidCards.length > 0) {\n        setError(`Ungültige Karte(n): ${invalidCards.join(', ')}. Gültige Karten: 2-10, J, Q, K, A`);\n      }\n      \n      return validCards;\n    } catch (error) {\n      console.error('Error parsing cards:', error);\n      setError('Fehler beim Verarbeiten der Karten. Bitte versuche es erneut.');\n      return [];\n    }\n  }, [setError]);\n  \n  // Process new cards from inputs and add them to history\n  const processNewCards = (input, source) => {\n    // Clear any previous errors\n    setError('');\n    \n    const newCards = parseCards(input, source);\n    \n    // Only update if we have valid cards\n    if (newCards.length > 0) {\n      setCardHistory(prevHistory => {\n        // Only add cards that aren't already in history (based on timestamp)\n        const newUniqueCards = newCards.filter(newCard => \n          !prevHistory.some(card => \n            card.rank === newCard.rank && \n            card.source === newCard.source &&\n            // Only consider very recent duplicates (last 2 seconds)\n            Date.now() - card.timestamp < 2000\n          )\n        );\n        \n        if (newUniqueCards.length === 0) {\n          // No new cards to add\n          return prevHistory;\n        }\n        \n        return [...prevHistory, ...newUniqueCards];\n      });\n    }\n  };\n  \n  // Clear all cards from history\n  const clearAllCards = () => {\n    setCardHistory([]);\n    setPlayerCardsInput('');\n    setDealerCardsInput('');\n    setLastProcessedInputs({ player: '', dealer: '' });\n    setError('');\n  };\n  \n  // Remove a single card from history by ID\n  const removeCardFromHistory = (cardId) => {\n    setCardHistory(prevHistory => \n      prevHistory.filter(card => card.id !== cardId)\n    );\n  };\n\n  // Update card history when inputs change\n  useEffect(() => {\n    const newPlayerCards = parseCards(playerCardsInput, 'player');\n    const newDealerCards = parseCards(dealerCardsInput, 'dealer');\n    \n    // Update card history with unique cards from both hands\n    setCardHistory(prevHistory => {\n      // Keep only cards that are still in either hand\n      const remainingCards = prevHistory.filter(card => \n        newPlayerCards.some(c => c.id === card.id) || \n        newDealerCards.some(c => c.id === card.id)\n      );\n      \n      // Add any new cards that aren't in history yet\n      const allNewCards = [...newPlayerCards, ...newDealerCards];\n      const newCards = allNewCards.filter(\n        newCard => !remainingCards.some(card => card.id === newCard.id)\n      );\n      \n      return [...remainingCards, ...newCards];\n    });\n  }, [playerCardsInput, dealerCardsInput]);\n  \n  // Using the playerCards, dealerCards, and cardCounts declarations from above\n  \n  // Calculate hand value (only using ranks, ignoring suits)\n  const calculateHandValue = useCallback((hand) => {\n    let value = 0;\n    let aces = 0;\n    \n    hand.forEach(card => {\n      const rank = card.rank;\n      if (rank === 'A') {\n        aces += 1;\n        value += 11;\n      } else if (['K', 'Q', 'J', '10'].includes(rank)) {\n        value += 10;\n      } else if (rank && !isNaN(rank)) {\n        value += parseInt(rank, 10);\n      }\n    });\n    \n    // Handle aces (A can be 11 or 1)\n    while (value > 21 && aces > 0) {\n      value -= 10;\n      aces -= 1;\n    }\n    \n    return value;\n  }, []);\n  \n  // Calculate hand values\n  const playerHandValue = useMemo(() => calculateHandValue(playerCards), [playerCards, calculateHandValue]);\n  const dealerHandValue = useMemo(() => calculateHandValue(dealerCards), [dealerCards, calculateHandValue]);\n  \n  // Update running count when card history changes\n  useEffect(() => {\n    const newCount = cardHistory.reduce((count, card) => {\n      return count + (currentSystem.cardValues[card.rank] || 0);\n    }, 0);\n    \n    setRunningCount(newCount);\n    setCards(cardHistory);\n  }, [cardHistory, currentSystem]);\n  \n  // Calculate unique card counts for display\n  const uniqueCardCounts = useMemo(() => {\n    const counts = {};\n    cardHistory.forEach(card => {\n      counts[card.rank] = (counts[card.rank] || 0) + 1;\n    });\n    return counts;\n  }, [cardHistory]);\n  \n  // Calculate true count based on remaining decks\n  const trueCount = useMemo(() => {\n    if (remainingDecks <= 0) return 0;\n    // For unbalanced systems, return running count directly\n    if (!COUNTING_SYSTEMS[selectedSystem].balanced) {\n      return runningCount;\n    }\n    // For balanced systems, calculate true count\n    const tc = runningCount / remainingDecks;\n    return Math.round(tc * 10) / 10; // Round to 1 decimal\n  }, [runningCount, remainingDecks, selectedSystem]);\n\n  // Get bet recommendation based on true count and system\n  const betRec = useMemo(() => \n    getBetRecommendation(trueCount, selectedSystem)\n  , [trueCount, selectedSystem]);\n\n  // Loading state is no longer needed\n\n  // Handle card input from quick buttons\n  const handleCardInput = useCallback((card) => {\n    // Clear any previous errors\n    setError('');\n    \n    // Validate the card rank\n    const rank = card.trim().toUpperCase();\n    if (!CARD_RANKS.includes(rank)) {\n      setError(`Ungültige Karte: ${card}`);\n      return;\n    }\n    \n    // Add the card to history with current input mode\n    addCardToHistory(rank, inputMode);\n  }, [inputMode, addCardToHistory]);\n  \n  // Card input is now handled through the card buttons and history\n\n  const getCardColorClass = (value) => {\n    if (value > 0) return 'bg-green-900/50 text-green-300';\n    if (value < 0) return 'bg-red-900/50 text-red-300';\n    return 'bg-gray-700/50';\n  };\n\n  // usedDecks and decksLeft are already defined above with useMemo\n\n  // Render a card with proper styling (only showing rank)\n  const renderCard = (card, index) => (\n    <div \n      key={index}\n      className={`inline-block w-8 h-12 md:w-10 md:h-14 mx-0.5 rounded-md flex items-center justify-center text-sm font-bold ${\n        currentSystem.cardValues[card.rank] > 0 ? 'bg-green-900/50 text-green-300' :\n        currentSystem.cardValues[card.rank] < 0 ? 'bg-red-900/50 text-red-300' :\n        'bg-white/10 text-white'\n      }`}\n      title={`${card.rank} (${currentSystem.cardValues[card.rank] >= 0 ? '+' : ''}${currentSystem.cardValues[card.rank]})`}\n    >\n      {card.rank}\n    </div>\n  );\n\n  return (\n    <div className=\"min-h-screen bg-gray-900 text-white p-4 md:p-6\">\n      <div className=\"max-w-2xl mx-auto bg-gray-800 rounded-xl shadow-2xl overflow-hidden\" style={{ minHeight: '90vh', display: 'flex', flexDirection: 'column' }}>\n        {/* Header */}\n        <div className=\"bg-gray-900 p-6 border-b border-gray-700\">\n          <h1 className=\"text-2xl font-bold text-center\">Card Counter Trainer</h1>\n          <p className=\"text-center text-gray-400 text-sm mt-1\">{currentSystem.name} System</p>\n          \n          <div className=\"mt-4\">\n            <div className=\"flex items-center justify-center gap-2\">\n              <label htmlFor=\"counting-system\" className=\"text-sm text-gray-300\">\n                Counting System:\n              </label>\n              <div className=\"relative\">\n                <select\n                  id=\"counting-system\"\n                  value={selectedSystem}\n                  onChange={(e) => {\n                    setSelectedSystem(e.target.value);\n                    setCards([]);\n                    setRunningCount(0);\n                  }}\n                  className=\"bg-gray-800 border border-gray-700 text-white text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 p-2 pr-8 appearance-none\"\n                >\n                  {Object.values(COUNTING_SYSTEMS).map((system) => (\n                    <option key={system.id} value={system.id}>\n                      {system.name}\n                    </option>\n                  ))}\n                </select>\n                <div className=\"pointer-events-none absolute inset-y-0 right-0 flex items-center px-2 text-gray-400\">\n                  <svg className=\"fill-current h-4 w-4\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\">\n                    <path d=\"M9.293 12.95l.707.707L15.657 8l-1.414-1.414L10 10.828 5.757 6.586 4.343 8z\"/>\n                  </svg>\n                </div>\n              </div>\n              <button\n                onClick={() => setShowSystemInfo(!showSystemInfo)}\n                className=\"text-blue-400 hover:text-blue-300 text-sm\"\n                aria-label=\"System info\"\n              >\n                <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-5 w-5\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n                  <path fillRule=\"evenodd\" d=\"M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-7-4a1 1 0 11-2 0 1 1 0 012 0zM9 9a1 1 0 000 2v3a1 1 0 001 1h.01a1 1 0 100-2H10V9z\" clipRule=\"evenodd\" />\n                </svg>\n              </button>\n            </div>\n            \n            {showSystemInfo && (\n              <div className=\"mt-3 p-3 bg-gray-800 rounded-lg text-sm\">\n                <h4 className=\"font-semibold text-white mb-1\">{currentSystem.name} System</h4>\n                <p className=\"text-gray-300 mb-2\">{currentSystem.description}</p>\n                <div className=\"grid grid-cols-3 gap-2 text-xs\">\n                  <div className=\"p-2 bg-green-900/30 rounded\">\n                    <div className=\"font-bold\">+{Object.entries(currentSystem.cardValues).filter(([_, v]) => v > 0)[0]?.[1] || 0}</div>\n                    <div>{Object.entries(currentSystem.cardValues)\n                      .filter(([_, v]) => v > 0)\n                      .map(([k]) => k)\n                      .join(', ')}\n                    </div>\n                  </div>\n                  <div className=\"p-2 bg-gray-700/30 rounded\">\n                    <div className=\"font-bold\">0</div>\n                    <div>{Object.entries(currentSystem.cardValues)\n                      .filter(([_, v]) => v === 0)\n                      .map(([k]) => k)\n                      .join(', ')}\n                    </div>\n                  </div>\n                  <div className=\"p-2 bg-red-900/30 rounded\">\n                    <div className=\"font-bold\">{Object.entries(currentSystem.cardValues).filter(([_, v]) => v < 0)[0]?.[1] || 0}</div>\n                    <div>{Object.entries(currentSystem.cardValues)\n                      .filter(([_, v]) => v < 0)\n                      .map(([k]) => k)\n                      .join(', ')}\n                    </div>\n                  </div>\n                </div>\n                {!currentSystem.balanced && (\n                  <div className=\"mt-2 text-xs text-yellow-300\">\n                    Note: This is an unbalanced system. The running count is used directly for betting.\n                  </div>\n                )}\n              </div>\n            )}\n          </div>\n        </div>\n\n        {/* Main Content */}\n        <div className=\"p-6 flex-grow\">\n          {/* Card Input Section */}\n          <div className=\"mb-6 bg-gray-900/20 p-4 rounded-lg\">\n            <div className=\"flex justify-between items-center mb-4\">\n              <h3 className=\"text-sm font-medium text-gray-300\">Karten eingeben</h3>\n              <div className=\"flex items-center space-x-2\">\n                <span className=\"text-xs text-gray-400\">Modus:</span>\n                <div className=\"inline-flex rounded-md shadow-sm\" role=\"group\">\n                  <button\n                    type=\"button\"\n                    onClick={() => setInputMode('player')}\n                    className={`px-3 py-1 text-sm font-medium rounded-l-md ${\n                      inputMode === 'player' \n                        ? 'bg-purple-700 text-white' \n                        : 'bg-gray-700 text-gray-300 hover:bg-gray-600'\n                    }`}\n                  >\n                    Spieler\n                  </button>\n                  <button\n                    type=\"button\"\n                    onClick={() => setInputMode('dealer')}\n                    className={`px-3 py-1 text-sm font-medium rounded-r-md ${\n                      inputMode === 'dealer' \n                        ? 'bg-blue-700 text-white' \n                        : 'bg-gray-700 text-gray-300 hover:bg-gray-600'\n                    }`}\n                  >\n                    Dealer\n                  </button>\n                </div>\n              </div>\n            </div>\n            \n            {/* Card Buttons */}\n            <div className=\"grid grid-cols-5 gap-2 mb-4\">\n              {CARD_RANKS.map(rank => (\n                <button\n                  key={rank}\n                  onClick={() => addCardToHistory(rank)}\n                  className={`h-12 flex items-center justify-center rounded-md font-medium text-white transition-all\n                    ${inputMode === 'player' ? 'bg-purple-900/70 hover:bg-purple-800/90' : 'bg-blue-900/70 hover:bg-blue-800/90'}\n                    hover:scale-105 active:scale-95`}\n                >\n                  {rank}\n                </button>\n              ))}\n            </div>\n            \n            {/* Current Hands */}\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4 mb-4\">\n              <div className=\"bg-gray-900/30 p-3 rounded-lg\">\n                <h4 className=\"text-xs font-medium text-gray-400 mb-2\">Deine Hand</h4>\n                <div className=\"flex flex-wrap gap-1 min-h-10\">\n                  {playerCards.length > 0 ? (\n                    playerCards.map((card, index) => (\n                      <div \n                        key={card.id}\n                        className=\"w-8 h-10 flex items-center justify-center rounded-md bg-purple-900/70 text-white text-sm font-medium\"\n                        onClick={() => removeCardFromHistory(card.id)}\n                      >\n                        {card.rank}\n                      </div>\n                    ))\n                  ) : (\n                    <div className=\"text-gray-500 text-sm\">Keine Karten</div>\n                  )}\n                </div>\n                <div className=\"mt-1 text-xs text-gray-400\">\n                  Wert: {playerHandValue > 0 ? playerHandValue : '-'}\n                </div>\n              </div>\n              \n              <div className=\"bg-gray-900/30 p-3 rounded-lg\">\n                <h4 className=\"text-xs font-medium text-gray-400 mb-2\">Dealer Hand</h4>\n                <div className=\"flex flex-wrap gap-1 min-h-10\">\n                  {dealerCards.length > 0 ? (\n                    dealerCards.map((card, index) => (\n                      <div \n                        key={card.id}\n                        className=\"w-8 h-10 flex items-center justify-center rounded-md bg-blue-900/70 text-white text-sm font-medium\"\n                        onClick={() => removeCardFromHistory(card.id)}\n                      >\n                        {card.rank}\n                      </div>\n                    ))\n                  ) : (\n                    <div className=\"text-gray-500 text-sm\">Keine Karten</div>\n                  )}\n                </div>\n                <div className=\"mt-1 text-xs text-gray-400\">\n                  Wert: {dealerHandValue > 0 ? dealerHandValue : '-'}\n                </div>\n              </div>\n            </div>\n            \n            <div className=\"flex justify-between items-center\">\n              <button\n                onClick={clearAllCards}\n                className=\"px-3 py-1 text-xs bg-red-900/50 hover:bg-red-800/70 text-red-200 rounded transition-colors\"\n              >\n                Alle Karten zurücksetzen\n              </button>\n              {isCalculating ? (\n                <div className=\"px-4 py-2 bg-green-800/50 text-white text-sm font-medium rounded flex items-center\">\n                  <svg className=\"animate-spin -ml-1 mr-2 h-4 w-4 text-white\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\">\n                    <circle className=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" strokeWidth=\"4\"></circle>\n                    <path className=\"opacity-75\" fill=\"currentColor\" d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"></path>\n                  </svg>\n                  Berechne...\n                </div>\n              ) : (\n                <button\n                  onClick={handleSimulationClick}\n                  disabled={playerCards.length === 0 || dealerCards.length === 0}\n                  className={`px-4 py-2 text-white text-sm font-medium rounded transition-colors ${\n                    playerCards.length > 0 && dealerCards.length > 0 \n                      ? 'bg-green-700 hover:bg-green-800' \n                      : 'bg-gray-600 cursor-not-allowed'\n                  }`}\n                >\n                  Empfohlene Aktion berechnen\n                </button>\n              )}\n            </div>\n          </div>\n          \n          {/* Bet Recommendation */}\n          <div className=\"bg-gray-900/50 p-4 rounded-lg\">\n            <div className=\"flex items-center justify-between mb-2\">\n              <h3 className=\"text-sm font-medium text-gray-300\">Bet</h3>\n              <span className=\"text-xs text-gray-400\">Recommendation</span>\n            </div>\n            <div className=\"text-3xl font-bold\">{betRec.unit}</div>\n            <div className=\"text-xs text-gray-400 mt-1\">{betRec.text}</div>\n          </div>\n          \n          {/* Card History */}\n          <div className=\"mb-6 bg-gray-900/20 p-4 rounded-lg relative group\">\n            <div className=\"absolute top-2 right-2\">\n              <div className=\"relative group\">\n                <button \n                  className=\"text-gray-400 hover:text-white text-sm w-5 h-5 flex items-center justify-center rounded-full bg-gray-800/50\"\n                  title=\"Hilfe anzeigen\"\n                  onClick={() => document.getElementById('cardHistoryHelp').classList.toggle('hidden')}\n                >\n                  ?\n                </button>\n                <div id=\"cardHistoryHelp\" className=\"hidden absolute right-0 top-full mt-1 w-64 p-3 bg-gray-800 text-xs text-gray-300 rounded shadow-lg z-50\">\n                  <h4 className=\"font-bold mb-2\">Kartenverlauf - Hilfe</h4>\n                  <ul className=\"space-y-1\">\n                    <li>• Karten durch Leerzeichen oder Kommas eingeben (z.B. \"A K 10\" oder \"A,K,10\")</li>\n                    <li>• Klicken Sie auf eine Karte im Verlauf, um sie zu entfernen</li>\n                    <li>• Der Zähler aktualisiert sich automatisch</li>\n                    <li>• Farben werden ignoriert, nur die Werte zählen</li>\n                  </ul>\n                  <button \n                    onClick={() => document.getElementById('cardHistoryHelp').classList.add('hidden')}\n                    className=\"mt-2 text-blue-400 hover:text-blue-300 text-xs\"\n                  >\n                    Schließen\n                  </button>\n                </div>\n              </div>\n            </div>\n            \n            <div className=\"flex justify-between items-center mb-3\">\n              <h3 className=\"text-sm font-medium text-gray-300\">Kartenverlauf</h3>\n              <button\n                onClick={clearAllCards}\n                className=\"text-xs bg-red-900/50 hover:bg-red-800/70 px-2 py-1 rounded transition-colors disabled:opacity-50 disabled:cursor-not-allowed\"\n                disabled={cardHistory.length === 0}\n                title=\"Entfernt alle Karten aus dem Verlauf\"\n              >\n                Alles zurücksetzen\n              </button>\n            </div>\n            \n            <div className=\"mb-4 p-3 bg-gray-800/30 rounded\">\n              <h4 className=\"text-xs text-gray-400 mb-2\">Aktive Karten</h4>\n              <div className=\"flex flex-wrap gap-1 min-h-8\">\n                {Object.entries(uniqueCardCounts).length > 0 ? (\n                  Object.entries(uniqueCardCounts).map(([rank, count]) => (\n                    <div key={rank} className=\"relative group\">\n                      <div className={`inline-flex items-center justify-center w-8 h-8 rounded ${\n                        currentSystem.cardValues[rank] > 0 ? 'bg-green-900/50' :\n                        currentSystem.cardValues[rank] < 0 ? 'bg-red-900/50' : 'bg-gray-700/50'\n                      }`}>\n                        <span className=\"text-sm\">{rank}</span>\n                        {count > 1 && (\n                          <span className=\"absolute -top-1 -right-1 bg-blue-600 text-white text-xs rounded-full w-4 h-4 flex items-center justify-center\">\n                            {count}\n                          </span>\n                        )}\n                      </div>\n                      <div className=\"absolute bottom-full left-1/2 transform -translate-x-1/2 mb-1 px-2 py-1 text-xs text-white bg-gray-800 rounded opacity-0 group-hover:opacity-100 transition-opacity whitespace-nowrap\">\n                        {rank} ({currentSystem.cardValues[rank] >= 0 ? '+' : ''}{currentSystem.cardValues[rank]}) × {count}\n                      </div>\n                    </div>\n                  ))\n                ) : (\n                  <div className=\"text-gray-500 text-sm\">Keine Karten gespielt</div>\n                )}\n              </div>\n            </div>\n            \n            <div className=\"p-2 bg-gray-800/50 rounded\">\n              <div className=\"flex items-center justify-between mb-2\">\n                <h4 className=\"text-xs text-gray-400\">Vollständiger Verlauf ({cardHistory.length})</h4>\n                <div className=\"text-xs text-gray-500\">Klicken zum Entfernen</div>\n              </div>\n              <div className=\"flex flex-wrap gap-1 min-h-8 max-h-24 overflow-y-auto p-1\">\n                {cardHistory.length > 0 ? (\n                  [...cardHistory].reverse().map((card) => (\n                    <button\n                      key={card.id}\n                      onClick={() => removeCardFromHistory(card.id)}\n                      className=\"relative group transition-transform hover:scale-110 active:scale-95\"\n                      title={`${card.source === 'dealer' ? 'Dealer' : 'Spieler'}: ${card.rank} • ${new Date(card.timestamp).toLocaleTimeString()} (zum Entfernen klicken)`}\n                    >\n                      <div className={`inline-block w-6 h-6 text-xs flex items-center justify-center rounded text-xs ${\n                        card.source === 'dealer' \n                          ? 'bg-blue-900/60 hover:bg-red-900/70' \n                          : 'bg-purple-900/60 hover:bg-red-900/70'\n                      } transition-colors`}>\n                        {card.rank}\n                      </div>\n                    </button>\n                  ))\n                ) : (\n                  <div className=\"text-gray-500 text-sm\">Keine Karten im Verlauf</div>\n                )}\n              </div>\n            </div>\n            \n            <h3 className=\"text-sm font-medium text-gray-300 mb-3\">Deck Information</h3>\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n              <div>\n                <label className=\"block text-xs text-gray-400 mb-1\">Number of Decks</label>\n                <div className=\"flex items-center\">\n                  <button\n                    onClick={() => setDecksRemaining(prev => Math.max(1, Math.floor(prev) - 1))}\n                    className=\"px-3 py-1 bg-gray-700 hover:bg-gray-600 rounded-l-md transition-colors\"\n                  >\n                    -\n                  </button>\n                  <input\n                    type=\"number\"\n                    min=\"1\"\n                    max=\"10\"\n                    value={decksRemaining}\n                    onChange={(e) => setDecksRemaining(Math.max(1, Math.min(10, Number(e.target.value) || 1)))}\n                    className=\"w-16 text-center bg-gray-800 border-t border-b border-gray-700 py-1 text-white\"\n                  />\n                  <button\n                    onClick={() => setDecksRemaining(prev => Math.min(10, Math.ceil(prev) + 1))}\n                    className=\"px-3 py-1 bg-gray-700 hover:bg-gray-600 rounded-r-md transition-colors\"\n                  >\n                    +\n                  </button>\n                </div>\n              </div>\n              \n              <div>\n                <div className=\"text-xs text-gray-400 mb-1\">Cards in Play</div>\n                <div className=\"text-sm\">\n                  {cards.length} / {totalCards} cards ({usedDecks.toFixed(1)} decks used, {remainingDecks.toFixed(1)} decks left)\n                </div>\n              </div>\n            </div>\n          </div>\n          \n          {/* Error message */}\n          {error && (\n            <p id=\"card-error\" className=\"mt-2 text-sm text-red-400\">\n              <svg className=\"w-4 h-4 inline mr-1\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\">\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 8v4m0 4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z\" />\n              </svg>\n              {error}\n            </p>\n          )}\n          \n          {/* Quick Buttons */}\n          <div className=\"grid grid-cols-5 gap-2 mt-3\">\n            {Object.entries(currentSystem.cardValues).map(([card]) => (\n              <button\n                key={card}\n                onClick={() => handleCardInput(card)}\n                className={`px-2 py-2 text-sm font-medium rounded-md transition-colors focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-offset-gray-900 ${\n                  getCardColorClass(currentSystem.cardValues[card])\n                }`}\n              >\n                {card}\n              </button>\n            ))}\n          </div>\n        </div>\n\n        {/* Card History */}\n        <div className=\"mb-6\">\n          <div className=\"flex justify-between items-center mb-2\">\n            <h3 className=\"text-sm font-medium text-gray-300\">Kartenverlauf</h3>\n            <div className=\"flex gap-2\">\n              <button\n                onClick={() => {\n                  const lastCard = [...cardHistory].pop();\n                  if (lastCard) {\n                    removeCardFromHistory(lastCard.id);\n                  }\n                }}\n                disabled={cardHistory.length === 0}\n                className=\"text-xs px-3 py-1.5 bg-gray-700 hover:bg-gray-600 rounded-md transition-colors disabled:opacity-50 disabled:cursor-not-allowed focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-offset-gray-900 focus:ring-blue-500\"\n              >\n                Letzte Karte entfernen\n              </button>\n              <button\n                onClick={clearAllCards}\n                className=\"text-xs px-3 py-1.5 bg-red-900/50 hover:bg-red-800/50 rounded-md transition-colors focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-offset-gray-900 focus:ring-red-500\"\n              >\n                Alle zurücksetzen\n              </button>\n            </div>\n          </div>\n          <div className=\"bg-gray-800/50 rounded-lg p-3 min-h-20 max-h-48 overflow-y-auto\">\n            {cardHistory.length > 0 ? (\n              <div className=\"flex flex-wrap gap-2\">\n                {cardHistory.map((card, index) => (\n                  <div\n                    key={card.id}\n                    className={`px-2.5 py-1 rounded-md text-sm font-mono ${card.source === 'player' ? 'bg-purple-900/50' : 'bg-blue-900/50'} text-white`}\n                    onClick={() => removeCardFromHistory(card.id)}\n                  >\n                    {card.rank} ({card.source})\n                  </div>\n                ))}\n              </div>\n            ) : (\n              <p className=\"text-gray-500 text-sm text-center py-4\">\n                Noch keine Karten hinzugefügt. Füge Karten über die Tasten oben hinzu.\n              </p>\n            )}\n          </div>\n        </div>\n        \n        {/* Help Panel */}\n        {showHelp && (\n          <div className=\"bg-gray-800 p-6 border-t border-gray-700\">\n            <h3 className=\"text-lg font-bold mb-3\">Anleitung</h3>\n            <ul className=\"space-y-2 text-sm text-gray-300\">\n              <li>• Wähle ein Kartenzählsystem aus dem Dropdown-Menü</li>\n              <li>• Klicke auf die Karten, um sie zur aktuellen Hand hinzuzufügen (Spieler oder Dealer)</li>\n              <li>• Nutze den Modus-Umschalter, um zwischen Spieler- und Dealer-Hand zu wechseln</li>\n              <li>• Der laufende Zähler aktualisiert sich automatisch mit jeder Karte</li>\n              <li>• Der True Count wird basierend auf dem ausgewählten System und den verbleibenden Decks berechnet</li>\n              <li>• Klicke auf eine Karte, um sie zu entfernen</li>\n              <li>• Nutze \"Alle zurücksetzen\", um alle Karten zu löschen</li>\n            </ul>\n            <div className=\"mt-4\">\n              <h4 className=\"font-semibold text-white mb-2\">Zum Zählsystem:</h4>\n              <ul className=\"space-y-2 text-sm\">\n                <li>• <span className=\"font-medium\">Hi-Lo:</span> Ausgeglichenes System mit True Count Umrechnung</li>\n                <li>• <span className=\"font-medium\">KO:</span> Unausgeglichenes System, verwendet direkt den laufenden Zähler</li>\n                <li>• <span className=\"font-medium\">Omega II:</span> Fortgeschrittenes System mit höherer Spielgenauigkeit</li>\n              </ul>\n            </div>\n            <button\n              onClick={() => setShowHelp(false)}\n              className=\"mt-6 w-full bg-blue-600 hover:bg-blue-700 text-white py-2 px-4 rounded transition-colors focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-offset-gray-800 focus:ring-blue-500\"\n            >\n              Verstanden!\n            </button>\n          </div>\n        )}\n\n        {/* Footer */}\n        <div className=\"bg-gray-900 p-3 border-t border-gray-800 flex justify-between items-center mt-auto\">\n          <button\n            onClick={() => setShowHelp(!showHelp)}\n            className=\"text-sm text-blue-400 hover:text-blue-300 flex items-center gap-1.5 transition-colors focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2 focus:ring-offset-gray-900 rounded px-2 py-1\"\n          >\n            <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-4 w-4\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n              <path fillRule=\"evenodd\" d=\"M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-8-3a1 1 0 00-.867.5 1 1 0 11-1.731-1A3 3 0 0113 8a3.001 3.001 0 01-2 2.83V11a1 1 0 11-2 0v-1a1 3 0 011.5-2.6 1 1 0 10-1-1.73z\" clipRule=\"evenodd\" />\n            </svg>\n            {showHelp ? 'Hilfe ausblenden' : 'Hilfe anzeigen'}\n          </button>\n          <div className=\"text-xs text-gray-500\">\n            {cardHistory.length} Karten • {usedDecks.toFixed(1)} Decks verwendet • {remainingDecks.toFixed(1)} Decks übrig\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default CardCounter;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}