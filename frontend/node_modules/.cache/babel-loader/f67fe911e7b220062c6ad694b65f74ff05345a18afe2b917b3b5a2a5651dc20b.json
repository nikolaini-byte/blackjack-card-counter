{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\silve\\\\Downloads\\\\blackjack-card-counter-main\\\\frontend\\\\src\\\\components\\\\CardCounter.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useCallback, useEffect, useMemo } from 'react';\nimport { COUNTING_SYSTEMS, calculateTrueCount, getBetRecommendation } from '../utils/countingSystems';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CardCounter = () => {\n  _s();\n  var _Object$entries$filte, _Object$entries$filte2;\n  // Card ranks constant\n  const cardRanks = ['2', '3', '4', '5', '6', '7', '8', '9', '10', 'J', 'Q', 'K', 'A'];\n\n  // Game state\n  const [decksRemaining, setDecksRemaining] = useState(3); // Default to 3 decks\n  const [inputMode, setInputMode] = useState('player'); // 'player' or 'dealer'\n  const [isCalculating, setIsCalculating] = useState(false); // For Monte Carlo simulation loading state\n  const [runningCount, setRunningCount] = useState(0);\n  const [showHelp, setShowHelp] = useState(false);\n  const [isLoading, setIsLoading] = useState(true);\n  const [selectedSystem, setSelectedSystem] = useState('HILO');\n  const [showSystemInfo, setShowSystemInfo] = useState(false);\n  const [error, setError] = useState('');\n\n  // Track hands\n  const [playerHands, setPlayerHands] = useState([[]]); // Array of hands for splits\n  const [dealerHand, setDealerHand] = useState([]);\n  const [currentHandIndex, setCurrentHandIndex] = useState(0);\n\n  // Current cards in play (for counting)\n  const [cards, setCards] = useState([]);\n\n  // Get current counting system\n  const currentSystem = useMemo(() => COUNTING_SYSTEMS[selectedSystem], [selectedSystem]);\n\n  // Calculate deck information\n  const totalCards = useMemo(() => Math.floor(decksRemaining * 52), [decksRemaining]);\n  const remainingCards = useMemo(() => Math.max(0, totalCards - cards.length), [totalCards, cards.length]);\n  const remainingDecks = useMemo(() => Math.max(0.1, Math.round(remainingCards / 52 * 100) / 100), [remainingCards]);\n  const usedDecks = useMemo(() => Math.max(0, Math.round((decksRemaining - remainingDecks) * 100) / 100), [decksRemaining, remainingDecks]);\n\n  // Alias remainingDecks as decksLeft for backward compatibility\n  const decksLeft = remainingDecks;\n\n  // State for card inputs and persistent history\n  const [playerCardsInput, setPlayerCardsInput] = useState('');\n  const [dealerCardsInput, setDealerCardsInput] = useState('');\n  // Persistent history of all cards ever played\n  const [cardHistory, setCardHistory] = useState([]);\n  // Track the last input that was processed to prevent duplicates\n  const [lastProcessedInputs, setLastProcessedInputs] = useState({\n    player: '',\n    dealer: ''\n  });\n\n  // Handle simulation button click\n  const handleSimulationClick = () => {\n    setIsCalculating(true);\n\n    // Simulate API call with timeout\n    setTimeout(() => {\n      // TODO: Replace with actual simulation logic\n      console.log('Running simulation with:', {\n        playerCards,\n        dealerCards,\n        runningCount,\n        trueCount: calculateTrueCount(runningCount, remainingDecks)\n      });\n\n      // Set a mock result for now\n      setSimulationResult({\n        recommendedAction: 'HIT',\n        // or 'STAND', 'DOUBLE', etc.\n        confidence: 0.75,\n        winProbability: 0.65\n      });\n      setIsCalculating(false);\n    }, 1000);\n  };\n\n  // Add a card to the history\n  const addCardToHistory = useCallback((rank, source = 'player') => {\n    if (!cardRanks.includes(rank)) {\n      setError(`Ungültige Karte: ${rank}`);\n      return;\n    }\n    const newCard = {\n      id: Date.now(),\n      rank,\n      source: inputMode,\n      // 'player' or 'dealer'\n      timestamp: new Date().toISOString()\n    };\n    setCardHistory(prev => [...prev, newCard]);\n    setError('');\n  }, [inputMode]);\n\n  // Validate if a card rank is valid\n  const isValidCard = card => {\n    if (!card || !card.trim()) return false;\n    const validRanks = ['2', '3', '4', '5', '6', '7', '8', '9', '10', 'J', 'Q', 'K', 'A'];\n    let rank = card.trim().toUpperCase().replace(/[^A-Z0-9]/g, '');\n    if (rank.startsWith('10')) {\n      rank = '10';\n    } else {\n      rank = rank.charAt(0);\n    }\n    return validRanks.includes(rank) ? rank : null;\n  };\n\n  // Parse card string into array of card objects, only using ranks\n  const parseCards = (input, source) => {\n    if (!input.trim()) return [];\n\n    // First, validate all cards in the input\n    const cards = input.split(/[,\\s]+/).filter(card => card.trim().length > 0);\n\n    // Check for any invalid cards\n    const invalidCards = cards.filter(card => !isValidCard(card));\n    if (invalidCards.length > 0) {\n      setError(`Ungültige Karte(n): ${invalidCards.join(', ')}. Gültige Karten: 2-10, J, Q, K, A`);\n      return [];\n    }\n\n    // If all cards are valid, process them\n    return cards.map(card => {\n      const rank = isValidCard(card); // We know this is valid now\n      return {\n        rank,\n        source,\n        timestamp: Date.now(),\n        id: `${source}-${rank}-${Date.now()}-${Math.random().toString(36).substr(2, 6)}`\n      };\n    });\n  };\n\n  // Process new cards from inputs and add them to history\n  const processNewCards = (input, source) => {\n    // Clear any previous errors\n    setError('');\n    const newCards = parseCards(input, source);\n\n    // Only update if we have valid cards\n    if (newCards.length > 0) {\n      setCardHistory(prevHistory => {\n        // Only add cards that aren't already in history (based on timestamp)\n        const newUniqueCards = newCards.filter(newCard => !prevHistory.some(card => card.rank === newCard.rank && card.source === newCard.source &&\n        // Only consider very recent duplicates (last 2 seconds)\n        Date.now() - card.timestamp < 2000));\n        if (newUniqueCards.length === 0) {\n          // No new cards to add\n          return prevHistory;\n        }\n        return [...prevHistory, ...newUniqueCards];\n      });\n    }\n  };\n\n  // Clear all cards from history\n  const clearAllCards = () => {\n    setCardHistory([]);\n    setPlayerCardsInput('');\n    setDealerCardsInput('');\n    setLastProcessedInputs({\n      player: '',\n      dealer: ''\n    });\n    setError('');\n  };\n\n  // Remove a single card from history by ID\n  const removeCardFromHistory = cardId => {\n    setCardHistory(prevHistory => prevHistory.filter(card => card.id !== cardId));\n  };\n\n  // Update card history when inputs change\n  useEffect(() => {\n    const newPlayerCards = parseCards(playerCardsInput, 'player');\n    const newDealerCards = parseCards(dealerCardsInput, 'dealer');\n\n    // Update card history with unique cards from both hands\n    setCardHistory(prevHistory => {\n      // Keep only cards that are still in either hand\n      const remainingCards = prevHistory.filter(card => newPlayerCards.some(c => c.id === card.id) || newDealerCards.some(c => c.id === card.id));\n\n      // Add any new cards that aren't in history yet\n      const allNewCards = [...newPlayerCards, ...newDealerCards];\n      const newCards = allNewCards.filter(newCard => !remainingCards.some(card => card.id === newCard.id));\n      return [...remainingCards, ...newCards];\n    });\n  }, [playerCardsInput, dealerCardsInput]);\n\n  // Get current player and dealer cards from history (most recent first)\n  const playerCards = useMemo(() => [...cardHistory].reverse().filter(card => card.source === 'player'), [cardHistory]);\n  const dealerCards = useMemo(() => [...cardHistory].reverse().filter(card => card.source === 'dealer'), [cardHistory]);\n\n  // Calculate card counts for each rank\n  const cardCounts = useMemo(() => {\n    const counts = {};\n    cardRanks.forEach(rank => {\n      counts[rank] = cardHistory.filter(card => card.rank === rank).length;\n    });\n    return counts;\n  }, [cardHistory]);\n\n  // Calculate hand value (only using ranks, ignoring suits)\n  const calculateHandValue = useCallback(hand => {\n    let value = 0;\n    let aces = 0;\n    hand.forEach(card => {\n      const rank = card.rank;\n      if (rank === 'A') {\n        aces += 1;\n        value += 11;\n      } else if (['K', 'Q', 'J', '10'].includes(rank)) {\n        value += 10;\n      } else if (rank && !isNaN(rank)) {\n        value += parseInt(rank, 10);\n      }\n    });\n\n    // Handle aces (A can be 11 or 1)\n    while (value > 21 && aces > 0) {\n      value -= 10;\n      aces -= 1;\n    }\n    return value;\n  }, []);\n\n  // Calculate hand values\n  const playerHandValue = useMemo(() => calculateHandValue(playerCards), [playerCards, calculateHandValue]);\n  const dealerHandValue = useMemo(() => calculateHandValue(dealerCards), [dealerCards, calculateHandValue]);\n\n  // Update running count when card history changes\n  useEffect(() => {\n    const newCount = cardHistory.reduce((count, card) => {\n      return count + (currentSystem.cardValues[card.rank] || 0);\n    }, 0);\n    setRunningCount(newCount);\n    setCards(cardHistory);\n  }, [cardHistory, currentSystem]);\n\n  // Calculate unique card counts for display\n  const uniqueCardCounts = useMemo(() => {\n    const counts = {};\n    cardHistory.forEach(card => {\n      counts[card.rank] = (counts[card.rank] || 0) + 1;\n    });\n    return counts;\n  }, [cardHistory]);\n\n  // Calculate true count based on remaining decks\n  const trueCount = useMemo(() => {\n    if (remainingDecks <= 0) return 0;\n    // For unbalanced systems, return running count directly\n    if (!COUNTING_SYSTEMS[selectedSystem].balanced) {\n      return runningCount;\n    }\n    // For balanced systems, calculate true count\n    const tc = runningCount / remainingDecks;\n    return Math.round(tc * 10) / 10; // Round to 1 decimal\n  }, [runningCount, remainingDecks, selectedSystem]);\n\n  // Get bet recommendation based on true count and system\n  const betRec = useMemo(() => getBetRecommendation(trueCount, selectedSystem), [trueCount, selectedSystem]);\n\n  // Simulate loading\n  useEffect(() => {\n    const timer = setTimeout(() => setIsLoading(false), 1500);\n    return () => clearTimeout(timer);\n  }, []);\n  const handleCardInput = card => {\n    const upperCard = card.toUpperCase().trim();\n\n    // Clear previous errors\n    setError('');\n\n    // Check if input is empty\n    if (!upperCard) {\n      setError('Please enter a card value');\n      return;\n    }\n\n    // Check if card is valid in current counting system\n    if (currentSystem.cardValues[upperCard] === undefined) {\n      setError(`Invalid card: ${upperCard}. Valid cards are: ${Object.keys(currentSystem.cardValues).join(', ')}`);\n      return;\n    }\n\n    // If we get here, the card is valid\n    const value = currentSystem.cardValues[upperCard];\n    setCards(prev => [...prev, {\n      card: upperCard,\n      value\n    }]);\n    setRunningCount(prev => prev + value);\n\n    // Clear any previous error\n    setError('');\n  };\n  const handleKeyDown = e => {\n    if (e.key === 'Enter' && e.target.value) {\n      handleCardInput(e.target.value);\n      e.target.value = '';\n    }\n  };\n  const resetCount = () => {\n    setCards([]);\n    setRunningCount(0);\n  };\n  const removeLastCard = () => {\n    if (cards.length > 0) {\n      const lastCard = cards[cards.length - 1];\n      setCards(prev => prev.slice(0, -1));\n      setRunningCount(prev => prev - lastCard.value);\n    }\n  };\n  const getCardColorClass = value => {\n    if (value > 0) return 'bg-green-900/50 text-green-300';\n    if (value < 0) return 'bg-red-900/50 text-red-300';\n    return 'bg-gray-700/50';\n  };\n\n  // usedDecks and decksLeft are already defined above with useMemo\n\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"min-h-screen flex items-center justify-center bg-gray-900\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"w-16 h-16 border-4 border-blue-500 border-t-transparent rounded-full animate-spin mx-auto mb-4\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 356,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"text-2xl font-bold text-white\",\n          children: \"Card Counter Pro\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 357,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-gray-400 mt-2\",\n          children: \"Loading trainer...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 358,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 355,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 354,\n      columnNumber: 7\n    }, this);\n  }\n\n  // Render a card with proper styling (only showing rank)\n  const renderCard = (card, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `inline-block w-8 h-12 md:w-10 md:h-14 mx-0.5 rounded-md flex items-center justify-center text-sm font-bold ${currentSystem.cardValues[card.rank] > 0 ? 'bg-green-900/50 text-green-300' : currentSystem.cardValues[card.rank] < 0 ? 'bg-red-900/50 text-red-300' : 'bg-white/10 text-white'}`,\n    title: `${card.rank} (${currentSystem.cardValues[card.rank] >= 0 ? '+' : ''}${currentSystem.cardValues[card.rank]})`,\n    children: card.rank\n  }, index, false, {\n    fileName: _jsxFileName,\n    lineNumber: 366,\n    columnNumber: 5\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen bg-gray-900 text-white p-4 md:p-6\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"max-w-2xl mx-auto bg-gray-800 rounded-xl shadow-2xl overflow-hidden\",\n      style: {\n        minHeight: '90vh',\n        display: 'flex',\n        flexDirection: 'column'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-gray-900 p-6 border-b border-gray-700\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"text-2xl font-bold text-center\",\n          children: \"Card Counter Trainer\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 384,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-center text-gray-400 text-sm mt-1\",\n          children: [currentSystem.name, \" System\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 385,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mt-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex items-center justify-center gap-2\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"counting-system\",\n              className: \"text-sm text-gray-300\",\n              children: \"Counting System:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 389,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"relative\",\n              children: [/*#__PURE__*/_jsxDEV(\"select\", {\n                id: \"counting-system\",\n                value: selectedSystem,\n                onChange: e => {\n                  setSelectedSystem(e.target.value);\n                  setCards([]);\n                  setRunningCount(0);\n                },\n                className: \"bg-gray-800 border border-gray-700 text-white text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 p-2 pr-8 appearance-none\",\n                children: Object.values(COUNTING_SYSTEMS).map(system => /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: system.id,\n                  children: system.name\n                }, system.id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 404,\n                  columnNumber: 21\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 393,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"pointer-events-none absolute inset-y-0 right-0 flex items-center px-2 text-gray-400\",\n                children: /*#__PURE__*/_jsxDEV(\"svg\", {\n                  className: \"fill-current h-4 w-4\",\n                  xmlns: \"http://www.w3.org/2000/svg\",\n                  viewBox: \"0 0 20 20\",\n                  children: /*#__PURE__*/_jsxDEV(\"path\", {\n                    d: \"M9.293 12.95l.707.707L15.657 8l-1.414-1.414L10 10.828 5.757 6.586 4.343 8z\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 411,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 410,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 409,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 392,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => setShowSystemInfo(!showSystemInfo),\n              className: \"text-blue-400 hover:text-blue-300 text-sm\",\n              \"aria-label\": \"System info\",\n              children: /*#__PURE__*/_jsxDEV(\"svg\", {\n                xmlns: \"http://www.w3.org/2000/svg\",\n                className: \"h-5 w-5\",\n                viewBox: \"0 0 20 20\",\n                fill: \"currentColor\",\n                children: /*#__PURE__*/_jsxDEV(\"path\", {\n                  fillRule: \"evenodd\",\n                  d: \"M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-7-4a1 1 0 11-2 0 1 1 0 012 0zM9 9a1 1 0 000 2v3a1 1 0 001 1h.01a1 1 0 100-2H10V9z\",\n                  clipRule: \"evenodd\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 421,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 420,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 415,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 388,\n            columnNumber: 13\n          }, this), showSystemInfo && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mt-3 p-3 bg-gray-800 rounded-lg text-sm\",\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              className: \"font-semibold text-white mb-1\",\n              children: [currentSystem.name, \" System\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 428,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-gray-300 mb-2\",\n              children: currentSystem.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 429,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"grid grid-cols-3 gap-2 text-xs\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"p-2 bg-green-900/30 rounded\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"font-bold\",\n                  children: [\"+\", ((_Object$entries$filte = Object.entries(currentSystem.cardValues).filter(([_, v]) => v > 0)[0]) === null || _Object$entries$filte === void 0 ? void 0 : _Object$entries$filte[1]) || 0]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 432,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: Object.entries(currentSystem.cardValues).filter(([_, v]) => v > 0).map(([k]) => k).join(', ')\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 433,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 431,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"p-2 bg-gray-700/30 rounded\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"font-bold\",\n                  children: \"0\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 440,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: Object.entries(currentSystem.cardValues).filter(([_, v]) => v === 0).map(([k]) => k).join(', ')\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 441,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 439,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"p-2 bg-red-900/30 rounded\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"font-bold\",\n                  children: ((_Object$entries$filte2 = Object.entries(currentSystem.cardValues).filter(([_, v]) => v < 0)[0]) === null || _Object$entries$filte2 === void 0 ? void 0 : _Object$entries$filte2[1]) || 0\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 448,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: Object.entries(currentSystem.cardValues).filter(([_, v]) => v < 0).map(([k]) => k).join(', ')\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 449,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 447,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 430,\n              columnNumber: 17\n            }, this), !currentSystem.balanced && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mt-2 text-xs text-yellow-300\",\n              children: \"Note: This is an unbalanced system. The running count is used directly for betting.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 457,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 427,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 387,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 383,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"p-6 flex-grow\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-6 bg-gray-900/20 p-4 rounded-lg\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex justify-between items-center mb-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              className: \"text-sm font-medium text-gray-300\",\n              children: \"Karten eingeben\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 471,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex items-center space-x-2\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"text-xs text-gray-400\",\n                children: \"Modus:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 473,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"inline-flex rounded-md shadow-sm\",\n                role: \"group\",\n                children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                  type: \"button\",\n                  onClick: () => setInputMode('player'),\n                  className: `px-3 py-1 text-sm font-medium rounded-l-md ${inputMode === 'player' ? 'bg-purple-700 text-white' : 'bg-gray-700 text-gray-300 hover:bg-gray-600'}`,\n                  children: \"Spieler\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 475,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  type: \"button\",\n                  onClick: () => setInputMode('dealer'),\n                  className: `px-3 py-1 text-sm font-medium rounded-r-md ${inputMode === 'dealer' ? 'bg-blue-700 text-white' : 'bg-gray-700 text-gray-300 hover:bg-gray-600'}`,\n                  children: \"Dealer\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 486,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 474,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 472,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 470,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"grid grid-cols-5 gap-2 mb-4\",\n            children: cardRanks.map(rank => /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => addCardToHistory(rank),\n              className: `h-12 flex items-center justify-center rounded-md font-medium text-white transition-all\n                    ${inputMode === 'player' ? 'bg-purple-900/70 hover:bg-purple-800/90' : 'bg-blue-900/70 hover:bg-blue-800/90'}\n                    hover:scale-105 active:scale-95`,\n              children: rank\n            }, rank, false, {\n              fileName: _jsxFileName,\n              lineNumber: 504,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 502,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"grid grid-cols-1 md:grid-cols-2 gap-4 mb-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"bg-gray-900/30 p-3 rounded-lg\",\n              children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                className: \"text-xs font-medium text-gray-400 mb-2\",\n                children: \"Deine Hand\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 519,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"flex flex-wrap gap-1 min-h-10\",\n                children: playerCards.length > 0 ? playerCards.map((card, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"w-8 h-10 flex items-center justify-center rounded-md bg-purple-900/70 text-white text-sm font-medium\",\n                  onClick: () => removeCardFromHistory(card.id),\n                  children: card.rank\n                }, card.id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 523,\n                  columnNumber: 23\n                }, this)) : /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"text-gray-500 text-sm\",\n                  children: \"Keine Karten\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 532,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 520,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"mt-1 text-xs text-gray-400\",\n                children: [\"Wert: \", playerHandValue > 0 ? playerHandValue : '-']\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 535,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 518,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"bg-gray-900/30 p-3 rounded-lg\",\n              children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                className: \"text-xs font-medium text-gray-400 mb-2\",\n                children: \"Dealer Hand\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 541,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"flex flex-wrap gap-1 min-h-10\",\n                children: dealerCards.length > 0 ? dealerCards.map((card, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"w-8 h-10 flex items-center justify-center rounded-md bg-blue-900/70 text-white text-sm font-medium\",\n                  onClick: () => removeCardFromHistory(card.id),\n                  children: card.rank\n                }, card.id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 545,\n                  columnNumber: 23\n                }, this)) : /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"text-gray-500 text-sm\",\n                  children: \"Keine Karten\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 554,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 542,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"mt-1 text-xs text-gray-400\",\n                children: [\"Wert: \", dealerHandValue > 0 ? dealerHandValue : '-']\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 557,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 540,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 517,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex justify-between items-center\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: clearAllCards,\n              className: \"px-3 py-1 text-xs bg-red-900/50 hover:bg-red-800/70 text-red-200 rounded transition-colors\",\n              children: \"Alle Karten zur\\xFCcksetzen\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 564,\n              columnNumber: 15\n            }, this), isCalculating ? /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"px-4 py-2 bg-green-800/50 text-white text-sm font-medium rounded flex items-center\",\n              children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n                className: \"animate-spin -ml-1 mr-2 h-4 w-4 text-white\",\n                xmlns: \"http://www.w3.org/2000/svg\",\n                fill: \"none\",\n                viewBox: \"0 0 24 24\",\n                children: [/*#__PURE__*/_jsxDEV(\"circle\", {\n                  className: \"opacity-25\",\n                  cx: \"12\",\n                  cy: \"12\",\n                  r: \"10\",\n                  stroke: \"currentColor\",\n                  strokeWidth: \"4\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 573,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"path\", {\n                  className: \"opacity-75\",\n                  fill: \"currentColor\",\n                  d: \"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 574,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 572,\n                columnNumber: 19\n              }, this), \"Berechne...\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 571,\n              columnNumber: 17\n            }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: handleSimulationClick,\n              disabled: playerCards.length === 0 || dealerCards.length === 0,\n              className: `px-4 py-2 text-white text-sm font-medium rounded transition-colors ${playerCards.length > 0 && dealerCards.length > 0 ? 'bg-green-700 hover:bg-green-800' : 'bg-gray-600 cursor-not-allowed'}`,\n              children: \"Empfohlene Aktion berechnen\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 579,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 563,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 469,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-gray-900/50 p-4 rounded-lg\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex items-center justify-between mb-2\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              className: \"text-sm font-medium text-gray-300\",\n              children: \"Bet\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 597,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"text-xs text-gray-400\",\n              children: \"Recommendation\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 598,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 596,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-3xl font-bold\",\n            children: betRec.unit\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 600,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-xs text-gray-400 mt-1\",\n            children: betRec.text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 601,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 595,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-6 bg-gray-900/20 p-4 rounded-lg relative group\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"absolute top-2 right-2\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"relative group\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"text-gray-400 hover:text-white text-sm w-5 h-5 flex items-center justify-center rounded-full bg-gray-800/50\",\n                title: \"Hilfe anzeigen\",\n                onClick: () => document.getElementById('cardHistoryHelp').classList.toggle('hidden'),\n                children: \"?\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 608,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                id: \"cardHistoryHelp\",\n                className: \"hidden absolute right-0 top-full mt-1 w-64 p-3 bg-gray-800 text-xs text-gray-300 rounded shadow-lg z-50\",\n                children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                  className: \"font-bold mb-2\",\n                  children: \"Kartenverlauf - Hilfe\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 616,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n                  className: \"space-y-1\",\n                  children: [/*#__PURE__*/_jsxDEV(\"li\", {\n                    children: \"\\u2022 Karten durch Leerzeichen oder Kommas eingeben (z.B. \\\"A K 10\\\" oder \\\"A,K,10\\\")\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 618,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                    children: \"\\u2022 Klicken Sie auf eine Karte im Verlauf, um sie zu entfernen\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 619,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                    children: \"\\u2022 Der Z\\xE4hler aktualisiert sich automatisch\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 620,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                    children: \"\\u2022 Farben werden ignoriert, nur die Werte z\\xE4hlen\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 621,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 617,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => document.getElementById('cardHistoryHelp').classList.add('hidden'),\n                  className: \"mt-2 text-blue-400 hover:text-blue-300 text-xs\",\n                  children: \"Schlie\\xDFen\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 623,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 615,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 607,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 606,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex justify-between items-center mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              className: \"text-sm font-medium text-gray-300\",\n              children: \"Kartenverlauf\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 634,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: clearAllCards,\n              className: \"text-xs bg-red-900/50 hover:bg-red-800/70 px-2 py-1 rounded transition-colors disabled:opacity-50 disabled:cursor-not-allowed\",\n              disabled: cardHistory.length === 0,\n              title: \"Entfernt alle Karten aus dem Verlauf\",\n              children: \"Alles zur\\xFCcksetzen\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 635,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 633,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-4 p-3 bg-gray-800/30 rounded\",\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              className: \"text-xs text-gray-400 mb-2\",\n              children: \"Aktive Karten\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 646,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex flex-wrap gap-1 min-h-8\",\n              children: Object.entries(uniqueCardCounts).length > 0 ? Object.entries(uniqueCardCounts).map(([rank, count]) => /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"relative group\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: `inline-flex items-center justify-center w-8 h-8 rounded ${currentSystem.cardValues[rank] > 0 ? 'bg-green-900/50' : currentSystem.cardValues[rank] < 0 ? 'bg-red-900/50' : 'bg-gray-700/50'}`,\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"text-sm\",\n                    children: rank\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 655,\n                    columnNumber: 25\n                  }, this), count > 1 && /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"absolute -top-1 -right-1 bg-blue-600 text-white text-xs rounded-full w-4 h-4 flex items-center justify-center\",\n                    children: count\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 657,\n                    columnNumber: 27\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 651,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"absolute bottom-full left-1/2 transform -translate-x-1/2 mb-1 px-2 py-1 text-xs text-white bg-gray-800 rounded opacity-0 group-hover:opacity-100 transition-opacity whitespace-nowrap\",\n                  children: [rank, \" (\", currentSystem.cardValues[rank] >= 0 ? '+' : '', currentSystem.cardValues[rank], \") \\xD7 \", count]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 662,\n                  columnNumber: 23\n                }, this)]\n              }, rank, true, {\n                fileName: _jsxFileName,\n                lineNumber: 650,\n                columnNumber: 21\n              }, this)) : /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"text-gray-500 text-sm\",\n                children: \"Keine Karten gespielt\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 668,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 647,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 645,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"p-2 bg-gray-800/50 rounded\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex items-center justify-between mb-2\",\n              children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                className: \"text-xs text-gray-400\",\n                children: [\"Vollst\\xE4ndiger Verlauf (\", cardHistory.length, \")\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 675,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"text-xs text-gray-500\",\n                children: \"Klicken zum Entfernen\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 676,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 674,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex flex-wrap gap-1 min-h-8 max-h-24 overflow-y-auto p-1\",\n              children: cardHistory.length > 0 ? [...cardHistory].reverse().map(card => /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => removeCardFromHistory(card.id),\n                className: \"relative group transition-transform hover:scale-110 active:scale-95\",\n                title: `${card.source === 'dealer' ? 'Dealer' : 'Spieler'}: ${card.rank} • ${new Date(card.timestamp).toLocaleTimeString()} (zum Entfernen klicken)`,\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: `inline-block w-6 h-6 text-xs flex items-center justify-center rounded text-xs ${card.source === 'dealer' ? 'bg-blue-900/60 hover:bg-red-900/70' : 'bg-purple-900/60 hover:bg-red-900/70'} transition-colors`,\n                  children: card.rank\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 687,\n                  columnNumber: 23\n                }, this)\n              }, card.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 681,\n                columnNumber: 21\n              }, this)) : /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"text-gray-500 text-sm\",\n                children: \"Keine Karten im Verlauf\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 697,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 678,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 673,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"text-sm font-medium text-gray-300 mb-3\",\n            children: \"Deck Information\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 702,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"grid grid-cols-1 md:grid-cols-2 gap-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"block text-xs text-gray-400 mb-1\",\n                children: \"Number of Decks\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 705,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"flex items-center\",\n                children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => setDecksRemaining(prev => Math.max(1, Math.floor(prev) - 1)),\n                  className: \"px-3 py-1 bg-gray-700 hover:bg-gray-600 rounded-l-md transition-colors\",\n                  children: \"-\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 707,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"number\",\n                  min: \"1\",\n                  max: \"10\",\n                  value: decksRemaining,\n                  onChange: e => setDecksRemaining(Math.max(1, Math.min(10, Number(e.target.value) || 1))),\n                  className: \"w-16 text-center bg-gray-800 border-t border-b border-gray-700 py-1 text-white\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 713,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => setDecksRemaining(prev => Math.min(10, Math.ceil(prev) + 1)),\n                  className: \"px-3 py-1 bg-gray-700 hover:bg-gray-600 rounded-r-md transition-colors\",\n                  children: \"+\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 721,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 706,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 704,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"text-xs text-gray-400 mb-1\",\n                children: \"Cards in Play\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 731,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"text-sm\",\n                children: [cards.length, \" / \", totalCards, \" cards (\", usedDecks.toFixed(1), \" decks used, \", remainingDecks.toFixed(1), \" decks left)\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 732,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 730,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 703,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 605,\n          columnNumber: 11\n        }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n          id: \"card-error\",\n          className: \"mt-2 text-sm text-red-400\",\n          children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n            className: \"w-4 h-4 inline mr-1\",\n            fill: \"none\",\n            stroke: \"currentColor\",\n            viewBox: \"0 0 24 24\",\n            xmlns: \"http://www.w3.org/2000/svg\",\n            children: /*#__PURE__*/_jsxDEV(\"path\", {\n              strokeLinecap: \"round\",\n              strokeLinejoin: \"round\",\n              strokeWidth: 2,\n              d: \"M12 8v4m0 4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 743,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 742,\n            columnNumber: 15\n          }, this), error]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 741,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"grid grid-cols-5 gap-2 mt-3\",\n          children: Object.entries(currentSystem.cardValues).map(([card]) => /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleCardInput(card),\n            className: `px-2 py-2 text-sm font-medium rounded-md transition-colors focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-offset-gray-900 ${getCardColorClass(currentSystem.cardValues[card])}`,\n            children: card\n          }, card, false, {\n            fileName: _jsxFileName,\n            lineNumber: 752,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 750,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 467,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-6\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex justify-between items-center mb-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"text-sm font-medium text-gray-300\",\n            children: \"Kartenverlauf\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 768,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex gap-2\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => {\n                const lastCard = [...cardHistory].pop();\n                if (lastCard) {\n                  removeCardFromHistory(lastCard.id);\n                }\n              },\n              disabled: cardHistory.length === 0,\n              className: \"text-xs px-3 py-1.5 bg-gray-700 hover:bg-gray-600 rounded-md transition-colors disabled:opacity-50 disabled:cursor-not-allowed focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-offset-gray-900 focus:ring-blue-500\",\n              children: \"Letzte Karte entfernen\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 770,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: clearAllCards,\n              className: \"text-xs px-3 py-1.5 bg-red-900/50 hover:bg-red-800/50 rounded-md transition-colors focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-offset-gray-900 focus:ring-red-500\",\n              children: \"Alle zur\\xFCcksetzen\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 782,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 769,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 767,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-gray-800/50 rounded-lg p-3 min-h-20 max-h-48 overflow-y-auto\",\n          children: cardHistory.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex flex-wrap gap-2\",\n            children: cardHistory.map((card, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `px-2.5 py-1 rounded-md text-sm font-mono ${card.source === 'player' ? 'bg-purple-900/50' : 'bg-blue-900/50'} text-white`,\n              onClick: () => removeCardFromHistory(card.id),\n              children: [card.rank, \" (\", card.source, \")\"]\n            }, card.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 794,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 792,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-gray-500 text-sm text-center py-4\",\n            children: \"Noch keine Karten hinzugef\\xFCgt. F\\xFCge Karten \\xFCber die Tasten oben hinzu.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 804,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 790,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 766,\n        columnNumber: 9\n      }, this), showHelp && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-gray-800 p-6 border-t border-gray-700\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"text-lg font-bold mb-3\",\n          children: \"Anleitung\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 814,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"space-y-2 text-sm text-gray-300\",\n          children: [/*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"\\u2022 W\\xE4hle ein Kartenz\\xE4hlsystem aus dem Dropdown-Men\\xFC\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 816,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"\\u2022 Klicke auf die Karten, um sie zur aktuellen Hand hinzuzuf\\xFCgen (Spieler oder Dealer)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 817,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"\\u2022 Nutze den Modus-Umschalter, um zwischen Spieler- und Dealer-Hand zu wechseln\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 818,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"\\u2022 Der laufende Z\\xE4hler aktualisiert sich automatisch mit jeder Karte\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 819,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"\\u2022 Der True Count wird basierend auf dem ausgew\\xE4hlten System und den verbleibenden Decks berechnet\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 820,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"\\u2022 Klicke auf eine Karte, um sie zu entfernen\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 821,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"\\u2022 Nutze \\\"Alle zur\\xFCcksetzen\\\", um alle Karten zu l\\xF6schen\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 822,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 815,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mt-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            className: \"font-semibold text-white mb-2\",\n            children: \"Zum Z\\xE4hlsystem:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 825,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            className: \"space-y-2 text-sm\",\n            children: [/*#__PURE__*/_jsxDEV(\"li\", {\n              children: [\"\\u2022 \", /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"font-medium\",\n                children: \"Hi-Lo:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 827,\n                columnNumber: 23\n              }, this), \" Ausgeglichenes System mit True Count Umrechnung\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 827,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: [\"\\u2022 \", /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"font-medium\",\n                children: \"KO:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 828,\n                columnNumber: 23\n              }, this), \" Unausgeglichenes System, verwendet direkt den laufenden Z\\xE4hler\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 828,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: [\"\\u2022 \", /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"font-medium\",\n                children: \"Omega II:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 829,\n                columnNumber: 23\n              }, this), \" Fortgeschrittenes System mit h\\xF6herer Spielgenauigkeit\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 829,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 826,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 824,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setShowHelp(false),\n          className: \"mt-6 w-full bg-blue-600 hover:bg-blue-700 text-white py-2 px-4 rounded transition-colors focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-offset-gray-800 focus:ring-blue-500\",\n          children: \"Verstanden!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 832,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 813,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-gray-900 p-3 border-t border-gray-800 flex justify-between items-center mt-auto\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setShowHelp(!showHelp),\n          className: \"text-sm text-blue-400 hover:text-blue-300 flex items-center gap-1.5 transition-colors focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2 focus:ring-offset-gray-900 rounded px-2 py-1\",\n          children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n            xmlns: \"http://www.w3.org/2000/svg\",\n            className: \"h-4 w-4\",\n            viewBox: \"0 0 20 20\",\n            fill: \"currentColor\",\n            children: /*#__PURE__*/_jsxDEV(\"path\", {\n              fillRule: \"evenodd\",\n              d: \"M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-8-3a1 1 0 00-.867.5 1 1 0 11-1.731-1A3 3 0 0113 8a3.001 3.001 0 01-2 2.83V11a1 1 0 11-2 0v-1a1 3 0 011.5-2.6 1 1 0 10-1-1.73z\",\n              clipRule: \"evenodd\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 848,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 847,\n            columnNumber: 13\n          }, this), showHelp ? 'Hilfe ausblenden' : 'Hilfe anzeigen']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 843,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-xs text-gray-500\",\n          children: [cardHistory.length, \" Karten \\u2022 \", usedDecks.toFixed(1), \" Decks verwendet \\u2022 \", remainingDecks.toFixed(1), \" Decks \\xFCbrig\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 852,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 842,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 381,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 380,\n    columnNumber: 5\n  }, this);\n};\n_s(CardCounter, \"S5YOuhfTl9P2T+8CSG+T+QQn8Qs=\");\n_c = CardCounter;\nexport default CardCounter;\nvar _c;\n$RefreshReg$(_c, \"CardCounter\");","map":{"version":3,"names":["React","useState","useCallback","useEffect","useMemo","COUNTING_SYSTEMS","calculateTrueCount","getBetRecommendation","jsxDEV","_jsxDEV","CardCounter","_s","_Object$entries$filte","_Object$entries$filte2","cardRanks","decksRemaining","setDecksRemaining","inputMode","setInputMode","isCalculating","setIsCalculating","runningCount","setRunningCount","showHelp","setShowHelp","isLoading","setIsLoading","selectedSystem","setSelectedSystem","showSystemInfo","setShowSystemInfo","error","setError","playerHands","setPlayerHands","dealerHand","setDealerHand","currentHandIndex","setCurrentHandIndex","cards","setCards","currentSystem","totalCards","Math","floor","remainingCards","max","length","remainingDecks","round","usedDecks","decksLeft","playerCardsInput","setPlayerCardsInput","dealerCardsInput","setDealerCardsInput","cardHistory","setCardHistory","lastProcessedInputs","setLastProcessedInputs","player","dealer","handleSimulationClick","setTimeout","console","log","playerCards","dealerCards","trueCount","setSimulationResult","recommendedAction","confidence","winProbability","addCardToHistory","rank","source","includes","newCard","id","Date","now","timestamp","toISOString","prev","isValidCard","card","trim","validRanks","toUpperCase","replace","startsWith","charAt","parseCards","input","split","filter","invalidCards","join","map","random","toString","substr","processNewCards","newCards","prevHistory","newUniqueCards","some","clearAllCards","removeCardFromHistory","cardId","newPlayerCards","newDealerCards","c","allNewCards","reverse","cardCounts","counts","forEach","calculateHandValue","hand","value","aces","isNaN","parseInt","playerHandValue","dealerHandValue","newCount","reduce","count","cardValues","uniqueCardCounts","balanced","tc","betRec","timer","clearTimeout","handleCardInput","upperCard","undefined","Object","keys","handleKeyDown","e","key","target","resetCount","removeLastCard","lastCard","slice","getCardColorClass","className","children","fileName","_jsxFileName","lineNumber","columnNumber","renderCard","index","title","style","minHeight","display","flexDirection","name","htmlFor","onChange","values","system","xmlns","viewBox","d","onClick","fill","fillRule","clipRule","description","entries","_","v","k","role","type","cx","cy","r","stroke","strokeWidth","disabled","unit","text","document","getElementById","classList","toggle","add","toLocaleTimeString","min","Number","ceil","toFixed","strokeLinecap","strokeLinejoin","pop","_c","$RefreshReg$"],"sources":["C:/Users/silve/Downloads/blackjack-card-counter-main/frontend/src/components/CardCounter.jsx"],"sourcesContent":["import React, { useState, useCallback, useEffect, useMemo } from 'react';\nimport { COUNTING_SYSTEMS, calculateTrueCount, getBetRecommendation } from '../utils/countingSystems';\n\nconst CardCounter = () => {\n  // Card ranks constant\n  const cardRanks = ['2', '3', '4', '5', '6', '7', '8', '9', '10', 'J', 'Q', 'K', 'A'];\n  \n  // Game state\n  const [decksRemaining, setDecksRemaining] = useState(3); // Default to 3 decks\n  const [inputMode, setInputMode] = useState('player'); // 'player' or 'dealer'\n  const [isCalculating, setIsCalculating] = useState(false); // For Monte Carlo simulation loading state\n  const [runningCount, setRunningCount] = useState(0);\n  const [showHelp, setShowHelp] = useState(false);\n  const [isLoading, setIsLoading] = useState(true);\n  const [selectedSystem, setSelectedSystem] = useState('HILO');\n  const [showSystemInfo, setShowSystemInfo] = useState(false);\n  const [error, setError] = useState('');\n  \n  // Track hands\n  const [playerHands, setPlayerHands] = useState([[]]); // Array of hands for splits\n  const [dealerHand, setDealerHand] = useState([]);\n  const [currentHandIndex, setCurrentHandIndex] = useState(0);\n  \n  // Current cards in play (for counting)\n  const [cards, setCards] = useState([]);\n\n  // Get current counting system\n  const currentSystem = useMemo(() => COUNTING_SYSTEMS[selectedSystem], [selectedSystem]);\n\n  // Calculate deck information\n  const totalCards = useMemo(() => Math.floor(decksRemaining * 52), [decksRemaining]);\n  const remainingCards = useMemo(() => Math.max(0, totalCards - cards.length), [totalCards, cards.length]);\n  const remainingDecks = useMemo(() => Math.max(0.1, Math.round((remainingCards / 52) * 100) / 100), [remainingCards]);\n  const usedDecks = useMemo(() => Math.max(0, Math.round((decksRemaining - remainingDecks) * 100) / 100), [decksRemaining, remainingDecks]);\n  \n  // Alias remainingDecks as decksLeft for backward compatibility\n  const decksLeft = remainingDecks;\n  \n  // State for card inputs and persistent history\n  const [playerCardsInput, setPlayerCardsInput] = useState('');\n  const [dealerCardsInput, setDealerCardsInput] = useState('');\n  // Persistent history of all cards ever played\n  const [cardHistory, setCardHistory] = useState([]);\n  // Track the last input that was processed to prevent duplicates\n  const [lastProcessedInputs, setLastProcessedInputs] = useState({\n    player: '',\n    dealer: ''\n  });\n  \n  // Handle simulation button click\n  const handleSimulationClick = () => {\n    setIsCalculating(true);\n    \n    // Simulate API call with timeout\n    setTimeout(() => {\n      // TODO: Replace with actual simulation logic\n      console.log('Running simulation with:', {\n        playerCards,\n        dealerCards,\n        runningCount,\n        trueCount: calculateTrueCount(runningCount, remainingDecks)\n      });\n      \n      // Set a mock result for now\n      setSimulationResult({\n        recommendedAction: 'HIT', // or 'STAND', 'DOUBLE', etc.\n        confidence: 0.75,\n        winProbability: 0.65\n      });\n      \n      setIsCalculating(false);\n    }, 1000);\n  };\n\n  // Add a card to the history\n  const addCardToHistory = useCallback((rank, source = 'player') => {\n    if (!cardRanks.includes(rank)) {\n      setError(`Ungültige Karte: ${rank}`);\n      return;\n    }\n    \n    const newCard = {\n      id: Date.now(),\n      rank,\n      source: inputMode, // 'player' or 'dealer'\n      timestamp: new Date().toISOString()\n    };\n    \n    setCardHistory(prev => [...prev, newCard]);\n    setError('');\n  }, [inputMode]);\n\n  // Validate if a card rank is valid\n  const isValidCard = (card) => {\n    if (!card || !card.trim()) return false;\n    \n    const validRanks = ['2', '3', '4', '5', '6', '7', '8', '9', '10', 'J', 'Q', 'K', 'A'];\n    let rank = card.trim().toUpperCase().replace(/[^A-Z0-9]/g, '');\n    \n    if (rank.startsWith('10')) {\n      rank = '10';\n    } else {\n      rank = rank.charAt(0);\n    }\n    \n    return validRanks.includes(rank) ? rank : null;\n  };\n\n  // Parse card string into array of card objects, only using ranks\n  const parseCards = (input, source) => {\n    if (!input.trim()) return [];\n    \n    // First, validate all cards in the input\n    const cards = input.split(/[,\\s]+/)\n      .filter(card => card.trim().length > 0);\n    \n    // Check for any invalid cards\n    const invalidCards = cards.filter(card => !isValidCard(card));\n    if (invalidCards.length > 0) {\n      setError(`Ungültige Karte(n): ${invalidCards.join(', ')}. Gültige Karten: 2-10, J, Q, K, A`);\n      return [];\n    }\n    \n    // If all cards are valid, process them\n    return cards.map(card => {\n      const rank = isValidCard(card); // We know this is valid now\n      return { \n        rank,\n        source,\n        timestamp: Date.now(),\n        id: `${source}-${rank}-${Date.now()}-${Math.random().toString(36).substr(2, 6)}`\n      };\n    });\n  };\n  \n  // Process new cards from inputs and add them to history\n  const processNewCards = (input, source) => {\n    // Clear any previous errors\n    setError('');\n    \n    const newCards = parseCards(input, source);\n    \n    // Only update if we have valid cards\n    if (newCards.length > 0) {\n      setCardHistory(prevHistory => {\n        // Only add cards that aren't already in history (based on timestamp)\n        const newUniqueCards = newCards.filter(newCard => \n          !prevHistory.some(card => \n            card.rank === newCard.rank && \n            card.source === newCard.source &&\n            // Only consider very recent duplicates (last 2 seconds)\n            Date.now() - card.timestamp < 2000\n          )\n        );\n        \n        if (newUniqueCards.length === 0) {\n          // No new cards to add\n          return prevHistory;\n        }\n        \n        return [...prevHistory, ...newUniqueCards];\n      });\n    }\n  };\n  \n  // Clear all cards from history\n  const clearAllCards = () => {\n    setCardHistory([]);\n    setPlayerCardsInput('');\n    setDealerCardsInput('');\n    setLastProcessedInputs({ player: '', dealer: '' });\n    setError('');\n  };\n  \n  // Remove a single card from history by ID\n  const removeCardFromHistory = (cardId) => {\n    setCardHistory(prevHistory => \n      prevHistory.filter(card => card.id !== cardId)\n    );\n  };\n\n  // Update card history when inputs change\n  useEffect(() => {\n    const newPlayerCards = parseCards(playerCardsInput, 'player');\n    const newDealerCards = parseCards(dealerCardsInput, 'dealer');\n    \n    // Update card history with unique cards from both hands\n    setCardHistory(prevHistory => {\n      // Keep only cards that are still in either hand\n      const remainingCards = prevHistory.filter(card => \n        newPlayerCards.some(c => c.id === card.id) || \n        newDealerCards.some(c => c.id === card.id)\n      );\n      \n      // Add any new cards that aren't in history yet\n      const allNewCards = [...newPlayerCards, ...newDealerCards];\n      const newCards = allNewCards.filter(\n        newCard => !remainingCards.some(card => card.id === newCard.id)\n      );\n      \n      return [...remainingCards, ...newCards];\n    });\n  }, [playerCardsInput, dealerCardsInput]);\n  \n  // Get current player and dealer cards from history (most recent first)\n  const playerCards = useMemo(() => \n    [...cardHistory].reverse().filter(card => card.source === 'player'), \n    [cardHistory]\n  );\n  \n  const dealerCards = useMemo(() => \n    [...cardHistory].reverse().filter(card => card.source === 'dealer'), \n    [cardHistory]\n  );\n  \n  // Calculate card counts for each rank\n  const cardCounts = useMemo(() => {\n    const counts = {};\n    cardRanks.forEach(rank => {\n      counts[rank] = cardHistory.filter(card => card.rank === rank).length;\n    });\n    return counts;\n  }, [cardHistory]);\n  \n  // Calculate hand value (only using ranks, ignoring suits)\n  const calculateHandValue = useCallback((hand) => {\n    let value = 0;\n    let aces = 0;\n    \n    hand.forEach(card => {\n      const rank = card.rank;\n      if (rank === 'A') {\n        aces += 1;\n        value += 11;\n      } else if (['K', 'Q', 'J', '10'].includes(rank)) {\n        value += 10;\n      } else if (rank && !isNaN(rank)) {\n        value += parseInt(rank, 10);\n      }\n    });\n    \n    // Handle aces (A can be 11 or 1)\n    while (value > 21 && aces > 0) {\n      value -= 10;\n      aces -= 1;\n    }\n    \n    return value;\n  }, []);\n  \n  // Calculate hand values\n  const playerHandValue = useMemo(() => calculateHandValue(playerCards), [playerCards, calculateHandValue]);\n  const dealerHandValue = useMemo(() => calculateHandValue(dealerCards), [dealerCards, calculateHandValue]);\n  \n  // Update running count when card history changes\n  useEffect(() => {\n    const newCount = cardHistory.reduce((count, card) => {\n      return count + (currentSystem.cardValues[card.rank] || 0);\n    }, 0);\n    \n    setRunningCount(newCount);\n    setCards(cardHistory);\n  }, [cardHistory, currentSystem]);\n  \n  // Calculate unique card counts for display\n  const uniqueCardCounts = useMemo(() => {\n    const counts = {};\n    cardHistory.forEach(card => {\n      counts[card.rank] = (counts[card.rank] || 0) + 1;\n    });\n    return counts;\n  }, [cardHistory]);\n  \n  // Calculate true count based on remaining decks\n  const trueCount = useMemo(() => {\n    if (remainingDecks <= 0) return 0;\n    // For unbalanced systems, return running count directly\n    if (!COUNTING_SYSTEMS[selectedSystem].balanced) {\n      return runningCount;\n    }\n    // For balanced systems, calculate true count\n    const tc = runningCount / remainingDecks;\n    return Math.round(tc * 10) / 10; // Round to 1 decimal\n  }, [runningCount, remainingDecks, selectedSystem]);\n\n  // Get bet recommendation based on true count and system\n  const betRec = useMemo(() => \n    getBetRecommendation(trueCount, selectedSystem)\n  , [trueCount, selectedSystem]);\n\n  // Simulate loading\n  useEffect(() => {\n    const timer = setTimeout(() => setIsLoading(false), 1500);\n    return () => clearTimeout(timer);\n  }, []);\n\n  const handleCardInput = (card) => {\n    const upperCard = card.toUpperCase().trim();\n    \n    // Clear previous errors\n    setError('');\n    \n    // Check if input is empty\n    if (!upperCard) {\n      setError('Please enter a card value');\n      return;\n    }\n    \n    // Check if card is valid in current counting system\n    if (currentSystem.cardValues[upperCard] === undefined) {\n      setError(`Invalid card: ${upperCard}. Valid cards are: ${Object.keys(currentSystem.cardValues).join(', ')}`);\n      return;\n    }\n    \n    // If we get here, the card is valid\n    const value = currentSystem.cardValues[upperCard];\n    setCards(prev => [...prev, { card: upperCard, value }]);\n    setRunningCount(prev => prev + value);\n    \n    // Clear any previous error\n    setError('');\n  };\n\n  const handleKeyDown = (e) => {\n    if (e.key === 'Enter' && e.target.value) {\n      handleCardInput(e.target.value);\n      e.target.value = '';\n    }\n  };\n\n  const resetCount = () => {\n    setCards([]);\n    setRunningCount(0);\n  };\n\n  const removeLastCard = () => {\n    if (cards.length > 0) {\n      const lastCard = cards[cards.length - 1];\n      setCards(prev => prev.slice(0, -1));\n      setRunningCount(prev => prev - lastCard.value);\n    }\n  };\n\n  const getCardColorClass = (value) => {\n    if (value > 0) return 'bg-green-900/50 text-green-300';\n    if (value < 0) return 'bg-red-900/50 text-red-300';\n    return 'bg-gray-700/50';\n  };\n\n  // usedDecks and decksLeft are already defined above with useMemo\n\n  if (isLoading) {\n    return (\n      <div className=\"min-h-screen flex items-center justify-center bg-gray-900\">\n        <div className=\"text-center\">\n          <div className=\"w-16 h-16 border-4 border-blue-500 border-t-transparent rounded-full animate-spin mx-auto mb-4\"></div>\n          <h1 className=\"text-2xl font-bold text-white\">Card Counter Pro</h1>\n          <p className=\"text-gray-400 mt-2\">Loading trainer...</p>\n        </div>\n      </div>\n    );\n  }\n\n  // Render a card with proper styling (only showing rank)\n  const renderCard = (card, index) => (\n    <div \n      key={index}\n      className={`inline-block w-8 h-12 md:w-10 md:h-14 mx-0.5 rounded-md flex items-center justify-center text-sm font-bold ${\n        currentSystem.cardValues[card.rank] > 0 ? 'bg-green-900/50 text-green-300' :\n        currentSystem.cardValues[card.rank] < 0 ? 'bg-red-900/50 text-red-300' :\n        'bg-white/10 text-white'\n      }`}\n      title={`${card.rank} (${currentSystem.cardValues[card.rank] >= 0 ? '+' : ''}${currentSystem.cardValues[card.rank]})`}\n    >\n      {card.rank}\n    </div>\n  );\n\n  return (\n    <div className=\"min-h-screen bg-gray-900 text-white p-4 md:p-6\">\n      <div className=\"max-w-2xl mx-auto bg-gray-800 rounded-xl shadow-2xl overflow-hidden\" style={{ minHeight: '90vh', display: 'flex', flexDirection: 'column' }}>\n        {/* Header */}\n        <div className=\"bg-gray-900 p-6 border-b border-gray-700\">\n          <h1 className=\"text-2xl font-bold text-center\">Card Counter Trainer</h1>\n          <p className=\"text-center text-gray-400 text-sm mt-1\">{currentSystem.name} System</p>\n          \n          <div className=\"mt-4\">\n            <div className=\"flex items-center justify-center gap-2\">\n              <label htmlFor=\"counting-system\" className=\"text-sm text-gray-300\">\n                Counting System:\n              </label>\n              <div className=\"relative\">\n                <select\n                  id=\"counting-system\"\n                  value={selectedSystem}\n                  onChange={(e) => {\n                    setSelectedSystem(e.target.value);\n                    setCards([]);\n                    setRunningCount(0);\n                  }}\n                  className=\"bg-gray-800 border border-gray-700 text-white text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 p-2 pr-8 appearance-none\"\n                >\n                  {Object.values(COUNTING_SYSTEMS).map((system) => (\n                    <option key={system.id} value={system.id}>\n                      {system.name}\n                    </option>\n                  ))}\n                </select>\n                <div className=\"pointer-events-none absolute inset-y-0 right-0 flex items-center px-2 text-gray-400\">\n                  <svg className=\"fill-current h-4 w-4\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\">\n                    <path d=\"M9.293 12.95l.707.707L15.657 8l-1.414-1.414L10 10.828 5.757 6.586 4.343 8z\"/>\n                  </svg>\n                </div>\n              </div>\n              <button\n                onClick={() => setShowSystemInfo(!showSystemInfo)}\n                className=\"text-blue-400 hover:text-blue-300 text-sm\"\n                aria-label=\"System info\"\n              >\n                <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-5 w-5\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n                  <path fillRule=\"evenodd\" d=\"M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-7-4a1 1 0 11-2 0 1 1 0 012 0zM9 9a1 1 0 000 2v3a1 1 0 001 1h.01a1 1 0 100-2H10V9z\" clipRule=\"evenodd\" />\n                </svg>\n              </button>\n            </div>\n            \n            {showSystemInfo && (\n              <div className=\"mt-3 p-3 bg-gray-800 rounded-lg text-sm\">\n                <h4 className=\"font-semibold text-white mb-1\">{currentSystem.name} System</h4>\n                <p className=\"text-gray-300 mb-2\">{currentSystem.description}</p>\n                <div className=\"grid grid-cols-3 gap-2 text-xs\">\n                  <div className=\"p-2 bg-green-900/30 rounded\">\n                    <div className=\"font-bold\">+{Object.entries(currentSystem.cardValues).filter(([_, v]) => v > 0)[0]?.[1] || 0}</div>\n                    <div>{Object.entries(currentSystem.cardValues)\n                      .filter(([_, v]) => v > 0)\n                      .map(([k]) => k)\n                      .join(', ')}\n                    </div>\n                  </div>\n                  <div className=\"p-2 bg-gray-700/30 rounded\">\n                    <div className=\"font-bold\">0</div>\n                    <div>{Object.entries(currentSystem.cardValues)\n                      .filter(([_, v]) => v === 0)\n                      .map(([k]) => k)\n                      .join(', ')}\n                    </div>\n                  </div>\n                  <div className=\"p-2 bg-red-900/30 rounded\">\n                    <div className=\"font-bold\">{Object.entries(currentSystem.cardValues).filter(([_, v]) => v < 0)[0]?.[1] || 0}</div>\n                    <div>{Object.entries(currentSystem.cardValues)\n                      .filter(([_, v]) => v < 0)\n                      .map(([k]) => k)\n                      .join(', ')}\n                    </div>\n                  </div>\n                </div>\n                {!currentSystem.balanced && (\n                  <div className=\"mt-2 text-xs text-yellow-300\">\n                    Note: This is an unbalanced system. The running count is used directly for betting.\n                  </div>\n                )}\n              </div>\n            )}\n          </div>\n        </div>\n\n        {/* Main Content */}\n        <div className=\"p-6 flex-grow\">\n          {/* Card Input Section */}\n          <div className=\"mb-6 bg-gray-900/20 p-4 rounded-lg\">\n            <div className=\"flex justify-between items-center mb-4\">\n              <h3 className=\"text-sm font-medium text-gray-300\">Karten eingeben</h3>\n              <div className=\"flex items-center space-x-2\">\n                <span className=\"text-xs text-gray-400\">Modus:</span>\n                <div className=\"inline-flex rounded-md shadow-sm\" role=\"group\">\n                  <button\n                    type=\"button\"\n                    onClick={() => setInputMode('player')}\n                    className={`px-3 py-1 text-sm font-medium rounded-l-md ${\n                      inputMode === 'player' \n                        ? 'bg-purple-700 text-white' \n                        : 'bg-gray-700 text-gray-300 hover:bg-gray-600'\n                    }`}\n                  >\n                    Spieler\n                  </button>\n                  <button\n                    type=\"button\"\n                    onClick={() => setInputMode('dealer')}\n                    className={`px-3 py-1 text-sm font-medium rounded-r-md ${\n                      inputMode === 'dealer' \n                        ? 'bg-blue-700 text-white' \n                        : 'bg-gray-700 text-gray-300 hover:bg-gray-600'\n                    }`}\n                  >\n                    Dealer\n                  </button>\n                </div>\n              </div>\n            </div>\n            \n            {/* Card Buttons */}\n            <div className=\"grid grid-cols-5 gap-2 mb-4\">\n              {cardRanks.map(rank => (\n                <button\n                  key={rank}\n                  onClick={() => addCardToHistory(rank)}\n                  className={`h-12 flex items-center justify-center rounded-md font-medium text-white transition-all\n                    ${inputMode === 'player' ? 'bg-purple-900/70 hover:bg-purple-800/90' : 'bg-blue-900/70 hover:bg-blue-800/90'}\n                    hover:scale-105 active:scale-95`}\n                >\n                  {rank}\n                </button>\n              ))}\n            </div>\n            \n            {/* Current Hands */}\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4 mb-4\">\n              <div className=\"bg-gray-900/30 p-3 rounded-lg\">\n                <h4 className=\"text-xs font-medium text-gray-400 mb-2\">Deine Hand</h4>\n                <div className=\"flex flex-wrap gap-1 min-h-10\">\n                  {playerCards.length > 0 ? (\n                    playerCards.map((card, index) => (\n                      <div \n                        key={card.id}\n                        className=\"w-8 h-10 flex items-center justify-center rounded-md bg-purple-900/70 text-white text-sm font-medium\"\n                        onClick={() => removeCardFromHistory(card.id)}\n                      >\n                        {card.rank}\n                      </div>\n                    ))\n                  ) : (\n                    <div className=\"text-gray-500 text-sm\">Keine Karten</div>\n                  )}\n                </div>\n                <div className=\"mt-1 text-xs text-gray-400\">\n                  Wert: {playerHandValue > 0 ? playerHandValue : '-'}\n                </div>\n              </div>\n              \n              <div className=\"bg-gray-900/30 p-3 rounded-lg\">\n                <h4 className=\"text-xs font-medium text-gray-400 mb-2\">Dealer Hand</h4>\n                <div className=\"flex flex-wrap gap-1 min-h-10\">\n                  {dealerCards.length > 0 ? (\n                    dealerCards.map((card, index) => (\n                      <div \n                        key={card.id}\n                        className=\"w-8 h-10 flex items-center justify-center rounded-md bg-blue-900/70 text-white text-sm font-medium\"\n                        onClick={() => removeCardFromHistory(card.id)}\n                      >\n                        {card.rank}\n                      </div>\n                    ))\n                  ) : (\n                    <div className=\"text-gray-500 text-sm\">Keine Karten</div>\n                  )}\n                </div>\n                <div className=\"mt-1 text-xs text-gray-400\">\n                  Wert: {dealerHandValue > 0 ? dealerHandValue : '-'}\n                </div>\n              </div>\n            </div>\n            \n            <div className=\"flex justify-between items-center\">\n              <button\n                onClick={clearAllCards}\n                className=\"px-3 py-1 text-xs bg-red-900/50 hover:bg-red-800/70 text-red-200 rounded transition-colors\"\n              >\n                Alle Karten zurücksetzen\n              </button>\n              {isCalculating ? (\n                <div className=\"px-4 py-2 bg-green-800/50 text-white text-sm font-medium rounded flex items-center\">\n                  <svg className=\"animate-spin -ml-1 mr-2 h-4 w-4 text-white\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\">\n                    <circle className=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" strokeWidth=\"4\"></circle>\n                    <path className=\"opacity-75\" fill=\"currentColor\" d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"></path>\n                  </svg>\n                  Berechne...\n                </div>\n              ) : (\n                <button\n                  onClick={handleSimulationClick}\n                  disabled={playerCards.length === 0 || dealerCards.length === 0}\n                  className={`px-4 py-2 text-white text-sm font-medium rounded transition-colors ${\n                    playerCards.length > 0 && dealerCards.length > 0 \n                      ? 'bg-green-700 hover:bg-green-800' \n                      : 'bg-gray-600 cursor-not-allowed'\n                  }`}\n                >\n                  Empfohlene Aktion berechnen\n                </button>\n              )}\n            </div>\n          </div>\n          \n          {/* Bet Recommendation */}\n          <div className=\"bg-gray-900/50 p-4 rounded-lg\">\n            <div className=\"flex items-center justify-between mb-2\">\n              <h3 className=\"text-sm font-medium text-gray-300\">Bet</h3>\n              <span className=\"text-xs text-gray-400\">Recommendation</span>\n            </div>\n            <div className=\"text-3xl font-bold\">{betRec.unit}</div>\n            <div className=\"text-xs text-gray-400 mt-1\">{betRec.text}</div>\n          </div>\n          \n          {/* Card History */}\n          <div className=\"mb-6 bg-gray-900/20 p-4 rounded-lg relative group\">\n            <div className=\"absolute top-2 right-2\">\n              <div className=\"relative group\">\n                <button \n                  className=\"text-gray-400 hover:text-white text-sm w-5 h-5 flex items-center justify-center rounded-full bg-gray-800/50\"\n                  title=\"Hilfe anzeigen\"\n                  onClick={() => document.getElementById('cardHistoryHelp').classList.toggle('hidden')}\n                >\n                  ?\n                </button>\n                <div id=\"cardHistoryHelp\" className=\"hidden absolute right-0 top-full mt-1 w-64 p-3 bg-gray-800 text-xs text-gray-300 rounded shadow-lg z-50\">\n                  <h4 className=\"font-bold mb-2\">Kartenverlauf - Hilfe</h4>\n                  <ul className=\"space-y-1\">\n                    <li>• Karten durch Leerzeichen oder Kommas eingeben (z.B. \"A K 10\" oder \"A,K,10\")</li>\n                    <li>• Klicken Sie auf eine Karte im Verlauf, um sie zu entfernen</li>\n                    <li>• Der Zähler aktualisiert sich automatisch</li>\n                    <li>• Farben werden ignoriert, nur die Werte zählen</li>\n                  </ul>\n                  <button \n                    onClick={() => document.getElementById('cardHistoryHelp').classList.add('hidden')}\n                    className=\"mt-2 text-blue-400 hover:text-blue-300 text-xs\"\n                  >\n                    Schließen\n                  </button>\n                </div>\n              </div>\n            </div>\n            \n            <div className=\"flex justify-between items-center mb-3\">\n              <h3 className=\"text-sm font-medium text-gray-300\">Kartenverlauf</h3>\n              <button\n                onClick={clearAllCards}\n                className=\"text-xs bg-red-900/50 hover:bg-red-800/70 px-2 py-1 rounded transition-colors disabled:opacity-50 disabled:cursor-not-allowed\"\n                disabled={cardHistory.length === 0}\n                title=\"Entfernt alle Karten aus dem Verlauf\"\n              >\n                Alles zurücksetzen\n              </button>\n            </div>\n            \n            <div className=\"mb-4 p-3 bg-gray-800/30 rounded\">\n              <h4 className=\"text-xs text-gray-400 mb-2\">Aktive Karten</h4>\n              <div className=\"flex flex-wrap gap-1 min-h-8\">\n                {Object.entries(uniqueCardCounts).length > 0 ? (\n                  Object.entries(uniqueCardCounts).map(([rank, count]) => (\n                    <div key={rank} className=\"relative group\">\n                      <div className={`inline-flex items-center justify-center w-8 h-8 rounded ${\n                        currentSystem.cardValues[rank] > 0 ? 'bg-green-900/50' :\n                        currentSystem.cardValues[rank] < 0 ? 'bg-red-900/50' : 'bg-gray-700/50'\n                      }`}>\n                        <span className=\"text-sm\">{rank}</span>\n                        {count > 1 && (\n                          <span className=\"absolute -top-1 -right-1 bg-blue-600 text-white text-xs rounded-full w-4 h-4 flex items-center justify-center\">\n                            {count}\n                          </span>\n                        )}\n                      </div>\n                      <div className=\"absolute bottom-full left-1/2 transform -translate-x-1/2 mb-1 px-2 py-1 text-xs text-white bg-gray-800 rounded opacity-0 group-hover:opacity-100 transition-opacity whitespace-nowrap\">\n                        {rank} ({currentSystem.cardValues[rank] >= 0 ? '+' : ''}{currentSystem.cardValues[rank]}) × {count}\n                      </div>\n                    </div>\n                  ))\n                ) : (\n                  <div className=\"text-gray-500 text-sm\">Keine Karten gespielt</div>\n                )}\n              </div>\n            </div>\n            \n            <div className=\"p-2 bg-gray-800/50 rounded\">\n              <div className=\"flex items-center justify-between mb-2\">\n                <h4 className=\"text-xs text-gray-400\">Vollständiger Verlauf ({cardHistory.length})</h4>\n                <div className=\"text-xs text-gray-500\">Klicken zum Entfernen</div>\n              </div>\n              <div className=\"flex flex-wrap gap-1 min-h-8 max-h-24 overflow-y-auto p-1\">\n                {cardHistory.length > 0 ? (\n                  [...cardHistory].reverse().map((card) => (\n                    <button\n                      key={card.id}\n                      onClick={() => removeCardFromHistory(card.id)}\n                      className=\"relative group transition-transform hover:scale-110 active:scale-95\"\n                      title={`${card.source === 'dealer' ? 'Dealer' : 'Spieler'}: ${card.rank} • ${new Date(card.timestamp).toLocaleTimeString()} (zum Entfernen klicken)`}\n                    >\n                      <div className={`inline-block w-6 h-6 text-xs flex items-center justify-center rounded text-xs ${\n                        card.source === 'dealer' \n                          ? 'bg-blue-900/60 hover:bg-red-900/70' \n                          : 'bg-purple-900/60 hover:bg-red-900/70'\n                      } transition-colors`}>\n                        {card.rank}\n                      </div>\n                    </button>\n                  ))\n                ) : (\n                  <div className=\"text-gray-500 text-sm\">Keine Karten im Verlauf</div>\n                )}\n              </div>\n            </div>\n            \n            <h3 className=\"text-sm font-medium text-gray-300 mb-3\">Deck Information</h3>\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n              <div>\n                <label className=\"block text-xs text-gray-400 mb-1\">Number of Decks</label>\n                <div className=\"flex items-center\">\n                  <button\n                    onClick={() => setDecksRemaining(prev => Math.max(1, Math.floor(prev) - 1))}\n                    className=\"px-3 py-1 bg-gray-700 hover:bg-gray-600 rounded-l-md transition-colors\"\n                  >\n                    -\n                  </button>\n                  <input\n                    type=\"number\"\n                    min=\"1\"\n                    max=\"10\"\n                    value={decksRemaining}\n                    onChange={(e) => setDecksRemaining(Math.max(1, Math.min(10, Number(e.target.value) || 1)))}\n                    className=\"w-16 text-center bg-gray-800 border-t border-b border-gray-700 py-1 text-white\"\n                  />\n                  <button\n                    onClick={() => setDecksRemaining(prev => Math.min(10, Math.ceil(prev) + 1))}\n                    className=\"px-3 py-1 bg-gray-700 hover:bg-gray-600 rounded-r-md transition-colors\"\n                  >\n                    +\n                  </button>\n                </div>\n              </div>\n              \n              <div>\n                <div className=\"text-xs text-gray-400 mb-1\">Cards in Play</div>\n                <div className=\"text-sm\">\n                  {cards.length} / {totalCards} cards ({usedDecks.toFixed(1)} decks used, {remainingDecks.toFixed(1)} decks left)\n                </div>\n              </div>\n            </div>\n          </div>\n          \n          {/* Error message */}\n          {error && (\n            <p id=\"card-error\" className=\"mt-2 text-sm text-red-400\">\n              <svg className=\"w-4 h-4 inline mr-1\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\">\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 8v4m0 4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z\" />\n              </svg>\n              {error}\n            </p>\n          )}\n          \n          {/* Quick Buttons */}\n          <div className=\"grid grid-cols-5 gap-2 mt-3\">\n            {Object.entries(currentSystem.cardValues).map(([card]) => (\n              <button\n                key={card}\n                onClick={() => handleCardInput(card)}\n                className={`px-2 py-2 text-sm font-medium rounded-md transition-colors focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-offset-gray-900 ${\n                  getCardColorClass(currentSystem.cardValues[card])\n                }`}\n              >\n                {card}\n              </button>\n            ))}\n          </div>\n        </div>\n\n        {/* Card History */}\n        <div className=\"mb-6\">\n          <div className=\"flex justify-between items-center mb-2\">\n            <h3 className=\"text-sm font-medium text-gray-300\">Kartenverlauf</h3>\n            <div className=\"flex gap-2\">\n              <button\n                onClick={() => {\n                  const lastCard = [...cardHistory].pop();\n                  if (lastCard) {\n                    removeCardFromHistory(lastCard.id);\n                  }\n                }}\n                disabled={cardHistory.length === 0}\n                className=\"text-xs px-3 py-1.5 bg-gray-700 hover:bg-gray-600 rounded-md transition-colors disabled:opacity-50 disabled:cursor-not-allowed focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-offset-gray-900 focus:ring-blue-500\"\n              >\n                Letzte Karte entfernen\n              </button>\n              <button\n                onClick={clearAllCards}\n                className=\"text-xs px-3 py-1.5 bg-red-900/50 hover:bg-red-800/50 rounded-md transition-colors focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-offset-gray-900 focus:ring-red-500\"\n              >\n                Alle zurücksetzen\n              </button>\n            </div>\n          </div>\n          <div className=\"bg-gray-800/50 rounded-lg p-3 min-h-20 max-h-48 overflow-y-auto\">\n            {cardHistory.length > 0 ? (\n              <div className=\"flex flex-wrap gap-2\">\n                {cardHistory.map((card, index) => (\n                  <div\n                    key={card.id}\n                    className={`px-2.5 py-1 rounded-md text-sm font-mono ${card.source === 'player' ? 'bg-purple-900/50' : 'bg-blue-900/50'} text-white`}\n                    onClick={() => removeCardFromHistory(card.id)}\n                  >\n                    {card.rank} ({card.source})\n                  </div>\n                ))}\n              </div>\n            ) : (\n              <p className=\"text-gray-500 text-sm text-center py-4\">\n                Noch keine Karten hinzugefügt. Füge Karten über die Tasten oben hinzu.\n              </p>\n            )}\n          </div>\n        </div>\n        \n        {/* Help Panel */}\n        {showHelp && (\n          <div className=\"bg-gray-800 p-6 border-t border-gray-700\">\n            <h3 className=\"text-lg font-bold mb-3\">Anleitung</h3>\n            <ul className=\"space-y-2 text-sm text-gray-300\">\n              <li>• Wähle ein Kartenzählsystem aus dem Dropdown-Menü</li>\n              <li>• Klicke auf die Karten, um sie zur aktuellen Hand hinzuzufügen (Spieler oder Dealer)</li>\n              <li>• Nutze den Modus-Umschalter, um zwischen Spieler- und Dealer-Hand zu wechseln</li>\n              <li>• Der laufende Zähler aktualisiert sich automatisch mit jeder Karte</li>\n              <li>• Der True Count wird basierend auf dem ausgewählten System und den verbleibenden Decks berechnet</li>\n              <li>• Klicke auf eine Karte, um sie zu entfernen</li>\n              <li>• Nutze \"Alle zurücksetzen\", um alle Karten zu löschen</li>\n            </ul>\n            <div className=\"mt-4\">\n              <h4 className=\"font-semibold text-white mb-2\">Zum Zählsystem:</h4>\n              <ul className=\"space-y-2 text-sm\">\n                <li>• <span className=\"font-medium\">Hi-Lo:</span> Ausgeglichenes System mit True Count Umrechnung</li>\n                <li>• <span className=\"font-medium\">KO:</span> Unausgeglichenes System, verwendet direkt den laufenden Zähler</li>\n                <li>• <span className=\"font-medium\">Omega II:</span> Fortgeschrittenes System mit höherer Spielgenauigkeit</li>\n              </ul>\n            </div>\n            <button\n              onClick={() => setShowHelp(false)}\n              className=\"mt-6 w-full bg-blue-600 hover:bg-blue-700 text-white py-2 px-4 rounded transition-colors focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-offset-gray-800 focus:ring-blue-500\"\n            >\n              Verstanden!\n            </button>\n          </div>\n        )}\n\n        {/* Footer */}\n        <div className=\"bg-gray-900 p-3 border-t border-gray-800 flex justify-between items-center mt-auto\">\n          <button\n            onClick={() => setShowHelp(!showHelp)}\n            className=\"text-sm text-blue-400 hover:text-blue-300 flex items-center gap-1.5 transition-colors focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2 focus:ring-offset-gray-900 rounded px-2 py-1\"\n          >\n            <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-4 w-4\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n              <path fillRule=\"evenodd\" d=\"M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-8-3a1 1 0 00-.867.5 1 1 0 11-1.731-1A3 3 0 0113 8a3.001 3.001 0 01-2 2.83V11a1 1 0 11-2 0v-1a1 3 0 011.5-2.6 1 1 0 10-1-1.73z\" clipRule=\"evenodd\" />\n            </svg>\n            {showHelp ? 'Hilfe ausblenden' : 'Hilfe anzeigen'}\n          </button>\n          <div className=\"text-xs text-gray-500\">\n            {cardHistory.length} Karten • {usedDecks.toFixed(1)} Decks verwendet • {remainingDecks.toFixed(1)} Decks übrig\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default CardCounter;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}